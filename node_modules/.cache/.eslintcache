[{"/Users/rissriva/Desktop/ExpenseManagementSystem/expense-management-system/src/index.js":"1","/Users/rissriva/Desktop/ExpenseManagementSystem/expense-management-system/src/reportWebVitals.js":"2","/Users/rissriva/Desktop/ExpenseManagementSystem/expense-management-system/src/App.js":"3","/Users/rissriva/Desktop/ExpenseManagementSystem/expense-management-system/src/MainFile.js":"4","/Users/rissriva/Desktop/ExpenseManagementSystem/expense-management-system/src/redux/Reducers.js":"5","/Users/rissriva/Desktop/ExpenseManagementSystem/expense-management-system/src/redux/DummyApi.js":"6","/Users/rissriva/Desktop/ExpenseManagementSystem/expense-management-system/src/redux/Actions.js":"7","/Users/rissriva/Desktop/ExpenseManagementSystem/expense-management-system/src/redux/ActionCreators.js":"8","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/index.js":"9","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/App.js":"10","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reportWebVitals.js":"11","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Home.js":"12","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Employees.js":"13","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Client/Client.js":"14","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Client/AddClient.js":"15","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/Project.js":"16","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/ProjectHeader.js":"17","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/ProjectDashboard.js":"18","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/AddProject.js":"19","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/MainHeader/MainHeader.js":"20","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/ProjectSummaryHeader.js":"21","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/ProjectSummary.js":"22","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/ProjectSummaryDashboard.js":"23","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Expense/Expense.js":"24","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Expense/AddExpenseSheet.js":"25","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Expense/AddExpenseEntry.js":"26","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/login/Login.js":"27","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reducers/index.js":"28","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reducers/message.js":"29","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reducers/auth.js":"30","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/actions/types.js":"31","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Login/Login.js":"32","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/actions/auth.js":"33","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/services/auth.service.js":"34","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/store.js":"35","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Logout/Logout.js":"36","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Logout/LogoutConfirmation.js":"37","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/NavbarHeader/NavbarHeader.js":"38","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/services/constants.js":"39","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/services/project.service.js":"40","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/services/auth-header.js":"41","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reducers/project.js":"42","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/actions/project.js":"43","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/services/expense.service.js":"44","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reducers/client.js":"45","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/actions/client.js":"46","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/services/client.service.js":"47","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/actions/employees.js":"48","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/services/employee.service.js":"49","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reducers/employees.js":"50","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reducers/projectById.js":"51","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/actions/expense.actions.js":"52","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reducers/expense.reducer.js":"53","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/constants/expense.constants.js":"54","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Client/ClientHeader.js":"55","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Client/ClientDashboard.js":"56","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/PrivateRoute.js":"57","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reducers/projectExpense.js":"58","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Login/ChangePassword.js":"59","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Approval/Approvals.js":"60","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Approval/ApprovalHeader.js":"61","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reducers/expenseByStatus.js":"62","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Approval/ViewExpense.js":"63","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/services/attachments.service.js":"64","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reducers/attachments.reducer.js":"65","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/constants/attachments.constants.js":"66","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/index.js":"67","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/App.js":"68","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/store.js":"69","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/MainHeader/MainHeader.js":"70","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Employees.js":"71","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Home.js":"72","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/PrivateRoute.js":"73","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/NavbarHeader/NavbarHeader.js":"74","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Project/Project.js":"75","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Project/ProjectSummary.js":"76","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Client/Client.js":"77","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Login/Login.js":"78","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Login/ChangePassword.js":"79","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Expense/AddExpenseSheet.js":"80","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Approval/Approvals.js":"81","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Logout/Logout.js":"82","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Logout/LogoutConfirmation.js":"83","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/index.js":"84","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Project/ProjectDashboard.js":"85","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Project/ProjectHeader.js":"86","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Client/ClientDashboard.js":"87","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Project/ProjectSummaryHeader.js":"88","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Client/ClientHeader.js":"89","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Project/ProjectSummaryDashboard.js":"90","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/actions/client.js":"91","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/actions/expense.actions.js":"92","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/actions/project.js":"93","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/actions/auth.js":"94","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/actions/employees.js":"95","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Expense/AddExpenseEntry.js":"96","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Approval/ViewExpense.js":"97","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Approval/ApprovalHeader.js":"98","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/services/attachments.service.js":"99","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/auth.js":"100","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/message.js":"101","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/client.js":"102","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/project.js":"103","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/projectById.js":"104","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/projectExpense.js":"105","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/employees.js":"106","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/expense.reducer.js":"107","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/expenseByStatus.js":"108","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/attachments.reducer.js":"109","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Client/AddClient.js":"110","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Project/AddProject.js":"111","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/services/client.service.js":"112","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/actions/types.js":"113","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/services/project.service.js":"114","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/services/auth.service.js":"115","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/services/employee.service.js":"116","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/services/constants.js":"117","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/services/auth-header.js":"118","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/services/expense.service.js":"119","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/constants/expense.constants.js":"120","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/constants/attachments.constants.js":"121","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/AddEmployee.js":"122"},{"size":548,"mtime":1629844042440,"results":"123","hashOfConfig":"124"},{"size":362,"mtime":1629819971156,"results":"125","hashOfConfig":"124"},{"size":783,"mtime":1629869398957,"results":"126","hashOfConfig":"124"},{"size":575,"mtime":1629843660838,"results":"127","hashOfConfig":"124"},{"size":761,"mtime":1629828933826,"results":"128","hashOfConfig":"124"},{"size":483,"mtime":1629829357727,"results":"129","hashOfConfig":"124"},{"size":157,"mtime":1629828944641,"results":"130","hashOfConfig":"124"},{"size":437,"mtime":1629828956038,"results":"131","hashOfConfig":"124"},{"size":676,"mtime":1630795020682,"results":"132","hashOfConfig":"133"},{"size":2163,"mtime":1631483255504,"results":"134","hashOfConfig":"133"},{"size":362,"mtime":1629819971156,"results":"135","hashOfConfig":"136"},{"size":6581,"mtime":1631464251610,"results":"137","hashOfConfig":"133"},{"size":2162,"mtime":1631464050648,"results":"138","hashOfConfig":"133"},{"size":497,"mtime":1630935126194,"results":"139","hashOfConfig":"133"},{"size":15665,"mtime":1631467271290,"results":"140","hashOfConfig":"133"},{"size":1492,"mtime":1631465097382,"results":"141","hashOfConfig":"133"},{"size":319,"mtime":1630794295904,"results":"142","hashOfConfig":"133"},{"size":9515,"mtime":1631559217882,"results":"143","hashOfConfig":"133"},{"size":24398,"mtime":1631597951307,"results":"144","hashOfConfig":"133"},{"size":382,"mtime":1630794251909,"results":"145","hashOfConfig":"133"},{"size":424,"mtime":1630919570058,"results":"146","hashOfConfig":"133"},{"size":533,"mtime":1630851741366,"results":"147","hashOfConfig":"133"},{"size":5779,"mtime":1631547275182,"results":"148","hashOfConfig":"133"},{"size":4004,"mtime":1630964376975,"results":"149","hashOfConfig":"133"},{"size":14547,"mtime":1631592819967,"results":"150","hashOfConfig":"133"},{"size":20251,"mtime":1631542751655,"results":"151","hashOfConfig":"133"},{"size":1800,"mtime":1630416141200,"results":"152","hashOfConfig":"133"},{"size":605,"mtime":1631484819063,"results":"153","hashOfConfig":"133"},{"size":354,"mtime":1630794251919,"results":"154","hashOfConfig":"133"},{"size":961,"mtime":1630991317920,"results":"155","hashOfConfig":"133"},{"size":1497,"mtime":1630990789706,"results":"156","hashOfConfig":"133"},{"size":4546,"mtime":1631540931919,"results":"157","hashOfConfig":"133"},{"size":1453,"mtime":1630993769597,"results":"158","hashOfConfig":"133"},{"size":990,"mtime":1631465190758,"results":"159","hashOfConfig":"133"},{"size":474,"mtime":1631484588475,"results":"160","hashOfConfig":"133"},{"size":560,"mtime":1630964865959,"results":"161","hashOfConfig":"133"},{"size":747,"mtime":1630794295901,"results":"162","hashOfConfig":"133"},{"size":2593,"mtime":1630998930751,"results":"163","hashOfConfig":"133"},{"size":67,"mtime":1630794295909,"results":"164","hashOfConfig":"133"},{"size":1437,"mtime":1631465252500,"results":"165","hashOfConfig":"133"},{"size":207,"mtime":1630794507037,"results":"166","hashOfConfig":"133"},{"size":1054,"mtime":1630883579394,"results":"167","hashOfConfig":"133"},{"size":3924,"mtime":1630944228271,"results":"168","hashOfConfig":"133"},{"size":1331,"mtime":1631465243959,"results":"169","hashOfConfig":"133"},{"size":1157,"mtime":1630935126195,"results":"170","hashOfConfig":"133"},{"size":2771,"mtime":1631463780856,"results":"171","hashOfConfig":"133"},{"size":960,"mtime":1630935126197,"results":"172","hashOfConfig":"133"},{"size":768,"mtime":1630794295896,"results":"173","hashOfConfig":"133"},{"size":316,"mtime":1631465213493,"results":"174","hashOfConfig":"133"},{"size":468,"mtime":1630794295907,"results":"175","hashOfConfig":"133"},{"size":529,"mtime":1630945202355,"results":"176","hashOfConfig":"133"},{"size":4015,"mtime":1631484819079,"results":"177","hashOfConfig":"133"},{"size":1391,"mtime":1631465197408,"results":"178","hashOfConfig":"133"},{"size":948,"mtime":1631032703089,"results":"179","hashOfConfig":"133"},{"size":316,"mtime":1631454769706,"results":"180","hashOfConfig":"133"},{"size":7412,"mtime":1631559222824,"results":"181","hashOfConfig":"133"},{"size":465,"mtime":1630971236425,"results":"182","hashOfConfig":"133"},{"size":571,"mtime":1630945342778,"results":"183","hashOfConfig":"133"},{"size":7855,"mtime":1631466128188,"results":"184","hashOfConfig":"133"},{"size":8407,"mtime":1631597170752,"results":"185","hashOfConfig":"133"},{"size":342,"mtime":1630999984161,"results":"186","hashOfConfig":"133"},{"size":783,"mtime":1631032699786,"results":"187","hashOfConfig":"133"},{"size":6656,"mtime":1631552559284,"results":"188","hashOfConfig":"133"},{"size":709,"mtime":1631484846103,"results":"189","hashOfConfig":"133"},{"size":903,"mtime":1631484819062,"results":"190","hashOfConfig":"133"},{"size":658,"mtime":1631484819062,"results":"191","hashOfConfig":"133"},{"size":676,"mtime":1631630356734,"results":"192","hashOfConfig":"193"},{"size":2335,"mtime":1632162853103,"results":"194","hashOfConfig":"193"},{"size":474,"mtime":1631630356750,"results":"195","hashOfConfig":"193"},{"size":383,"mtime":1632247093769,"results":"196","hashOfConfig":"193"},{"size":2162,"mtime":1631630356713,"results":"197","hashOfConfig":"193"},{"size":6581,"mtime":1631630356717,"results":"198","hashOfConfig":"193"},{"size":465,"mtime":1631630356700,"results":"199","hashOfConfig":"193"},{"size":2654,"mtime":1632162592881,"results":"200","hashOfConfig":"193"},{"size":1492,"mtime":1631630356725,"results":"201","hashOfConfig":"193"},{"size":533,"mtime":1631630356728,"results":"202","hashOfConfig":"193"},{"size":497,"mtime":1631630356711,"results":"203","hashOfConfig":"193"},{"size":4546,"mtime":1631630356719,"results":"204","hashOfConfig":"193"},{"size":7855,"mtime":1631630356718,"results":"205","hashOfConfig":"193"},{"size":14501,"mtime":1632167638438,"results":"206","hashOfConfig":"193"},{"size":8352,"mtime":1632163071858,"results":"207","hashOfConfig":"193"},{"size":560,"mtime":1631630356720,"results":"208","hashOfConfig":"193"},{"size":747,"mtime":1631630356721,"results":"209","hashOfConfig":"193"},{"size":605,"mtime":1631630356741,"results":"210","hashOfConfig":"193"},{"size":9515,"mtime":1632246808662,"results":"211","hashOfConfig":"193"},{"size":319,"mtime":1631630356727,"results":"212","hashOfConfig":"193"},{"size":7394,"mtime":1632163119133,"results":"213","hashOfConfig":"193"},{"size":424,"mtime":1631630356731,"results":"214","hashOfConfig":"193"},{"size":316,"mtime":1631630356712,"results":"215","hashOfConfig":"193"},{"size":5736,"mtime":1632163342121,"results":"216","hashOfConfig":"193"},{"size":2771,"mtime":1631630356702,"results":"217","hashOfConfig":"193"},{"size":4015,"mtime":1631630356704,"results":"218","hashOfConfig":"193"},{"size":3924,"mtime":1631630356705,"results":"219","hashOfConfig":"193"},{"size":1453,"mtime":1631630356701,"results":"220","hashOfConfig":"193"},{"size":768,"mtime":1631630356703,"results":"221","hashOfConfig":"193"},{"size":20178,"mtime":1632167509462,"results":"222","hashOfConfig":"193"},{"size":6656,"mtime":1631630356710,"results":"223","hashOfConfig":"193"},{"size":342,"mtime":1631630356708,"results":"224","hashOfConfig":"193"},{"size":709,"mtime":1631630356744,"results":"225","hashOfConfig":"193"},{"size":961,"mtime":1631630356736,"results":"226","hashOfConfig":"193"},{"size":354,"mtime":1630794251919,"results":"227","hashOfConfig":"193"},{"size":1157,"mtime":1631630356737,"results":"228","hashOfConfig":"193"},{"size":1054,"mtime":1631630356741,"results":"229","hashOfConfig":"193"},{"size":529,"mtime":1631630356743,"results":"230","hashOfConfig":"193"},{"size":571,"mtime":1631630356744,"results":"231","hashOfConfig":"193"},{"size":468,"mtime":1631630356738,"results":"232","hashOfConfig":"193"},{"size":1391,"mtime":1631630356738,"results":"233","hashOfConfig":"193"},{"size":783,"mtime":1631630356740,"results":"234","hashOfConfig":"193"},{"size":903,"mtime":1631630356734,"results":"235","hashOfConfig":"193"},{"size":15665,"mtime":1631630356710,"results":"236","hashOfConfig":"193"},{"size":24398,"mtime":1631630356723,"results":"237","hashOfConfig":"193"},{"size":960,"mtime":1631630356746,"results":"238","hashOfConfig":"193"},{"size":1497,"mtime":1631630356706,"results":"239","hashOfConfig":"193"},{"size":1437,"mtime":1631630356749,"results":"240","hashOfConfig":"193"},{"size":990,"mtime":1631630356745,"results":"241","hashOfConfig":"193"},{"size":495,"mtime":1632166206894,"results":"242","hashOfConfig":"193"},{"size":67,"mtime":1632162188548,"results":"243","hashOfConfig":"193"},{"size":207,"mtime":1630794507037,"results":"244","hashOfConfig":"193"},{"size":1394,"mtime":1632162965952,"results":"245","hashOfConfig":"193"},{"size":948,"mtime":1631630356732,"results":"246","hashOfConfig":"193"},{"size":658,"mtime":1631630356731,"results":"247","hashOfConfig":"193"},{"size":9070,"mtime":1632169375111,"results":"248","hashOfConfig":"193"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},"1ebeaic",{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"251"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},"155riyo",{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b31fsb",{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"269"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"269"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"304"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"269"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"269"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"269"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"269"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"269"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"269"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"269"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"269"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"269"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"269"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"269"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"269"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"269"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"269"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"269"},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"269"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"269"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"269"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},"39a7k4",{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"411"},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"411"},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"411"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"411"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"411"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"411"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"411"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"411"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"411"},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"411"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"411"},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"411"},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"411"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"411"},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"411"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"411"},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"411"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"411"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"411"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"411"},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"411"},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"411"},"/Users/rissriva/Desktop/ExpenseManagementSystem/expense-management-system/src/index.js",[],["527","528"],"/Users/rissriva/Desktop/ExpenseManagementSystem/expense-management-system/src/reportWebVitals.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/expense-management-system/src/App.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/expense-management-system/src/MainFile.js",["529","530"],"import {fetchUsers} from './redux/DummyApi';\nimport {useSelector, useDispatch} from 'react-redux'\nimport React from 'react';\n\nexport default function MainFile(){\n    const state = useSelector(state => state);\n    // mapDispatchToProps\n    const dispatch = useDispatch();\n    let {loading, errors, users} = state;\n\n    React.useEffect(() => {\n        dispatch(fetchUsers());\n    }, []);\n\n    return <>\n            {\n                loading ? <h4>Loading ... </h4>:users.map(user => {return <ul key = {user.id}><li>{user.name}</li></ul>})    \n            }\n        </>\n    \n}\n\n","/Users/rissriva/Desktop/ExpenseManagementSystem/expense-management-system/src/redux/Reducers.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/expense-management-system/src/redux/DummyApi.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/expense-management-system/src/redux/Actions.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/expense-management-system/src/redux/ActionCreators.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/index.js",[],["531","532"],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/App.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reportWebVitals.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Home.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Employees.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Client/Client.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Client/AddClient.js",["533","534","535"],"import React, { useRef } from \"react\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { addClient, updateClient } from \"../../actions/client\";\n\nexport default function AddClient(props) {\n  const dispatch = useDispatch();\n\n  const schema = yup.object().shape({\n    fullName: yup.string().required(\"Client Name is required\"),\n    nickName: yup.string().required(\"Client Nick Name is required\"),\n    email: yup\n      .string()\n      .email()\n      .required(\"Email is required\")\n      .typeError(\"Invalid Email\"),\n    website: yup\n      .string()\n      .matches(\n        /^(?:https?:\\/\\/|s?ftps?:\\/\\/)?(?!www | www\\.)[A-Za-z0-9_-]+\\.+[A-Za-z0-9.\\/%&=\\?_:;-]+$/\n      )\n      .typeError(\"Invalid URL\"),\n    billDetails: yup.string(),\n    address: yup.object().shape({\n      addressLine1: yup.string().required(\"Address1 is required\"),\n      addressLine2: yup.string().required(\"Address2 is required\"),\n      city: yup.string().required(\"City is required\"),\n      state: yup.string().required(\"State is required\"),\n      country: yup.string().required(\"Country is required\"),\n      zipcode: yup\n        .number()\n        .typeError(\"Zipcode must be a numerical value\")\n        .required(\"Zipcode is required\"),\n      telephone1: yup\n        .number()\n        .required(\"Telephone is required\")\n        .typeError(\"Telephone must be a numerical value\"),\n      telephone2: yup.number().typeError(\"Telephone must be a numerical value\"),\n      fax: yup.string(),\n    }),\n  });\n  const getModifiedValues = (values, initialValues) => {\n    let modifiedValues = {};\n\n    if (values) {\n      Object.entries(values).forEach((entry) => {\n        let key = entry[0];\n        let value = entry[1];\n\n        if (value !== initialValues[key]) {\n          modifiedValues[key] = value;\n        }\n      });\n    }\n\n    return modifiedValues;\n  };\n  const onSuccess = (values) => {\n    if (props.method === \"Add\") {\n      dispatch(addClient(values))\n        .then(() => {\n          // history.push(\"/home\");\n          props.onHide();\n        })\n        .catch(() => {\n          alert(\"Could Not Add Client!\");\n          // setLoading(false);\n        });\n    } else if (props.method === \"Update\") {\n      const modifiedValues = getModifiedValues(values, props.data);\n      dispatch(updateClient(props.index, modifiedValues))\n        .then(() => {\n          // history.push(\"/home\");\n          props.onHide();\n        })\n        .catch(() => {\n          // setLoading(false);\n          alert(\"Could Not Update Client!\");\n          return;\n        });\n    }\n  };\n\n  const formRef = useRef();\n  const handleSubmit = () => {\n    if (formRef.current) {\n      formRef.current.handleSubmit();\n    }\n  };\n\n  return (\n    <Modal onHide={props.onHide} show={props.show} backdrop=\"static\">\n      <Modal.Header closeButton>\n        <Modal.Title>{props.method} Client</Modal.Title>\n      </Modal.Header>\n      <Formik\n        validationSchema={schema}\n        validateOnChange={true}\n        onSubmit={onSuccess}\n        initialValues={props.data}\n        innerRef={formRef}\n      >\n        {({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          values,\n          touched,\n          isValid,\n          errors,\n        }) => (\n          <Form noValidate onSubmit={handleSubmit}>\n            <Modal.Body>\n              <Row>\n                <Form.Group as={Col} controlId=\"clientName\">\n                  <Form.Label>Client Name</Form.Label>\n                  <Form.Control\n                    name=\"fullName\"\n                    value={values.fullName}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    isInvalid={touched.fullName && errors.fullName}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.fullName}\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Row>\n              <br />\n              <Tabs defaultActiveKey=\"basic\">\n                <Tab eventKey=\"basic\" title=\"Basic\">\n                  <br />\n                  <Row>\n                    <Form.Group as={Col} controlId=\"clientNick\">\n                      <Form.Label>Client Nick</Form.Label>\n                      <Form.Control\n                        name=\"nickName\"\n                        value={values.nickName}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.nickName && errors.nickName}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.nickName}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"email\">\n                      <Form.Label>Email address</Form.Label>\n                      <Form.Control\n                        name=\"email\"\n                        value={values.email}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.email && errors.email}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.email}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Group as={Col} controlId=\"website\">\n                      <Form.Label>Website</Form.Label>\n                      <Form.Control\n                        name=\"website\"\n                        value={values.website}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.website && errors.website}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.website}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"billingRate\">\n                      <Form.Label>Default Billing Rate</Form.Label>\n                      <Form.Control\n                        name=\"billDetails\"\n                        value={values.billDetails}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.billDetails && errors.billDetails}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.billDetails}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Row>\n                </Tab>\n\n                <Tab eventKey=\"details\" title=\"Details\">\n                  <br />\n                  <Row>\n                    <Form.Group as={Col} controlId=\"address1\">\n                      <Form.Label>Address1</Form.Label>\n                      <Form.Control\n                        name=\"address.addressLine1\"\n                        value={values.address.addressLine1}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          errors.address &&\n                          touched.address &&\n                          touched.address.addressLine1 &&\n                          errors.address.addressLine1\n                        }\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.address && errors.address.addressLine1}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"address2\">\n                      <Form.Label>Address2</Form.Label>\n                      <Form.Control\n                        name=\"address.addressLine2\"\n                        value={values.address.addressLine2}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          errors.address &&\n                          touched.address &&\n                          touched.address.addressLine2 &&\n                          errors.address.addressLine2\n                        }\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.address && errors.address.addressLine2}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Group as={Col} controlId=\"country\">\n                      <Form.Label>Country</Form.Label>\n                      <Form.Select\n                        name=\"address.country\"\n                        defaultValue=\"Choose...\"\n                        value={values.address.country}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          errors.address &&\n                          touched.address &&\n                          touched.address.country &&\n                          errors.address.country\n                        }\n                      >\n                        <option key=\"SC\" value=\"\" disabled>\n                          Select Country\n                        </option>\n\n                        <option value=\"US\">US</option>\n                        <option value=\"India\">India</option>\n                        <option value=\"Canada\">Canada</option>\n                      </Form.Select>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"city\">\n                      <Form.Label>City</Form.Label>\n                      <Form.Control\n                        name=\"address.city\"\n                        value={values.address.city}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          errors.address &&\n                          touched.address &&\n                          touched.address.city &&\n                          errors.address.city\n                        }\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.address && errors.address.city}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Group as={Col} controlId=\"state\">\n                      <Form.Label>State</Form.Label>\n                      <Form.Control\n                        name=\"address.state\"\n                        value={values.address.state}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          errors.address &&\n                          touched.address &&\n                          touched.address.state &&\n                          errors.address.state\n                        }\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.address && errors.address.state}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"zipcode\">\n                      <Form.Label>Zipcode</Form.Label>\n                      <Form.Control\n                        name=\"address.zipcode\"\n                        value={values.address.zipcode}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          errors.address &&\n                          touched.address &&\n                          touched.address.zipcode &&\n                          errors.address.zipcode\n                        }\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.address && errors.address.zipcode}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Group as={Col} controlId=\"telephone1\">\n                      <Form.Label>Telephone1</Form.Label>\n                      <Form.Control\n                        name=\"address.telephone1\"\n                        value={values.address.telephone1}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          errors.address &&\n                          touched.address &&\n                          touched.address.telephone1 &&\n                          errors.address.telephone1\n                        }\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.address && errors.address.telephone1}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"telephone2\">\n                      <Form.Label>Telephone2</Form.Label>\n                      <Form.Control\n                        name=\"address.telephone2\"\n                        value={values.address.telephone2}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          errors.address &&\n                          touched.address &&\n                          touched.address.telephone2 &&\n                          errors.address.telephone2\n                        }\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.address && errors.address.telephone2}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Group as={Col} controlId=\"fax\">\n                      <Form.Label>Fax</Form.Label>\n                      <Form.Control\n                        name=\"address.fax\"\n                        value={values.address.fax}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          errors.address &&\n                          touched.address &&\n                          touched.address.fax &&\n                          errors.address.fax\n                        }\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.address && errors.address.fax}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Row>\n                </Tab>\n              </Tabs>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button\n                variant=\"success\"\n                type=\"submit\"\n                onClick={handleSubmit}\n                disabled={values.fullName.length === 0 || !isValid}\n              >\n                {props.method} Client\n              </Button>\n              <Button variant=\"secondary\" onClick={props.onHide}>\n                Close\n              </Button>\n            </Modal.Footer>\n          </Form>\n        )}\n      </Formik>\n    </Modal>\n  );\n}\n","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/Project.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/ProjectHeader.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/ProjectDashboard.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/AddProject.js",["536","537","538","539","540"],"import React from \"react\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport { Dropdown, DropdownButton, ToastContainer } from \"react-bootstrap\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Toast } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addProjects } from \"../../actions/project\";\nimport { getProjects } from \"../../actions/project\";\nimport { editProject } from \"../../actions/project\";\nimport { useRef } from \"react\";\n\nconst AddProject = (props) => {\n  const schema = yup.object().shape({\n    projectName: yup.string().required(\"Project Name is required\"),\n    client: yup.string().required(\"Please select a Client\"),\n    projectManager: yup.string().required(\"Please select a Project Manager\"),\n    projectDescription: yup.string(),\n    duration: yup\n      .number()\n      .min(0, \"Minumim value must be 0\")\n      .typeError(\"Duration must be a numerical value\")\n      .required(\"Duration is required\"),\n    cost: yup\n      .number()\n      .min(0, \"Minumim value must be 0\")\n      .typeError(\"Cost must be a numerical value\")\n      .required(\"Cost is required\"),\n    startDate: yup\n      .date()\n      .min(new Date(\"01/01/2000\"), \"Start Date must be after 01-01-2000\")\n      .max(yup.ref(\"endDate\"), \"Start Date must be before Due Date\")\n      .required(\"Start Date is required\"),\n    endDate: yup\n      .date()\n      .min(yup.ref(\"startDate\"), \"Due Date must be after Start Date\")\n      .required(\"Due Date is required\"),\n  });\n  const [toast, setToast] = useState(false);\n  const [counter, setCounter] = useState(0);\n  const closeToast = () => setToast(false);\n  const openToast = () => setToast(true);\n\n  const [toastEdit, setToastEdit] = useState(false);\n  const closeToastEdit = () => setToastEdit(false);\n  const openToastEdit = () => setToastEdit(true);\n\n  const { employees } = useSelector((state) => state.employees);\n  const { clients } = useSelector((state) => state.client);\n  const { user: currentUser } = useSelector((state) => state.auth);\n  let { id } = currentUser;\n  var data = props.data;\n  if (props.method === \"Edit\") {\n    id = data.projectManager;\n  }\n  else{\n    id = currentUser.id;\n  }\n  \n  const k = employees.filter((e) => Number(e.id) === Number(id))[0];\n  const [membersAdded, setMembersAdded] = useState([\n    { firstname: \"\", lastname: \"\", id: -1 },\n  ]);\n  const [track, setTrack] = useState(data.projectID);\n\n  if(track!==data.projectID){\n    setMembersAdded([\n      { firstname: \"\", lastname: \"\", id: -1 },\n    ])\n    setTrack(data.projectID);\n    setCounter(0);\n  }\n\n  if (\n    (membersAdded.length === 1 &&\n    membersAdded[0].id === -1 &&\n    k !== undefined)\n  ) {\n    let membersAdded_cpy = [k];\n    setMembersAdded(membersAdded_cpy);\n  }\n  \n  const employees_cpy = [...employees];\n  \n  // Dropdown needs access to the DOM of the Menu to measure it\n  const CustomMenu = React.forwardRef(\n    ({ children, style, className, \"aria-labelledby\": labeledBy }, ref) => {\n      const [value, setValue] = useState(\"\");\n\n      return (\n        <>\n          <Form.Control\n            autoFocus\n            className=\"mx-3 my-2 w-auto\"\n            placeholder=\"Type to find...\"\n            onChange={(e) => setValue(e.target.value)}\n            value={value}\n            ref={ref}\n          />\n          <ul className=\"list-unstyled\">\n            {React.Children.toArray(children).filter(\n              (child) =>\n                !value ||\n                child.props.children\n                  .toLowerCase()\n                  .indexOf(value.toLowerCase()) >= 0\n            )}\n          </ul>\n        </>\n      );\n    }\n  );\n\n  const addMembers = (id) => () => {\n    const membersAdded_cpy = [...membersAdded];\n    const check = membersAdded_cpy.filter((m) => Number(m.id) === Number(id));\n    if (check.length !== 0) return;\n    const toAdd = employees_cpy.filter((e) => Number(e.id) === Number(id))[0];\n    membersAdded_cpy.push(toAdd);\n    setMembersAdded(membersAdded_cpy);\n    return;\n  };\n\n  if (counter === 0) {\n    let ctr = 0;\n    let samePm = 0;\n    const membersAdded_cpy = [...membersAdded];\n    for (var i = 0; i < data.teamMembers.length; i++) {\n      ctr++;\n      if(data.teamMembers[i].id === id) samePm = 1;\n      const check = membersAdded_cpy.filter(\n        (m) => Number(m.id) === Number(data.teamMembers[i].id)\n      );\n      if (check.length !== 0) continue;\n      const toAdd = employees_cpy.filter(\n        (e) => Number(e.id) === Number(data.teamMembers[i].id)\n      )[0];\n      membersAdded_cpy.push(toAdd);\n    }\n    let oldCounter = counter;\n    if (ctr !== 0) {\n      if(samePm === 0 && membersAdded_cpy.length === data.teamMembers.length){\n        const projMgr = employees.filter((e) => Number(e.id) === Number(id))[0];\n        membersAdded_cpy.push(projMgr);\n      }\n      const membersAdded_final = [];\n      for(var i=0;i<membersAdded_cpy.length;i++){\n        const check1 = data.teamMembers.filter(tm => Number(tm.id) === membersAdded_cpy[i].id);\n        const check2 = Number(data.projectManager) === Number(membersAdded_cpy[i].id);\n        if(check1.length === 0 && !check2){\n          continue;\n        }\n        else{\n          membersAdded_final.push(membersAdded_cpy[i]);\n        }\n\n      }\n      setMembersAdded(membersAdded_final);\n      setCounter(oldCounter + 1);\n    }\n  }\n\n  const deleteMembers = (id) => () => {\n    const updateMembers = [...membersAdded].filter(\n      (m) => Number(m.id) !== Number(id)\n    );\n    setMembersAdded(updateMembers);\n    return;\n  };\n\n  const transformDate = (date, end) => {\n    const tStart = \"00:00:00\";\n    const tEnd = \"23:59:00\";\n    const splitDate = date.split(\"-\");\n    const newDateList = splitDate.reverse();\n    const newDate = newDateList.join(\"-\");\n    let finalDate = \"\";\n    if (end === 0) {\n      finalDate = newDate + \" \" + tStart;\n    } else {\n      finalDate = newDate + \" \" + tEnd;\n    }\n    return finalDate;\n  };\n\n  const dispatch = useDispatch();\n\n  const onSuccess = (values) => {\n    const pmId = values.projectManager;\n    const statusType = {\n      \"To-Do\": \"TO_DO\",\n      \"In Progress\": \"IN_PROGRESS\",\n      Completed: \"COMPLETED\",\n      Suspended: \"SUSPENDED\",\n    };\n    const payload = {};\n    payload[\"attachments\"] = [];\n    payload[\"projectName\"] = values.projectName;\n    payload[\"client\"] = { id: Number(values.client) };\n    payload[\"projectManager\"] = { id: Number(values.projectManager) };\n    payload[\"teamMembers\"] = membersAdded\n      .filter((m) => Number(m.id) !== Number(pmId) && Number(id) !== Number(m.id))\n      .map((m) => {\n        return { id: Number(m.id) };\n      });\n    payload[\"description\"] = values.projectDescription;\n    payload[\"startDate\"] = transformDate(values.startDate, 0);\n    payload[\"endDate\"] = transformDate(values.endDate, 1);\n    payload[\"status\"] = statusType[values.status];\n    props.onHide();\n    \n    dispatch(addProjects(payload))\n      .then(() => {\n        dispatch(getProjects())\n          .then(() => {\n            // console.log(\"Projects fetched successfully\");\n            return;\n          })\n          .catch(() => {\n            alert(\"Unable to fetch projects\");\n          });\n      })\n      .catch(() => {\n        openToast();\n      });\n  };\n  \n  const onSuccessEdit = (values) => {\n    const pmId = values.projectManager;\n    const statusType = {\n      \"To-Do\": \"TO_DO\",\n      \"In Progress\": \"IN_PROGRESS\",\n      Completed: \"COMPLETED\",\n      Suspended: \"SUSPENDED\",\n    };\n    const payload = {};\n    payload[\"attachments\"] = [];\n    payload[\"projectName\"] = values.projectName;\n    payload[\"client\"] = { id: Number(values.client) };\n    payload[\"projectManager\"] = { id: Number(values.projectManager) };\n    payload[\"teamMembers\"] = membersAdded\n      .filter((m) => Number(m.id) !== Number(pmId))\n      .map((m) => {\n        return { id: Number(m.id) };\n      });\n    payload[\"description\"] = values.projectDescription;\n    payload[\"startDate\"] = transformDate(values.startDate, 0);\n    payload[\"endDate\"] = transformDate(values.endDate, 1);\n    payload[\"status\"] = statusType[values.status];\n    props.onHide();\n\n    dispatch(editProject(data.projectID, payload))\n      .then(() => {\n        dispatch(getProjects())\n          .then(() => {\n            // console.log(\"Projects fetched successfully\");\n            return;\n          })\n          .catch(() => {\n            alert(\"Unable to fetch projects\");\n          });\n      })\n      .catch(() => {\n        openToastEdit();\n      });\n  };\n\n  const handleSubmit = () => {\n    if (formRef.current) {\n      formRef.current.handleSubmit();\n    }\n  };\n  const formRef = useRef();\n\n  return (\n    <>\n      <Modal\n        onHide={props.onHide}\n        show={props.show}\n        size=\"lg\"\n        backdrop=\"static\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{props.method} Project</Modal.Title>\n        </Modal.Header>\n        <Formik\n          key=\"Formik\"\n          validationSchema={schema}\n          validateOnChange={true}\n          onSubmit={props.method === \"Edit\" ? onSuccessEdit : onSuccess}\n          initialValues={data}\n          innerRef={formRef}\n        >\n          {({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            isValid,\n            errors,\n          }) => (\n            <Form noValidate onSubmit={handleSubmit}>\n              <Modal.Body>\n                <Row>\n                  <Form.Group as={Col} controlId=\"projectName\">\n                    <Form.Label>Project Name</Form.Label>\n                    <Form.Control\n                      name=\"projectName\"\n                      value={values.projectName}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      isInvalid={touched.projectName && errors.projectName}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.projectName}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Row>\n                <br />\n                <Tabs defaultActiveKey=\"basic\">\n                  <Tab eventKey=\"basic\" title=\"Basic\">\n                    <br />\n                    <Row>\n                      <Form.Group as={Col} controlId=\"clientName\">\n                        <Form.Label>Client Name</Form.Label>\n                        <Form.Select\n                          name=\"client\"\n                          value={values.client}\n                          disabled={props.method === \"Edit\"}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          isInvalid={touched.client && errors.client}\n                        >\n                          <option key=\"SC\" value=\"\" disabled>\n                            Select Client\n                          </option>\n                          {clients.map((client) => {\n                            return (\n                              <option key={client.id} value={client.id}>\n                                {client.fullName +\n                                  \" (Client ID: \" +\n                                  client.id +\n                                  \")\"}\n                              </option>\n                            );\n                          })}\n                        </Form.Select>\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col} controlId=\"teamLead\">\n                        <Form.Label>Team Lead</Form.Label>\n                        <Form.Select defaultValue=\"Choose...\" disabled>\n                          <option key=\"NA\">---</option>\n                        </Form.Select>\n                      </Form.Group>\n                      <Form.Group as={Col} controlId=\"projectManager\">\n                        <Form.Label>Project Manager</Form.Label>\n                        <Form.Select\n                          name=\"projectManager\"\n                          value={values.projectManager}\n                          disabled={props.method === \"Edit\"}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          isInvalid={\n                            touched.projectManager && errors.projectManager\n                          }\n                        >\n                          <option key=\"SPM\" value=\"\" disabled>\n                            Select Project Manager\n                          </option>\n                          {employees\n                            .filter((e) => e.role === 1 && e.id === id)\n                            .map((e) => {\n                              return (\n                                <option key={e.id} value={e.id}>\n                                  {e.firstname +\n                                    \" \" +\n                                    e.lastname +\n                                    \" (Employee ID: \" +\n                                    e.id +\n                                    \")\"}\n                                </option>\n                              );\n                            })}\n                          {employees\n                            .filter((e) => e.role === 1 && e.id !== id)\n                            .map((e) => {\n                              return (\n                                <option key={e.id} value={e.id}>\n                                  {e.firstname +\n                                    \" \" +\n                                    e.lastname +\n                                    \" (Employee ID: \" +\n                                    e.id +\n                                    \")\"}\n                                </option>\n                              );\n                            })}\n                        </Form.Select>\n                      </Form.Group>\n                    </Row>\n                  </Tab>\n\n                  <Tab eventKey=\"team\" title=\"Team\">\n                    <br />\n                    <Row>\n                      <Form.Group controlId=\"teamMembers\">\n                        <DropdownButton\n                          title=\"Search and Add Team Members \"\n                          variant=\"secondary\"\n                          key=\"down\"\n                        >\n                          <Dropdown.Menu as={CustomMenu}>\n                            {employees.map((e) => {\n                              return (\n                                <Dropdown.Item\n                                  eventKey={e.id}\n                                  onClick={addMembers(e.id)}\n                                >\n                                  {e.firstname +\n                                    \" \" +\n                                    e.lastname +\n                                    \" (Employee ID: \" +\n                                    e.id +\n                                    \")\"}\n                                </Dropdown.Item>\n                              );\n                            })}\n                          </Dropdown.Menu>\n                        </DropdownButton>\n                      </Form.Group>\n                    </Row>\n                    <br />\n                    <Row>\n                      <Form.Group as={Col} controlId=\"teamMembers\">\n                        <Form.Label>\n                          <strong>Team Members: {membersAdded.length}</strong>\n                        </Form.Label>\n                        <ul>\n                          {membersAdded.map((m) => {\n                            return (\n                              <li key={m.id}>\n                                {m.firstname +\n                                  \" \" +\n                                  m.lastname +\n                                  \" (Employee ID: \" +\n                                  m.id +\n                                  \")  \"}\n                                <Button\n                                  className=\"m-0 p- border-0\"\n                                  variant=\"outline-danger\"\n                                  size=\"sm\"\n                                  onClick={deleteMembers(m.id)}\n                                  disabled={m.id === id}\n                                >\n                                  <i className=\"bi bi-x-lg\"></i>\n                                </Button>\n                              </li>\n                            );\n                          })}\n                        </ul>\n                      </Form.Group>\n                    </Row>\n                  </Tab>\n\n                  <Tab eventKey=\"approvals\" title=\"Approvals\">\n                    <br />\n                    <Row>\n                      <Form.Group as={Col} controlId=\"timeSheetApproval\">\n                        <Form.Label>Timesheet Approval Type</Form.Label>\n                        <Form.Select defaultValue=\"Choose...\">\n                          <option key=\"TL\">Team Lead</option>\n                          {/* <option>Project Manager</option> */}\n                        </Form.Select>\n                      </Form.Group>\n                      <Form.Group as={Col} controlId=\"expenseApproval\">\n                        <Form.Label>Expense Approval Type</Form.Label>\n                        <Form.Select defaultValue=\"Choose...\">\n                          <option key=\"PM\">Project Manager</option>\n                        </Form.Select>\n                      </Form.Group>\n                    </Row>\n                  </Tab>\n\n                  <Tab eventKey=\"advanced\" title=\"Advanced\">\n                    <br />\n                    <Form.Group controlId=\"projDescription\">\n                      <Form.Label>Project Description</Form.Label>\n                      <FloatingLabel controlId=\"projDescriptionText\">\n                        <Form.Control\n                          as=\"textarea\"\n                          placeholder=\"Leave a comment here\"\n                          style={{ height: \"100px\" }}\n                          name=\"projectDescription\"\n                          value={values.projectDescription}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          isInvalid={\n                            touched.projectDescription &&\n                            errors.projectDescription\n                          }\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {errors.projectDescription}\n                        </Form.Control.Feedback>\n                      </FloatingLabel>\n                    </Form.Group>\n                    <Row>\n                      <Form.Group as={Col} controlId=\"duration\">\n                        <Form.Label>Duration (Hours)</Form.Label>\n                        <Form.Control\n                          name=\"duration\"\n                          value={values.duration}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          isInvalid={touched.duration && errors.duration}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {errors.duration}\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                      <Form.Group as={Col} controlId=\"estimatedCost\">\n                        <Form.Label>Project Estimated Cost (Rs.)</Form.Label>\n                        <Form.Control\n                          name=\"cost\"\n                          value={values.cost}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          isInvalid={touched.cost && errors.cost}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {errors.cost}\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col} controlId=\"projectStatus\">\n                        <Form.Label>Project Status</Form.Label>\n                        <Form.Select\n                          name=\"status\"\n                          value={values.status}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                        >\n                          <option key=\"TD\">To-Do</option>\n                          <option key=\"IP\">In Progress</option>\n                          <option key=\"S\">Suspended</option>\n                          <option key=\"C\">Completed</option>\n                        </Form.Select>\n                      </Form.Group>\n                    </Row>\n                  </Tab>\n                  <Tab eventKey=\"dates\" title=\"Dates\">\n                    <br />\n                    <Row>\n                      <Form.Group as={Col} controlId=\"startDate\">\n                        <Form.Label>Start Date</Form.Label>\n                        <Form.Control\n                          type=\"date\"\n                          name=\"startDate\"\n                          value={values.startDate}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          isInvalid={touched.startDate && errors.startDate}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {errors.startDate}\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                      <Form.Group as={Col} controlId=\"dueDate\">\n                        <Form.Label>Due Date</Form.Label>\n                        <Form.Control\n                          type=\"date\"\n                          name=\"endDate\"\n                          value={values.endDate}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          isInvalid={touched.endDate && errors.endDate}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {errors.endDate}\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                    </Row>\n                  </Tab>\n                </Tabs>\n              </Modal.Body>\n\n              <Modal.Footer>\n                <Button\n                  variant=\"success\"\n                  type=\"submit\"\n                  onClick={handleSubmit}\n                  disabled={values.projectName.length === 0 || !isValid}\n                >\n                  {props.method} Project\n                </Button>\n                <Button variant=\"secondary\" onClick={props.onHide}>\n                  Close\n                </Button>\n              </Modal.Footer>\n            </Form>\n          )}\n        </Formik>\n      </Modal>\n\n      <ToastContainer position=\"top-center\">\n        <Toast\n          className=\"text-center\"\n          bg=\"danger\"\n          style={{ width: \"18rem\" }}\n          show={toast}\n          onClose={closeToast}\n          position=\"middle-center\"\n          delay={3000}\n          autohide\n        >\n          <Toast.Header>\n            <strong className=\"me-auto\">ERROR!</strong>\n          </Toast.Header>\n          <Toast.Body>\n            <h6>Project Could NOT Be Added!</h6>\n          </Toast.Body>\n        </Toast>\n      </ToastContainer>\n\n      <ToastContainer position=\"top-center\">\n        <Toast\n          className=\"text-center\"\n          bg=\"danger\"\n          style={{ width: \"18rem\" }}\n          show={toastEdit}\n          onClose={closeToastEdit}\n          position=\"middle-center\"\n          delay={3000}\n          autohide\n        >\n          <Toast.Header>\n            <strong className=\"me-auto\">ERROR!</strong>\n          </Toast.Header>\n          <Toast.Body>\n            <h6>Project Could NOT Be Updated!</h6>\n          </Toast.Body>\n        </Toast>\n      </ToastContainer>\n    </>\n  );\n};\n\nexport default AddProject;\n","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/MainHeader/MainHeader.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/ProjectSummaryHeader.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/ProjectSummary.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/ProjectSummaryDashboard.js",["541","542"],"import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Card,\n  Tab,\n  Tabs,\n  ListGroup,\n  Row,\n  Col,\n  Table,\n  Badge,\n} from \"react-bootstrap\";\n// import FileUpload from \"../FileUpload\";\nimport \"./ProjectSummaryDashboard.css\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { getProjectById, getProjectAmountById } from \"../../actions/project\";\n\nconst ProjectSummaryDashboard = (props) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getProjectById(props.id))\n      .then(() => {\n        // console.log(\"Project fetched successfully for summary\");\n        return;\n      })\n      .catch(() => {\n        alert(\"Unable to fetch project for summary\");\n      });\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getProjectAmountById(props.id))\n      .then(() => {\n        // console.log(\"Project expenses fetched successfully for summary\");\n        return;\n      })\n      .catch(() => {\n        alert(\"Unable to fetch project expenses for summary\");\n      });\n  }, [dispatch]);\n\n  const { project: content } = useSelector((state) => state.projectById);\n  const { projectExpense: expense } = useSelector((state) => state.projectExpense);\n  if (content.length === 0) {\n    return <Redirect to={\"/projectsummary/\" + props.id} />;\n  }\n  if (expense.length === 0) {\n    return <Redirect to={\"/projectsummary/\" + props.id} />;\n  }\n  const project = content[0];\n  const statusType = {\n    TO_DO: \"To-Do\",\n    IN_PROGRESS: \"In Progress\",\n    COMPLETED: \"Completed\",\n    SUSPENDED: \"Suspended\",\n  };\n\n  const ActiveStatus = project.active ? \"Active\" : \"Inactive\";\n  const BadgeType = ActiveStatus === \"Active\" ? \"success\" : \"danger\";\n  const soonDue = project.soonDue ? <Badge bg=\"info\">Soon Due</Badge> : \"\";\n\n  return (\n    <Row id=\"projectSummary\">\n      <Col sm={8}>\n        <Card>\n          <Card.Header as=\"h4\">\n            {project.client.fullName}\n            <Card.Text className=\"float-end\">\n              <Badge bg={BadgeType}>{ActiveStatus}</Badge>\n            </Card.Text>\n            <Card.Text className=\"float-end\">&nbsp;</Card.Text>\n            <Card.Text className=\"float-end\">{soonDue}</Card.Text>\n            <br />\n            <h1>\n              <font color=\"blue\">{project.projectName}</font>\n            </h1>\n            <h6>\n              <i className=\"bi bi-calendar3\"></i> Started On:{\" \"}\n              {project.startDate.substring(0, 10)}\n              &nbsp; &nbsp;\n              <i className=\"bi bi-calendar3\"></i> Due By:{\" \"}\n              {project.endDate.substring(0, 10)}\n              &nbsp; &nbsp;\n              <i className=\"bi bi-card-list\"></i> {statusType[project.status]}\n            </h6>\n          </Card.Header>\n          <Card.Body>\n            <Tabs defaultActiveKey=\"description\">\n              <Tab eventKey=\"description\" title=\"Description\">\n                <br />\n                {project.description}\n              </Tab>\n\n              <Tab eventKey=\"team\" title=\"Team\">\n                <br />\n                <strong>Team Members:</strong>\n                <ul>\n                  <li key=\"PM\">\n                    {project.projectManager.firstName +\n                      \" \" +\n                      project.projectManager.lastName}{\" \"}\n                    <Badge pill bg=\"warning\" text=\"dark\">\n                      Project Manager\n                    </Badge>\n                  </li>\n                  {project.teamMembers\n                    .filter((tm) => tm.id !== project.projectManager.id)\n                    .map((tm) => {\n                      return (\n                        <li key={tm.id}>{tm.firstName + \" \" + tm.lastName}</li>\n                      );\n                    })}\n                </ul>\n              </Tab>\n\n              {/* <Tab eventKey=\"attachment\" title=\"Attachment\">\n                <br />\n                <FileUpload />\n              </Tab> */}\n            </Tabs>\n          </Card.Body>\n        </Card>\n      </Col>\n      <Col>\n        <Card>\n          <Card.Header>\n            <h3>\n              <font color=\"blue\">PROJECT SUMMARY</font>\n            </h3>\n          </Card.Header>\n          <Card.Body>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <Card.Text>\n                  <strong>TOTAL HOURS</strong>\n                </Card.Text>\n                <h2>&nbsp;0.00</h2>\n                <Table borderless>\n                  <tbody>\n                    <tr>\n                      <td>Billable Hours</td>\n                      <td className=\"float-end\">0.00</td>\n                    </tr>\n                    <tr>\n                      <td>Non - Billable Hours</td>\n                      <td className=\"float-end\">0.00</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Card.Text>\n                  <strong>TOTAL EXPENSES</strong>\n                </Card.Text>\n                <h2>&nbsp;{Number(expense.Total).toFixed(2)}</h2>\n                <Table borderless>\n                  <tbody>\n                    <tr>\n                      <td>Billable Expenses</td>\n                      <td className=\"float-end\">{Number(expense[\"Billable\"]).toFixed(2)}</td>\n                    </tr>\n                    <tr>\n                      <td>Non - Billable Expenses</td>\n                      <td className=\"float-end\">{Number(expense[\"Non-billable\"]).toFixed(2)}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProjectSummaryDashboard;\n","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Expense/Expense.js",["543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559"],"import React, { Component } from \"react\";\nimport {\n  Card,\n  Button,\n  Container,\n  Pagination,\n  Badge,\n  Form,\n  Table,\n  Dropdown,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { Navbar } from 'react-bootstrap';\nimport { createBrowserHistory as history} from 'history';\nimport { useDispatch } from 'react-redux';\n\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\n\nimport \"./Expense.css\";\n\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\n// import filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport { GetExpenseSheets } from '../../services/expense.service';\n\n\nconst { SearchBar } = Search;\nconst headerSortingStyle = { backgroundColor: '#c8e6c9' };\n\n\nconst afterSearch = (newResult) => {\n    console.log(newResult);\n  };\n\nconst columns = [\n//     {\n//   dataField: 'id',\n//   text: 'ID',\n//   filter: textFilter(),\n//   sort: true\n// }, \n{\n  dataField: 'date',\n  text: 'Date',\n//   filter: textFilter(),\n  sort: true,\n  onSort: (field, order) => {\n    console.log();\n  },\n  headerSortingStyle\n}, {\n  dataField: 'description',\n  text: 'Description',\n//   filter: textFilter(),\n  sort: true,\n  headerSortingStyle\n}, {\n  dataField: 'amount',\n  text: 'Amount',\n//   filter: textFilter(),\n  sort: true,\n  headerSortingStyle\n}];\n\nconst products = [{\n    id : \"1\",\n    date:\"31-13-23\",\n    description: \"aaa\",\n    amount : \"2424\"\n}, {\n    id : \"2\",\n    date:\"21-13-23\",\n    description: \"bbb\",\n    amount : \"43524\"\n}]\n\n\nexport default function Expense() {\n\n  const dispatch = useDispatch();\n\n    const expandRow = {\n     renderer: row => (\n              <div>\n                <p>.....</p>\n                <p>You can render anything here, also you can add additional data on every row object</p>\n                <p>expandRow.renderer callback will pass the origin row object to you</p>\n              </div>\n            ),\n            showExpandColumn: true\n          };\n\nconst { SearchBar } = Search;\nconst headerSortingStyle = { backgroundColor: \"#c8e6c9\" };\n\n        return (\n          \n\n    <div type= \"card\">\n            {/* <Container > */}\n            \n            <Navbar bg=\"light\" expand=\"lg\">\n    <Breadcrumb className=\"breadCrumb\" >\n    <div className=\"ms-5\"/>\n  <Breadcrumb.Item href=\"/home\" > <a className=\"text-muted\" >Home</a></Breadcrumb.Item>\n  {/* <Breadcrumb.Item href=\"https://getbootstrap.com/docs/4.0/components/breadcrumb/\">\n    Library\n  </Breadcrumb.Item> */}\n  <Breadcrumb.Item active> My Expense Sheets</Breadcrumb.Item>\n        </Breadcrumb> \n    </Navbar>\n    <br/>\n            {/* <Container className=\"mt-n2\" style={{width: \"200%\"}}> */}\n            <Card style={{ width: \"95%\" }}  className=\"ms-5\" >\n            \n              <Card.Header as=\"h5\" >\n               \n              <div className=\"text-primary\">EXPENSE SHEET LIST\n                <Button variant=\"success\" className=\"float-end\" id=\"addExpenseSheet\" href='/expenseEntries' >\n                <i className=\"bi bi-plus\"></i> Add Expense Sheet\n                </Button>\n                </div>\n                </Card.Header>\n              <Card.Body>\n                \n              <ToolkitProvider\n  keyField=\"id\"\n  data={ products }\n  columns={ columns }\n  search={ { afterSearch } }\n>\n  {\n    props => (\n      <div>\n        <SearchBar { ...props.searchProps } />\n        <hr />\n        \n        <BootstrapTable\n        //   ref={ n => this.node = n }      //ASK NISHANT ABOUT THIS\n          keyField=\"id\"\n          data={ products }\n          columns={ columns }\n          headerClasses=\"header-class\"\n        //   filter={ filterFactory() }\n          pagination={ paginationFactory() }\n          selectRow={ { mode: 'checkbox', clickToSelect: true } }\n        //   expandRow={ expandRow }\n\n          { ...props.baseProps }\n        />\n      </div>\n    )\n  }\n</ToolkitProvider>\n\n                \n\n              </Card.Body>\n            </Card>\n          {/* </Container> */}\n          </div>\n        );\n    \n}\n",["560","561"],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Expense/AddExpenseSheet.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Expense/AddExpenseEntry.js",["562","563","564","565"],"import React, { useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { useFormik } from \"formik\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport \"./Expense.css\";\n\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nimport { getExpenseSheets } from \"../../actions/expense.actions\";\nimport { getProjects } from \"../../actions/project\";\nimport { editEntry } from \"../../actions/expense.actions\";\nimport { addEntry } from \"../../actions/expense.actions\";\nimport attachmentsService from \"../../services/attachments.service\";\n\nconst AddExpenseEntry = (props) => {\n  const dispatch = useDispatch();\n  var data = props.data;\n\n  useEffect(() => {\n    dispatch(getProjects())\n      .then(() => {\n        // console.log(\"Projects fetched successfully\");\n        return;\n      })\n      .catch(() => {\n        alert(\"Unable to fetch projects\");\n      });\n  }, [dispatch]);\n\n  const transformDate = (date) => {\n    const splitDate = date.split(\"-\");\n    const newDateList = splitDate.reverse();\n    const newDate = newDateList.join(\"-\");\n\n    return newDate;\n  };\n\n  const schema = yup.object().shape({\n    name: yup.string().required(\"Required!\"),\n    paymentMethod: yup.string().required(\"Required!\"),\n    currency: yup.string().required(\"Required!\"),\n    billable: yup.bool().required(\"Required!\"),\n    reimburseable: yup.bool().required(\"Required!\"),\n    amount: yup\n      .number()\n      .min(0, \"Minumim value must be 0\")\n      .test(\n        'has-2-decimal',\n        'Maximum 2 dgits after decimal point',\n         value => (value + \"\").match(/^(?:\\d*\\.\\d{1,2}|\\d+)$/),\n      )\n      .typeError(\"Cost must be a numerical value\")\n      .required(\"Required!\"),\n    taxZone: yup.string().required(\"Required!\"),\n    tax: yup\n      .number()\n      .min(0, \"Minumim value must be 0\")\n      .test(\n        'has-2-decimal',\n        'Maximum 2 dgits after decimal point',\n         value => (value + \"\").match(/^(?:\\d*\\.\\d{1,2}|\\d+)$/),\n      )\n      .typeError(\"Cost must be a numerical value\")\n      .required(\"Required!\"),\n    description: yup.string().required(\"Required!\"),\n    file: yup.mixed().required(\"Required!\"),\n  });\n\n  const schemaEdit = yup.object().shape({\n    name: yup.string().required(\"Required!\"),\n    paymentMethod: yup.string().required(\"Required!\"),\n    currency: yup.string().required(\"Required!\"),\n    billable: yup.bool().required(\"Required!\"),\n    reimburseable: yup.bool().required(\"Required!\"),\n    amount: yup\n      .number()\n      .min(0, \"Minumim value must be 0\")\n      .test(\n        'has-2-decimal',\n        'Maximum 2 dgits after decimal point',\n         value => (value + \"\").match(/^(?:\\d*\\.\\d{1,2}|\\d+)$/),\n      )\n      .typeError(\"Cost must be a numerical value\")\n      .required(\"Required!\"),\n    taxZone: yup.string().required(\"Required!\"),\n    tax: yup\n      .number()\n      .min(0, \"Minumim value must be 0\")\n      .test(\n        'has-2-decimal',\n        'Maximum 2 dgits after decimal point',\n         value => (value + \"\").match(/^(?:\\d*\\.\\d{1,2}|\\d+)$/),\n      )\n      .typeError(\"Cost must be a numerical value\")\n      .required(\"Required!\"),\n    description: yup.string().required(\"Required!\"),\n  });\n\n  const [loading, setLoading] = useState(false);\n  const dummyForm = new FormData();\n  const [fileData, setFileData] = useState(dummyForm);\n  const [fileChange, setFileChange] = useState(0);\n  const { projects } = useSelector((state) => state.project);\n  const { user: currentUser } = useSelector((state) => state.auth);\n\n  const onSuccess = (values) => {\n    const payload = {};\n    payload[\"project\"] = { id: Number(values.projectName) };\n    payload[\"name\"] = values.name;\n    payload[\"currency\"] = values.currency;\n    payload[\"date\"] = transformDate(values.date);\n    payload[\"billable\"] = values.billable;\n    payload[\"reimburseable\"] = values.reimburseable;\n    payload[\"amount\"] = values.amount;\n    payload[\"taxZone\"] = values.taxZone;\n    payload[\"tax\"] = values.tax;\n    payload[\"paymentMethod\"] = values.paymentMethod;\n    payload[\"status\"] = \"SUBMITTED\";\n    payload[\"description\"] = values.description;\n    payload[\"attachments\"] = [];\n\n    props.onHide();\n\n    setLoading(true);\n\n    attachmentsService\n      .uploadDoc(fileData)\n      .then((response) => {\n        // payload[\"attachments\"].push(response);\n        payload[\"attachments\"] = [{\"id\":response.id}];\n        dispatch(addEntry(payload))\n          .then(() => {\n            dispatch(getExpenseSheets())\n              .then(() => {\n                // console.log(\"Expenses fetched successfully\");\n                return;\n              })\n              .catch(() => {\n                alert(\"Unable to fetch Expenses\");\n              });\n          })\n          .catch(() => {\n            alert(\"Expense Could Not be Added!\");\n            setLoading(false);\n          });\n      })\n      .catch(() => {\n        alert(\"File Could Not Be Attached!\");\n      });\n  };\n\n  const onSuccessEdit = (values) => {\n    const payload = {};\n    payload[\"name\"] = values.name;\n    payload[\"currency\"] = values.currency;\n    payload[\"billable\"] = values.billable;\n    payload[\"reimburseable\"] = values.reimburseable;\n    payload[\"amount\"] = values.amount;\n    payload[\"taxZone\"] = values.taxZone;\n    payload[\"tax\"] = values.tax;\n    payload[\"paymentMethod\"] = values.paymentMethod;\n    payload[\"description\"] = values.description;\n    // payload[\"attachments\"] = [];\n    props.onHide();\n    setLoading(true);\n\n    if (fileChange === 1) {\n      attachmentsService\n        .uploadDoc(fileData)\n        .then((response) => {\n          // payload[\"attachments\"] = [response];\n          // console.log(\"File Changed -> \", payload);\n          payload[\"attachments\"] = [{\"id\":response.id}];\n          dispatch(editEntry(data.expenseId, payload))\n            .then(() => {\n              dispatch(getExpenseSheets())\n                .then(() => {\n                  // console.log(\"Expenses fetched successfully\");\n                  return;\n                })\n                .catch(() => {\n                  alert(\"Unable to fetch Expenses\");\n                });\n            })\n            .catch(() => {\n              alert(\"Could Not Edit Expense!\")\n              setLoading(false);\n            });\n        })\n        .catch(() => {\n          alert(\"File Could Not Be Attached!\");\n        });\n    } else {\n      dispatch(editEntry(data.expenseId, payload))\n        .then(() => {\n          dispatch(getExpenseSheets())\n            .then(() => {\n              // console.log(\"Expense updated successfully\");\n              return;\n            })\n            .catch(() => {\n              alert(\"Unable to update Expense\");\n            });\n        })\n        .catch(() => {\n          alert(\"Could Not Edit Expense!\")\n          setLoading(false);\n        });\n    }\n  };\n\n  \n  const handleSubmit = () => {\n    if (formRef.current) {\n      formRef.current.handleSubmit();\n    }\n  };\n  const formRef = useRef();\n\n  const onFileChangeHandler = (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", e.target.files[0]);\n    if (e.target.files.length > 0) setFileChange(1);\n    if (e.target.files.length === 0) setFileChange(0);\n    setFileData(formData);\n  };\n\n  return (\n    <Modal {...props} backdrop=\"static\" size=\"lg\" id=\"entry-modal\">\n      <Modal.Header closeButton>\n        <Modal.Title>{props.method} Expense Entry</Modal.Title>\n      </Modal.Header>\n\n      <Formik\n        key=\"Formik\"\n        validationSchema={props.method === \"Edit\" ? schemaEdit : schema}\n        validateOnChange={true}\n        onSubmit={props.method === \"Edit\" ? onSuccessEdit : onSuccess}\n        initialValues={props.data}\n        innerRef={formRef}\n      >\n        {({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          values,\n          touched,\n          isValid,\n          errors,\n        }) => (\n          <Form noValidate onSubmit={handleSubmit}>\n            <Modal.Body>\n              <Tabs defaultActiveKey=\"basic\">\n                <Tab eventKey=\"basic\" title=\"Basic\">\n                  <br />\n                  <Row>\n                    <Form.Group as={Col} controlId=\"projectName\">\n                      <Form.Label>\n                        <small>Project name</small>\n                      </Form.Label>\n                      <Form.Select\n                        name=\"projectName\"\n                        value={values.projectName}\n                        disabled={props.method === \"Edit\"}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.projectName && errors.projectName}\n                      >\n                        <option key=\"SP\" value=\"\" disabled>\n                          Select Project\n                        </option>\n                        {projects.map((project) => {\n                          return (\n                            <option key={project.id} value={project.id}>\n                              {project.projectName}\n                            </option>\n                          );\n                        })}\n                      </Form.Select>\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Group as={Col} controlId=\"name\">\n                      <Form.Label>\n                        <small>Expense Name </small>\n                      </Form.Label>\n                      <Form.Control\n                        // as=\"textarea\"\n                        name=\"name\"\n                        value={values.name}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.name && errors.name}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.name}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"paymentMethod\">\n                      <Form.Label>\n                        <small>Payment Method</small>\n                      </Form.Label>\n                      <Form.Select\n                        aria-label=\"Default select example\"\n                        name=\"paymentMethod\"\n                        value={values.paymentMethod}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          touched.paymentMethod && errors.paymentMethod\n                        }\n                      >\n                        <option></option>\n                        <option value=\"CASH\">CASH</option>\n                        <option value=\"CARD\">CARD</option>\n                        <option value=\"ONLINE TRANSACTION\">\n                          ONLINE TRANSACTION\n                        </option>\n                      </Form.Select>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.paymentMethod}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"currency\">\n                      <Form.Label>\n                        <small>Currency</small>\n                      </Form.Label>\n                      <Form.Select\n                        aria-label=\"Default select example\"\n                        name=\"currency\"\n                        value={values.currency}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.currency && errors.currency}\n                      >\n                        <option></option>\n                        <option value=\"INR\">INR</option>\n                        <option value=\"USD\">USD</option>\n                      </Form.Select>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.currency}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Row>\n\n                  <Row>\n                    <Form.Group as={Col} controlId=\"date\">\n                      <Form.Label>\n                        <small>Expense Entry Date </small>\n                      </Form.Label>\n                      <Form.Control\n                        type=\"date\"\n                        name=\"date\"\n                        value={values.date}\n                        readOnly\n                      />\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"billable\">\n                      <Form.Label>\n                        <small>Billable</small>\n                      </Form.Label>\n                      <Form.Select\n                        aria-label=\"Default select example\"\n                        name=\"billable\"\n                        value={values.billable}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.billable && errors.billable}\n                      >\n                        <option></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </Form.Select>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.billable}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"reimburseable\">\n                      <Form.Label>\n                        <small>Reimburse</small>\n                      </Form.Label>\n                      <Form.Select\n                        aria-label=\"Default select example\"\n                        name=\"reimburseable\"\n                        value={values.reimburseable}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          touched.reimburseable && errors.reimburseable\n                        }\n                      >\n                        <option></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </Form.Select>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.reimburseable}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Group as={Col} controlId=\"amount\">\n                      <Form.Label>\n                        <small>Net Amount</small>\n                      </Form.Label>\n                      <Form.Control\n                        name=\"amount\"\n                        value={values.amount}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.amount && errors.amount}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.amount}\n                      </Form.Control.Feedback>{\" \"}\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"taxZone\">\n                      <Form.Label>\n                        <small>Tax Zone</small>\n                      </Form.Label>\n\n                      <Form.Select\n                        aria-label=\"Default select example\"\n                        name=\"taxZone\"\n                        value={values.taxZone}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.taxZone && errors.taxZone}\n                      >\n                        <option></option>\n                        <option value=\"IND\">IND</option>\n                        <option value=\"USA\">USA</option>\n                      </Form.Select>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.taxZone}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Group as={Col} controlId=\"tax\">\n                      <Form.Label>\n                        <small>Tax</small>\n                      </Form.Label>\n                      <Form.Control\n                        name=\"tax\"\n                        value={values.tax}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.tax && errors.tax}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.tax}\n                      </Form.Control.Feedback>{\" \"}\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"netAmount\">\n                      <Form.Label>\n                        <small>Amount</small>\n                      </Form.Label>\n                      <Form.Control\n                        name=\"netAmount\"\n                        value={String(\n                          Number(values.amount) + Number(values.tax)\n                        )}\n                        readOnly\n                      />\n                    </Form.Group>\n                  </Row>\n                </Tab>\n\n                <Tab eventKey=\"description\" title=\"Description\">\n                  <br />\n                  <Form.Group className=\"mb-3\" controlId=\"description\">\n                    <Form.Control\n                      as=\"textarea\"\n                      type=\"long-description\"\n                      name=\"description\"\n                      placeholder=\"Enter description of expense here\"\n                      value={values.description}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      isInvalid={touched.description && errors.description}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.description}\n                    </Form.Control.Feedback>{\" \"}\n                  </Form.Group>\n                </Tab>\n                <Tab eventKey=\"attachment\" title=\"Attachment\">\n                  <br />\n                  <Form.Group className=\"mb-3\" controlId=\"file\">\n                    <Form.Group className=\"position-relative mb-3\">\n                      <Form.Label>Upload File (PDFs only)</Form.Label>\n                      <Form.Control\n                        type=\"file\"\n                        name=\"file\"\n                        accept=\".pdf\"\n                        onChange={(e) => {\n                          handleChange(e);\n                          onFileChangeHandler(e);\n                        }}\n                        isInvalid={!!errors.file}\n                        // disabled={props.method === \"Edit\"}\n                      />\n                      <Form.Control.Feedback type=\"invalid\" tooltip>\n                        {errors.file}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    {data.attachments.length > 0 &&\n                      \"File Already Uploaded : \" + data.attachments[0].docName}\n                  </Form.Group>\n                </Tab>\n              </Tabs>\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button\n                variant=\"success\"\n                type=\"submit\"\n                onClick={handleSubmit}\n                disabled={values.name.length === 0 || !isValid}\n              >\n                {props.method} Expense Entry\n              </Button>\n              <Button variant=\"secondary\" onClick={props.onHide}>\n                Close\n              </Button>\n            </Modal.Footer>\n          </Form>\n        )}\n      </Formik>\n    </Modal>\n  );\n};\n\nexport default AddExpenseEntry;\n","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/login/Login.js",[],["566","567"],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reducers/index.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reducers/message.js",["568"],"import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n}\n","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reducers/auth.js",["569"],"import { LOGIN_SUCCESS, CHANGE_PWD_SUCCESS, CHANGE_PWD_FAIL, LOGIN_FAIL, LOGOUT } from \"../actions/types\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst initialState = user\n  ? { isLoggedIn: true, user }\n  : { isLoggedIn: false, user: null };\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: payload.user,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n      case CHANGE_PWD_SUCCESS:\n        return {\n          ...state,\n          isLoggedIn: true,\n          user: payload.user,\n        };\n      case CHANGE_PWD_FAIL:\n        return {\n          ...state,\n        };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/actions/types.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Login/Login.js",["570"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { login } from \"../../actions/auth\";\nimport { Container, Card, Row, Toast, Col } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\n\nexport default function Login() {\n  const schema = yup.object().shape({\n    email: yup.string().email(\"Invalid Email\").required(),\n    password: yup.string().required(),\n  });\n\n  let history = useHistory();\n  const [loading, setLoading] = useState(false);\n\n  const { isLoggedIn, user } = useSelector((state) => state.auth);\n  \n  const [showA, setShowA] = useState(false);\n  const closeA = () => setShowA(false);\n  const openA = () => setShowA(true);\n\n  const dispatch = useDispatch();\n  \n  const onSuccess = (values) => {\n    setLoading(true);\n\n    dispatch(login(values.email, values.password))\n      .then((response) => {\n        if(response.isPasswordTemp){\n          history.push(\"/changepwd\");\n        }\n        else{\n          history.push(\"/home\");\n        }\n      })\n      .catch(() => {\n        setLoading(false);\n        openA();\n      });\n  };\n\n  if (isLoggedIn && !user.isPasswordTemp) {\n    return <Redirect to=\"/home\" />;\n  }\n  if (isLoggedIn && user.isPasswordTemp){\n    return <Redirect to=\"/changepwd\" />;\n  }\n\n  return (\n    <Container className=\"mt-5\">\n      <Row>\n        <Col lg={4} md={6} />\n        <Col lg={4} md={6}>\n          <Card>\n            <Card.Header className=\"text-center\">\n              <h4>Login Portal</h4>\n            </Card.Header>\n            <Card.Body>\n              <Formik\n                validationSchema={schema}\n                validateOnChange={true}\n                onSubmit={onSuccess}\n                initialValues={{\n                  email: \"\",\n                  password: \"\",\n                }}\n              >\n                {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  touched,\n                  isValid,\n                  errors,\n                }) => (\n                  <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group className=\"mb-3\" size=\"lg\" controlId=\"email\">\n                      <Form.Label>Email</Form.Label>\n                      <Form.Control\n                        autoFocus\n                        type=\"email\"\n                        name=\"email\"\n                        value={values.email}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.email && errors.email}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.email}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group size=\"lg\" controlId=\"password\">\n                      <Form.Label>Password</Form.Label>\n                      <Form.Control\n                        type=\"password\"\n                        name=\"password\"\n                        value={values.password}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.password && errors.password}\n                      />\n                    </Form.Group>\n                    <br />\n                    <div className=\"d-grid\">\n                      <Button\n                        variant=\"primary\"\n                        type=\"submit\"\n                        disabled={!isValid}\n                      >\n                        Login\n                      </Button>\n                    </div>\n                  </Form>\n                )}\n              </Formik>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={4} md={6} />\n      </Row>\n      <br />\n      <Row className=\"justify-content-center\">\n        <Toast\n          className=\"text-center\"\n          bg=\"danger\"\n          style={{ width: \"18rem\" }}\n          show={showA}\n          onClose={closeA}\n          position=\"middle-center\"\n          delay={3000}\n          autohide\n        >\n          <Toast.Header>\n            <strong className=\"me-auto\">ERROR!</strong>\n          </Toast.Header>\n          <Toast.Body>\n            <h6>Invalid Login Credentials!</h6>\n          </Toast.Body>\n        </Toast>\n      </Row>\n    </Container>\n  );\n}\n","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/actions/auth.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/services/auth.service.js",["571"],"import axios from \"axios\";\nimport { API_URL } from \"./constants\";\nimport authHeader from \"./auth-header\";\n\nconst login = (username, password) => {\n  return axios\n    .post(API_URL + \"authenticate\", {\n      username,\n      password,\n    })\n    .then((response) => {\n      if (response.data.jwt) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n      return response.data;\n    });\n};\n\nconst changePwd = (old_password, new_password, confirm_password) => {\n  return axios\n    .post(\n      API_URL + \"change_password\",\n      {\n        old_password,\n        new_password,\n        confirm_password,\n      },\n      { headers: authHeader() }\n    )\n    .then((response) => {\n      if (response.data.jwt) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  return axios.get(API_URL + \"logout/\", { headers: authHeader() });\n};\n\nexport default {\n  login,\n  changePwd,\n  logout,\n};\n","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/store.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Logout/Logout.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Logout/LogoutConfirmation.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/NavbarHeader/NavbarHeader.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/services/constants.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/services/project.service.js",["572"],"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport { API_URL } from \"./constants\";\n\nconst getProjects = () => {\n  return axios\n    .get(API_URL + \"api/projects\", { headers: authHeader() })\n    .then((response) => {\n      return response.data;\n    });\n};\n\nconst getProjectById = (id) => {\n  return axios\n    .get(API_URL + \"api/projects/\"+id, { headers: authHeader() })\n    .then((response) => {\n      return response.data;\n    });\n};\n\nconst deleteProject = (id) => {\n  return axios\n    .delete(API_URL + \"api/projects/\"+id, { headers: authHeader() })\n    .then((response) => {\n        return response.data;\n    });\n};\n\nconst addProjects = (payload) => {\n  return axios\n    .post(\n      API_URL + \"api/projects\",\n      payload,\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data;\n    });\n};\n\nconst editProject = (id, payload) => {\n  return axios\n    .patch(\n      API_URL + \"api/projects/\" + id,\n      payload,\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data;\n    });\n};\n\nconst getProjectAmountById = (id) => {\n  return axios\n    .get(API_URL + \"api/expenses/projectAmount/\"+id, { headers: authHeader() })\n    .then((response) => {\n        return response.data;\n    });\n};\n\n\n\nexport default {\n  getProjects,\n  getProjectById,\n  addProjects,\n  editProject,\n  deleteProject,\n  getProjectAmountById,\n};\n","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/services/auth-header.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reducers/project.js",["573"],"import { FETCH_PROJECTS, FETCH_PROJECTS_FAIL, ADD_PROJECTS, ADD_PROJECTS_FAIL, EDIT_PROJECT, EDIT_PROJECT_FAIL, DELETE_PROJECT, DELETE_PROJECT_FAIL } from \"../actions/types\";\n\nconst initialState = { projects: [] };\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case FETCH_PROJECTS:\n      return {\n        ...state,\n        projects: payload.projects,\n      };\n    case FETCH_PROJECTS_FAIL:\n      return {\n        ...state,\n        projects: [],\n      };\n      case ADD_PROJECTS:\n        return {\n          ...state,\n          // projects: projects,\n        };\n      case ADD_PROJECTS_FAIL:\n        return {\n          ...state,\n        };\n      case EDIT_PROJECT:\n        return {\n          ...state,\n        };\n      case EDIT_PROJECT_FAIL:\n        return {\n          ...state,\n        };\n      case DELETE_PROJECT:\n        return {\n          ...state,\n        };\n      case DELETE_PROJECT_FAIL:\n        return {\n          ...state,\n        };\n    default:\n      return state;\n  }\n}\n","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/actions/project.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/services/expense.service.js",["574"],"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"https://expense-backend-3.herokuapp.com/api/expenses/\";\n\nconst getExpenseSheets = () => {\n  return axios.get(API_URL, { headers: authHeader() }).then((response) => {\n    return response.data;\n  });\n};\n\nconst addEntry = (payload) => {\n  return axios\n    .post(API_URL, payload, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data;\n    });\n};\n\nconst deleteEntry = (id) => {\n  return axios\n    .delete(API_URL + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data;\n    });\n};\n\nconst editEntry = (id, payload) => {\n  return axios\n    .patch(API_URL + id, payload, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data;\n    });\n};\n\nconst getSubmittedExpenses = () => {\n  return axios\n    .get(API_URL + \"approvals/0\", { headers: authHeader() })\n    .then((response) => {\n      return response.data;\n    });\n};\n\nconst updateExpenseState = (id, payload) => {\n  return axios\n    .patch(API_URL + \"updateStatus/\" + id, payload, { headers: authHeader() })\n    .then((response) => {\n      return response.data;\n    });\n};\n\nexport default {\n  getExpenseSheets,\n  addEntry,\n  deleteEntry,\n  editEntry,\n  getSubmittedExpenses,\n  updateExpenseState,\n};\n","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reducers/client.js",["575"],"import {\n  FETCH_CLIENTS,\n  FETCH_CLIENTS_FAIL,\n  ADD_CLIENT,\n  ADD_CLIENT_FAIL,\n  UPDATE_CLIENT,\n  UPDATE_CLIENT_FAIL,\n  DELETE_CLIENT,\n  DELETE_CLIENT_FAIL,\n} from \"../actions/types\";\n\nconst initialState = { clients: [] };\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case FETCH_CLIENTS:\n      return {\n        ...state,\n        clients: payload.clients,\n      };\n    case FETCH_CLIENTS_FAIL:\n      return {\n        ...state,\n        clients: [],\n      };\n    case ADD_CLIENT:\n      return {\n        ...state,\n        clients: [...state.clients, payload.clients],\n      };\n    case ADD_CLIENT_FAIL:\n      return {\n        ...state,\n      };\n    case UPDATE_CLIENT:\n      return {\n        ...state,\n      };\n    case UPDATE_CLIENT_FAIL:\n      return {\n        ...state,\n      };\n\n    case DELETE_CLIENT:\n      return {\n        ...state,\n        // clients: state.clients.filter((i) => i.id !== payload.id),\n        // // clients: [...state.clients,payload.clients]\n      };\n    case DELETE_CLIENT_FAIL:\n      return {\n        ...state,\n      };\n\n    default:\n      return state;\n  }\n}\n","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/actions/client.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/services/client.service.js",["576"],"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport { API_URL } from \"./constants\";\n\nconst getClients = () => {\n  return axios\n    .get(API_URL + \"api/clients\", { headers: authHeader() })\n    .then((response) => {\n      return response.data;\n    });\n};\n\nconst addClient = (payload) => {\n  return axios\n    .post(API_URL + \"api/clients\", payload, { headers: authHeader() })\n    .then((response) => {\n      return response.data;\n    });\n};\n\nconst updateClient = (id, payload) => {\n  return axios\n    .patch(API_URL + \"api/clients/\" + id, payload, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data;\n    });\n};\n\nconst deleteClient = (id) => {\n  return axios\n    .delete(API_URL + \"api/clients/\" + id, {\n      headers: authHeader(),\n      // data:id\n    })\n    .then((response) => {\n      return response.data;\n    });\n};\n\nexport default {\n  getClients,\n  addClient,\n  updateClient,\n  deleteClient,\n};\n","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/actions/employees.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/services/employee.service.js",["577"],"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport { API_URL } from \"./constants\";\n\nconst getEmployees = () => {\n  return axios\n    .get(API_URL + \"api/employees\", { headers: authHeader() })\n    .then((response) => {\n      return response.data;\n    });\n};\n\nexport default {\n  getEmployees,\n};\n","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reducers/employees.js",["578"],"import { FETCH_EMPLOYEES, FETCH_EMPLOYEES_FAIL } from \"../actions/types\";\n\nconst initialState = { employees: [] };\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case FETCH_EMPLOYEES:\n      return {\n        ...state,\n        employees: payload.employees,\n      };\n    case FETCH_EMPLOYEES_FAIL:\n      return {\n        ...state,\n        employees: [],\n      };\n    default:\n      return state;\n  }\n}\n","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reducers/projectById.js",["579"],"import {\n  FETCH_PROJECT_BY_ID,\n  FETCH_PROJECT_BY_ID_FAIL,\n} from \"../actions/types\";\n\nconst initialState = { project: [] };\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case FETCH_PROJECT_BY_ID:\n      const fetchedProject = [payload.project];\n      return {\n        ...state,\n        project: fetchedProject,\n      };\n    case FETCH_PROJECT_BY_ID_FAIL:\n      return {\n        ...state,\n        project: [],\n      };\n    default:\n      return state;\n  }\n}\n","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/actions/expense.actions.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reducers/expense.reducer.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/constants/expense.constants.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Client/ClientHeader.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Client/ClientDashboard.js",["580","581"],"import React from \"react\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { Card, Button, Container, Badge, Dropdown } from \"react-bootstrap\";\nimport AddClient from \"./AddClient\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getClients, deleteClient } from \"../../actions/client\";\n\nconst ClientDashboard = () => {\n  const [show, setShow] = useState(false);\n  const [method, setMethod] = useState(\"Add\");\n  const showModal = () => {\n    setShow(true);\n  };\n  const hideModal = () => {\n    setShow(false);\n    setCurrClient(initialClient);\n    setMethod(\"Add\");\n  };\n\n  const initialClient = {\n    fullName: \"\",\n    nickName: \"\",\n    email: \"\",\n    address: {\n      addressLine1: \"\",\n      addressLine2: \"\",\n      city: \"\",\n      state: \"\",\n      country: \"\",\n      zipcode: \"\",\n      telephone1: \"\",\n      telephone2: \"\",\n      fax: \"\",\n    },\n    website: \"\",\n    billDetails: \"\",\n  };\n\n  const [currClient, setCurrClient] = useState(initialClient);\n  const [currIndex, setCurrIndex] = useState(-1);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getClients())\n      .then(() => {\n        // console.log(\"Clients fetched successfully\");\n        return;\n      })\n      .catch(() => {\n        alert(\"Unable to fetch clients\");\n      });\n  }, [dispatch, currClient]);\n\n  const SortCaret = (order, column) => {\n    if (!order)\n      return (\n        <span className=\"float-end\">\n          <font color=\"grey\">\n            &nbsp;&nbsp;<i className=\"bi bi-caret-up-fill\"></i>\n            <i className=\"bi bi-caret-down-fill\"></i>\n          </font>\n        </span>\n      );\n    else if (order === \"asc\")\n      return (\n        <span className=\"float-end\">\n          &nbsp;&nbsp;<i className=\"bi bi-caret-up-fill\"></i>\n          <font color=\"grey\">\n            <i className=\"bi bi-caret-down-fill\"></i>\n          </font>\n        </span>\n      );\n    else if (order === \"desc\")\n      return (\n        <span className=\"float-end\">\n          &nbsp;&nbsp;\n          <font color=\"grey\">\n            <i className=\"bi bi-caret-up-fill\"></i>\n          </font>\n          <i className=\"bi bi-caret-down-fill\"></i>\n        </span>\n      );\n    return null;\n  };\n  const { clients: content } = useSelector((state) => state.client);\n  // var index=-1;\n  const handleSelect = (e) => {\n    showModal();\n\n    const index = content.findIndex(\n      (o) => o.id.toString() === e.target.id.toString()\n    );\n\n    setCurrClient(content[index]);\n    setCurrIndex(e.target.id);\n    setMethod(\"Update\");\n  };\n  const handleDelete = (e) => {\n    const index = content.findIndex(\n      (o) => o.id.toString() === e.target.id.toString()\n    );\n\n    setCurrClient(content[index]);\n    dispatch(deleteClient(e.target.id))\n      .then(() => {\n        // history.push(\"/home\");\n        // console.log(\"Successfully deleted\");\n        setCurrClient(initialClient);\n      })\n      .catch(() => {\n        // setLoading(false);\n        alert(\"Could Not Delete Client!\");\n        setCurrClient(initialClient);\n      });\n  };\n  const dropDown = (id) => {\n    return (\n      <Dropdown>\n        <Dropdown.Toggle id=\"options-menu\" variant=\"secondary\">\n          <i className=\"bi bi-gear-fill\"></i> Options\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu variant=\"dark\">\n          <Dropdown.Item onClick={handleSelect} id={id}>\n            Edit\n          </Dropdown.Item>\n          <Dropdown.Item onClick={handleDelete} id={id} disabled>\n            Delete\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  };\n  const clientData = content.map((client) => {\n    // const ActiveStatus = client.active ? \"Active\" : \"Inactive\";\n    // const BadgeType = ActiveStatus === \"Active\" ? \"success\" : \"danger\";\n    const Data = {\n      // clientActiveStatus: <Badge bg={BadgeType}>{ActiveStatus}</Badge>,\n      cFullName: client.fullName,\n      cNickName: client.nickName,\n      clientEmail: client.email,\n      clientCountry: client.address.country,\n      clientTelephone1: client.address.telephone1,\n      clientOptions: dropDown(client.id),\n    };\n    return Data;\n  });\n\n  const columns = [\n    // {\n    //   dataField: \"clientActiveStatus\",\n    //   text: \"\",\n    //   sort: true,\n    //   sortCaret: SortCaret,\n    //   headerStyle: (colum, colIndex) => {\n    //     return { width: \"80px\", textAlign: \"center\" };\n    //   },\n    // },\n    {\n      dataField: \"cNickName\",\n      text: \"Client Nick\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"cFullName\",\n      text: \"Client Name\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"clientEmail\",\n      text: \"Email Address\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"clientCountry\",\n      text: \"Country\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"clientTelephone1\",\n      text: \"Telephone 1\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"clientOptions\",\n      text: \"\",\n\n      headerStyle: (colum, colIndex) => {\n        return { width: \"140px\", textAlign: \"center\" };\n      },\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"cNickName\",\n      order: \"asc\", //desc\n    },\n  ];\n\n  const customTotal = (from, to, size) => (\n    <span className=\"react-bootstrap-table-pagination-total\">\n      &nbsp; Showing {from} to {to} of {size} Results\n    </span>\n  );\n\n  const options = {\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    disablePageTitle: true,\n    sizePerPageList: [\n      {\n        text: \"5\",\n        value: 5,\n      },\n      {\n        text: \"10\",\n        value: 10,\n      },\n      {\n        text: \"All\",\n        value: clientData.length,\n      },\n    ],\n  };\n\n  const { SearchBar } = Search;\n\n  return (\n      <Card  style={{ width: \"95%\" }} className=\"ms-5\">\n        <Card.Header as=\"h4\">\n          CLIENTS\n          <Button\n            variant=\"success\"\n            className=\"float-end\"\n            id=\"addClient\"\n            onClick={showModal}\n          >\n            + Add Client\n          </Button>\n        </Card.Header>\n        <Card.Body>\n          <ToolkitProvider\n            keyField=\"cNickName\"\n            data={clientData}\n            columns={columns}\n            search\n          >\n            {(props) => (\n              <div>\n                <SearchBar\n                  {...props.searchProps}\n                  srText=\"Search Clients :\"\n                  placeholder=\"Enter text\"\n                />\n                <br />\n                <BootstrapTable\n                  {...props.baseProps}\n                  hover\n                  // selectRow={{ mode: \"checkbox\" }}\n                  defaultSorted={defaultSorted}\n                  pagination={paginationFactory(options)}\n                  noDataIndication=\"No data available in table\"\n                />\n              </div>\n            )}\n          </ToolkitProvider>\n        </Card.Body>\n        <AddClient\n          show={show}\n          onHide={hideModal}\n          index={currIndex}\n          data={currClient}\n          method={method}\n        />\n      </Card>\n  );\n};\n\nexport default ClientDashboard;\n","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/PrivateRoute.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reducers/projectExpense.js",["582"],"import {\n    FETCH_PROJECT_EXPENSES,\n    FETCH_PROJECT_EXPENSES_FAIL,\n  } from \"../actions/types\";\n  \n  const initialState = { projectExpense: [] };\n  \n  export default function (state = initialState, action) {\n    const { type, payload } = action;\n  \n    switch (type) {\n      case FETCH_PROJECT_EXPENSES:\n        return {\n          ...state,\n          projectExpense: payload.projectExpense,\n        };\n      case FETCH_PROJECT_EXPENSES_FAIL:\n        return {\n          ...state,\n          projectExpense: []\n        };\n      default:\n        return state;\n    }\n  }\n  ","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Login/ChangePassword.js",["583"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Container,\n  Card,\n  Row,\n  Toast,\n  Col,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { changePwd } from \"../../actions/auth\";\n\nconst ChangePassword = () => {\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  const [showA, setShowA] = useState(false);\n  const closeA = () => setShowA(false);\n  const openA = () => setShowA(true);\n  const [showB, setShowB] = useState(false);\n  const closeB = () => setShowB(false);\n  const openB = () => setShowB(true);\n  const [loading, setLoading] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"Sorry!\");\n\n  const schema = yup.object().shape({\n    oldPwd: yup.string().required(\"Enter Old Password\"),\n    newPwd: yup\n      .string()\n      .notOneOf([yup.ref(\"oldPwd\")], \"New Password matches Old Password\")\n      .matches(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/,\n        \"Must Contain 8-16 Characters, One Uppercase, One Lowercase, One Number and One Special Character\"\n      )\n      .max(16, \"Password length should not exceed 16 characters\")\n      .required(\"Enter New Password\"),\n    confirmedPwd: yup\n      .string()\n      .oneOf([yup.ref(\"newPwd\"), null], \"Does not match with the New Password\")\n      .required(\"Confirm Password is a required field\"),\n  });\n\n  const dispatch = useDispatch();\n\n  const onSuccess = (values) => {\n    setLoading(true);\n\n    dispatch(changePwd(values.oldPwd, values.newPwd, values.confirmedPwd))\n      .then((response) => {\n        if (response.isPasswordTemp) {\n          openA();\n        } else {\n          openB();\n        }\n      })\n      .catch((msg) => {\n        setErrMsg(msg);\n        setLoading(false);\n        openA();\n      });\n  };\n  if (!isLoggedIn) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <Container className=\"mt-5\">\n      <Row>\n        <Col lg={4} md={6} />\n        <Col lg={4} md={6}>\n          <Card>\n            <Card.Header className=\"text-center\">\n              <h4>Change Password</h4>\n            </Card.Header>\n            <Card.Body>\n              <Formik\n                validationSchema={schema}\n                validateOnChange={true}\n                onSubmit={onSuccess}\n                initialValues={{\n                  oldPwd: \"\",\n                  newPwd: \"\",\n                  confirmedPwd: \"\",\n                }}\n              >\n                {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  resetForm,\n                  values,\n                  touched,\n                  isValid,\n                  errors,\n                }) => (\n                  <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group className=\"mb-3\" size=\"lg\" controlId=\"oldPwd\">\n                      <Form.Label>Temporary or Old Password</Form.Label>\n                      <Form.Control\n                        // autoFocus\n                        type=\"password\"\n                        name=\"oldPwd\"\n                        value={values.oldPwd}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.oldPwd && errors.oldPwd}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.oldPwd}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" size=\"lg\" controlId=\"newPwd\">\n                      <Form.Label>New Password</Form.Label>\n                      <OverlayTrigger\n                        key=\"right\"\n                        placement=\"right\"\n                        overlay={\n                          <Tooltip id={`tooltip-right`}>\n                            <strong>\n                              Password Must Contain 8-16 Characters, One Uppercase [A-Z],\n                              One Lowercase [a-z], One Number [0-9] and One Special Character [!@#$%^&*]\n                            </strong>\n                          </Tooltip>\n                        }\n                      >\n                        <Form.Control\n                          type=\"password\"\n                          name=\"newPwd\"\n                          value={values.newPwd}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          isInvalid={touched.newPwd && errors.newPwd}\n                        />\n                      </OverlayTrigger>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.newPwd}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group\n                      className=\"mb-3\"\n                      size=\"lg\"\n                      controlId=\"confirmedPwd\"\n                    >\n                      <Form.Label>Confirm Password</Form.Label>\n                      <Form.Control\n                        type=\"password\"\n                        name=\"confirmedPwd\"\n                        value={values.confirmedPwd}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.confirmedPwd && errors.confirmedPwd}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.confirmedPwd}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <br />\n                    <div className=\"d-grid\">\n                      <Button\n                        variant=\"primary\"\n                        type=\"submit\"\n                        disabled={values.oldPwd.length === 0 || !isValid}\n                      >\n                        Submit\n                      </Button>\n                      <br />\n                      <Button\n                        variant=\"secondary\"\n                        type=\"reset\"\n                        onClick={resetForm}\n                      >\n                        Reset\n                      </Button>\n                    </div>\n                  </Form>\n                )}\n              </Formik>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={4} md={6} />\n      </Row>\n      <br />\n      <Row className=\"justify-content-center\">\n        <Toast\n          className=\"text-center\"\n          bg=\"danger\"\n          style={{ width: \"18rem\" }}\n          show={showA}\n          onClose={closeA}\n          position=\"middle-center\"\n          delay={3000}\n          autohide\n        >\n          <Toast.Header>\n            <strong className=\"me-auto\">ERROR!</strong>\n          </Toast.Header>\n          <Toast.Body>\n            <h6>Password could not be reset: {errMsg}</h6>\n          </Toast.Body>\n        </Toast>\n      </Row>\n      <br />\n      <Row className=\"justify-content-center\">\n        <Toast\n          className=\"text-center\"\n          bg=\"success\"\n          style={{ width: \"18rem\" }}\n          show={showB}\n          onClose={closeB}\n          position=\"middle-center\"\n          delay={3000} \n          autohide\n        >\n          <Toast.Header>\n            <strong className=\"me-auto\">SUCCESS!</strong>\n          </Toast.Header>\n          <Toast.Body>\n            <h6>Password Changed Successfully! Click <Card.Link as={Link} to=\"/home\" style={{color: 'white'}}>here</Card.Link> to go to Home! </h6>\n          </Toast.Body>\n        </Toast>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ChangePassword;\n","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Approval/Approvals.js",["584","585"],"import React from \"react\";\nimport { Card, Button, Col, ProgressBar } from \"react-bootstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport ApprovalHeader from \"./ApprovalHeader\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport {\n  getSubmittedExpenses,\n  updateExpenseState,\n} from \"../../actions/expense.actions\";\nimport ViewExpense from \"./ViewExpense\";\nimport { Modal } from \"bootstrap\";\n\nconst Approvals = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getSubmittedExpenses())\n      .then(() => {\n        // console.log(\"Got Submitted Expenses\");\n        return;\n      })\n      .catch(() => {\n        // openToast();\n        alert(\"Could Not Fetch Expenses Due For Approval\");\n      });\n  }, [dispatch]);\n\n  const viewButton = (id) => {\n    return (\n      <Button variant=\"secondary\" onClick={handleShow} id={id}>\n        View Details\n      </Button>\n    );\n  };\n\n  const SortCaret = (order, column) => {\n    if (!order)\n      return (\n        <span className=\"float-end\">\n          <font color=\"grey\">\n            &nbsp;&nbsp;<i className=\"bi bi-caret-up-fill\"></i>\n            <i className=\"bi bi-caret-down-fill\"></i>\n          </font>\n        </span>\n      );\n    else if (order === \"asc\")\n      return (\n        <span className=\"float-end\">\n          &nbsp;&nbsp;<i className=\"bi bi-caret-up-fill\"></i>\n          <font color=\"grey\">\n            <i className=\"bi bi-caret-down-fill\"></i>\n          </font>\n        </span>\n      );\n    else if (order === \"desc\")\n      return (\n        <span className=\"float-end\">\n          &nbsp;&nbsp;\n          <font color=\"grey\">\n            <i className=\"bi bi-caret-up-fill\"></i>\n          </font>\n          <i className=\"bi bi-caret-down-fill\"></i>\n        </span>\n      );\n    return null;\n  };\n\n  const onApprove = (e) => {\n    const payload = {\n      status: \"APPROVED\",\n    };\n    dispatch(updateExpenseState(e.target.id, payload))\n      .then(() => {\n        dispatch(getSubmittedExpenses())\n          .then(() => {\n            // console.log(\"Approved, and expenses fetched successfully\");\n            return;\n          })\n          .catch(() => {\n            alert(\"Unable to fetch expenses\");\n          });\n      })\n      .catch(() => {\n        alert(\"Approval Failed!\")\n      });\n  };\n\n  const onReject = (e) => {\n    const payload = {\n      status: \"REJECTED\",\n    };\n    dispatch(updateExpenseState(e.target.id, payload))\n      .then(() => {\n        dispatch(getSubmittedExpenses())\n          .then(() => {\n            // console.log(\"Rejected, and expenses fetched successfully\");\n            return;\n          })\n          .catch(() => {\n            alert(\"Unable to fetch expenses\");\n          });\n      })\n      .catch(() => {\n        alert(\"Rejection Failed!\")\n      });\n  };\n  const initExp = {\n    amount: 0,\n    attachments: [],\n    billable: true,\n    currency: \"INR\",\n    date: \"\",\n    description: \"\",\n    employee: { firstName: \"\", id: -1, lastName: \"\" },\n    expenseId: -1,\n    name: \"\",\n    paymentMethod: \"\",\n    project: {\n      projectName: \"\",\n      projectManager: { firstName: \"\", lastName: \"\" },\n    },\n    reimburseable: true,\n    status: \"SUBMITTED\",\n    tax: 0,\n    taxZone: \"IND\",\n    attachments:[],\n  };\n  const { expensesSubmitted: content } = useSelector(\n    (state) => state.expenseByStatus\n  );\n  const { user } = useSelector((state) => state.auth);\n  const [show, setShow] = useState(false);\n  const handleShow = (e) => {\n    setShow(true);\n    const index = content.findIndex(\n      (o) => o.expenseId.toString() === e.target.id.toString()\n    );\n    setExpData(content[index]);\n  };\n  const handleClose = () => {\n    setShow(false);\n  };\n  const [expData, setExpData] = useState(initExp);\n\n  const approveButton = (id) => {\n    return (\n      <Button variant=\"success\" onClick={onApprove} id={id}>\n        Approve\n      </Button>\n    );\n  };\n\n  const rejectButton = (id) => {\n    return (\n      <Button variant=\"danger\" onClick={onReject} id={id}>\n        Reject\n      </Button>\n    );\n  };\n\n  const billableBar = (billable, amt) => {\n    const billablePercent = (Number(billable) / Number(amt)) * 100.0;\n    const nonBillablePercent = 100.0 - billablePercent;\n    const nonBillable = Number(amt) - Number(billable);\n    return (\n      <>\n        <ProgressBar>\n          <ProgressBar\n            variant=\"warning\"\n            now={billablePercent}\n            label=\"Billable\"\n            key={1}\n          />\n          <ProgressBar\n            variant=\"primary\"\n            now={nonBillablePercent}\n            label=\"Non-Billable\"\n            key={2}\n          />\n        </ProgressBar>\n        <strong>Billable:</strong> {Number(billable).toFixed(2)}{\" \"}\n        <strong>Non-Billable:</strong> {Number(nonBillable).toFixed(2)}\n      </>\n    );\n  };\n\n  const expenseData = content\n    .filter((exp) => exp.employee.id !== user.id)\n    .map((exp) => {\n      const expData = {\n        expId: exp.expenseId,\n        empName: exp.employee.firstName + \" \" + exp.employee.lastName,\n        date: exp.date,\n        amt: exp.currency + \" \" + Number(Number(exp.amount) + Number(exp.tax)).toFixed(2),\n        bar: <center>{billableBar(Number(exp.amount)+Number(exp.tax), Number(exp.amount)+Number(exp.tax))}</center>,\n        viewDetails: <center>{viewButton(exp.expenseId)}</center>,\n        approve: <center>{approveButton(exp.expenseId)}</center>,\n        reject: <center>{rejectButton(exp.expenseId)}</center>,\n      };\n      return expData;\n    });\n\n  const columns = [\n    {\n      dataField: \"expId\",\n      text: \"Expense ID\",\n      sort: true,\n      sortCaret: SortCaret,\n      // headerStyle: (colum, colIndex) => {\n      //   return { width: \"9rem\" };\n      // },\n    },\n    {\n      dataField: \"empName\",\n      text: \"Employee Name\",\n      sort: true,\n      sortCaret: SortCaret,\n      // headerStyle: (colum, colIndex) => {\n      //   return { width: \"13rem\" };\n      // },\n    },\n    {\n      dataField: \"date\",\n      text: \"Date\",\n      sort: true,\n      sortCaret: SortCaret,\n      // headerStyle: (colum, colIndex) => {\n      //   return { width: \"7rem\" };\n      // },\n    },\n    {\n      dataField: \"amt\",\n      text: \"Amount\",\n      sort: true,\n      sortCaret: SortCaret,\n      // headerStyle: (colum, colIndex) => {\n      //   return { width: \"9rem\" };\n      // },\n    },\n    {\n      dataField: \"bar\",\n      text: \"Billable/Non-Billable\",\n      headerStyle: (colum, colIndex) => {\n        return { width: \"25rem\" };\n      },\n    },\n    {\n      dataField: \"viewDetails\",\n      text: \"\",\n      // headerStyle: (colum, colIndex) => {\n      //   return { width: \"8rem\" };\n      // },\n    },\n    {\n      dataField: \"approve\",\n      text: \"\",\n      // headerStyle: (colum, colIndex) => {\n      //   return { width: \"7rem\" };\n      // },\n    },\n    {\n      dataField: \"reject\",\n      text: \"\",\n      // headerStyle: (colum, colIndex) => {\n      //   return { width: \"7rem\" };\n      // },\n    },\n  ];\n\n  const { SearchBar } = Search;\n\n  return (\n    <>\n      <ApprovalHeader />\n      <Card style={{ width: \"95%\" }} className=\"ms-5\">\n        <Card.Header as=\"h4\">\n          <Col>\n            <div className=\"dark\">EXPENSE APPROVAL</div>\n          </Col>\n        </Card.Header>\n        <Card.Body>\n          <ToolkitProvider\n            keyField=\"expId\"\n            data={expenseData}\n            columns={columns}\n            search\n          >\n            {(props) => (\n              <div>\n                <SearchBar\n                  id=\"searchbar\"\n                  {...props.searchProps}\n                  srText=\"Search Expenses :\"\n                  placeholder=\"Enter text\"\n                />\n                <br />\n                <BootstrapTable\n                  keyField=\"expId\"\n                  {...props.baseProps}\n                  hover\n                  pagination={paginationFactory()}\n                  noDataIndication=\"No data available in the table for you\"\n                />\n              </div>\n            )}\n          </ToolkitProvider>\n        </Card.Body>\n        <ViewExpense show={show} onHide={handleClose} data={expData} />\n      </Card>\n    </>\n  );\n};\n\nexport default Approvals;\n","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Approval/ApprovalHeader.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reducers/expenseByStatus.js",["586"],"import { expenseConstants } from \"../constants/expense.constants\";\n\nconst initialState = { expensesSubmitted: [] };\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n      case expenseConstants.GET_SUBMITTED_EXPENSES:\n        return {\n          ...state,\n          expensesSubmitted : payload.expensesSubmitted\n        };\n      case expenseConstants.GET_SUBMITTED_EXPENSES_FAIL:\n        return {\n            ...state,\n            expensesSubmitted : []\n        };\n      case expenseConstants.UPDATE_EXPENSE_STATUS:\n        return{\n          ...state,\n        }\n        case expenseConstants.UPDATE_EXPENSE_STATUS_FAIL:\n          return{\n            ...state,\n          }\n      default:\n        return state\n    }\n  }","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Approval/ViewExpense.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/services/attachments.service.js",["587"],"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport { API_URL } from \"./constants\";\n\nconst uploadDoc = (payload) => {\n    return axios\n      .post(\n        API_URL + \"api/attachments/upload/db\",\n        payload,\n        {\n          headers: authHeader(),\n        },\n      )\n      .then((response) => {\n        return response.data;\n      });\n  };\n\n  const downloadDoc = (id) => {\n    return axios\n      .get(\n        API_URL + \"api/attachments/download/\" + id + \"/db\",\n        {\n          headers: authHeader(),\n          responseType: 'blob'\n        },\n      )\n      .then((response) => {\n        return response.data;\n      });\n  };\n\nexport default {\n    uploadDoc,\n    downloadDoc,\n}\n","/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/reducers/attachments.reducer.js",[],"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/constants/attachments.constants.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/index.js",[],["588","589"],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/App.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/store.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/MainHeader/MainHeader.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Employees.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Home.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/PrivateRoute.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/NavbarHeader/NavbarHeader.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Project/Project.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Project/ProjectSummary.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Client/Client.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Login/Login.js",["590"],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Login/ChangePassword.js",["591"],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Expense/AddExpenseSheet.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Approval/Approvals.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Logout/Logout.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Logout/LogoutConfirmation.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/index.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Project/ProjectDashboard.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Project/ProjectHeader.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Client/ClientDashboard.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Project/ProjectSummaryHeader.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Client/ClientHeader.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Project/ProjectSummaryDashboard.js",["592","593"],"import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Card,\n  Tab,\n  Tabs,\n  ListGroup,\n  Row,\n  Col,\n  Table,\n  Badge,\n} from \"react-bootstrap\";\nimport \"./ProjectSummaryDashboard.css\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { getProjectById, getProjectAmountById } from \"../../actions/project\";\n\nconst ProjectSummaryDashboard = (props) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getProjectById(props.id))\n      .then(() => {\n        // console.log(\"Project fetched successfully for summary\");\n        return;\n      })\n      .catch(() => {\n        alert(\"Unable to fetch project for summary\");\n      });\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getProjectAmountById(props.id))\n      .then(() => {\n        // console.log(\"Project expenses fetched successfully for summary\");\n        return;\n      })\n      .catch(() => {\n        alert(\"Unable to fetch project expenses for summary\");\n      });\n  }, [dispatch]);\n\n  const { project: content } = useSelector((state) => state.projectById);\n  const { projectExpense: expense } = useSelector((state) => state.projectExpense);\n  if (content.length === 0) {\n    return <Redirect to={\"/projectsummary/\" + props.id} />;\n  }\n  if (expense.length === 0) {\n    return <Redirect to={\"/projectsummary/\" + props.id} />;\n  }\n  const project = content[0];\n  const statusType = {\n    TO_DO: \"To-Do\",\n    IN_PROGRESS: \"In Progress\",\n    COMPLETED: \"Completed\",\n    SUSPENDED: \"Suspended\",\n  };\n\n  const ActiveStatus = project.active ? \"Active\" : \"Inactive\";\n  const BadgeType = ActiveStatus === \"Active\" ? \"success\" : \"danger\";\n  const soonDue = project.soonDue ? <Badge bg=\"info\">Soon Due</Badge> : \"\";\n\n  return (\n    <Row id=\"projectSummary\">\n      <Col sm={8}>\n        <Card>\n          <Card.Header as=\"h4\">\n            {project.client.fullName}\n            <Card.Text className=\"float-end\">\n              <Badge bg={BadgeType}>{ActiveStatus}</Badge>\n            </Card.Text>\n            <Card.Text className=\"float-end\">&nbsp;</Card.Text>\n            <Card.Text className=\"float-end\">{soonDue}</Card.Text>\n            <br />\n            <h1>\n              <font color=\"blue\">{project.projectName}</font>\n            </h1>\n            <h6>\n              <i className=\"bi bi-calendar3\"></i> Started On:{\" \"}\n              {project.startDate.substring(0, 10)}\n              &nbsp; &nbsp;\n              <i className=\"bi bi-calendar3\"></i> Due By:{\" \"}\n              {project.endDate.substring(0, 10)}\n              &nbsp; &nbsp;\n              <i className=\"bi bi-card-list\"></i> {statusType[project.status]}\n            </h6>\n          </Card.Header>\n          <Card.Body>\n            <Tabs defaultActiveKey=\"description\">\n              <Tab eventKey=\"description\" title=\"Description\">\n                <br />\n                {project.description}\n              </Tab>\n\n              <Tab eventKey=\"team\" title=\"Team\">\n                <br />\n                <strong>Team Members:</strong>\n                <ul>\n                  <li key=\"PM\">\n                    {project.projectManager.firstName +\n                      \" \" +\n                      project.projectManager.lastName}{\" \"}\n                    <Badge pill bg=\"warning\" text=\"dark\">\n                      Project Manager\n                    </Badge>\n                  </li>\n                  {project.teamMembers\n                    .filter((tm) => tm.id !== project.projectManager.id)\n                    .map((tm) => {\n                      return (\n                        <li key={tm.id}>{tm.firstName + \" \" + tm.lastName}</li>\n                      );\n                    })}\n                </ul>\n              </Tab>\n\n              {/* <Tab eventKey=\"attachment\" title=\"Attachment\">\n                <br />\n                <FileUpload />\n              </Tab> */}\n            </Tabs>\n          </Card.Body>\n        </Card>\n      </Col>\n      <Col>\n        <Card>\n          <Card.Header>\n            <h3>\n              <font color=\"blue\">PROJECT SUMMARY</font>\n            </h3>\n          </Card.Header>\n          <Card.Body>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <Card.Text>\n                  <strong>TOTAL HOURS</strong>\n                </Card.Text>\n                <h2>&nbsp;0.00</h2>\n                <Table borderless>\n                  <tbody>\n                    <tr>\n                      <td>Billable Hours</td>\n                      <td className=\"float-end\">0.00</td>\n                    </tr>\n                    <tr>\n                      <td>Non - Billable Hours</td>\n                      <td className=\"float-end\">0.00</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Card.Text>\n                  <strong>TOTAL EXPENSES</strong>\n                </Card.Text>\n                <h2>&nbsp;{Number(expense.Total).toFixed(2)}</h2>\n                <Table borderless>\n                  <tbody>\n                    <tr>\n                      <td>Billable Expenses</td>\n                      <td className=\"float-end\">{Number(expense[\"Billable\"]).toFixed(2)}</td>\n                    </tr>\n                    <tr>\n                      <td>Non - Billable Expenses</td>\n                      <td className=\"float-end\">{Number(expense[\"Non-billable\"]).toFixed(2)}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProjectSummaryDashboard;\n","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/actions/client.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/actions/expense.actions.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/actions/project.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/actions/auth.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/actions/employees.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Expense/AddExpenseEntry.js",["594","595","596"],"import React, { useRef } from \"react\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport \"./Expense.css\";\n\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nimport { getExpenseSheets } from \"../../actions/expense.actions\";\nimport { getProjects } from \"../../actions/project\";\nimport { editEntry } from \"../../actions/expense.actions\";\nimport { addEntry } from \"../../actions/expense.actions\";\nimport attachmentsService from \"../../services/attachments.service\";\n\nconst AddExpenseEntry = (props) => {\n  const dispatch = useDispatch();\n  var data = props.data;\n\n  useEffect(() => {\n    dispatch(getProjects())\n      .then(() => {\n        // console.log(\"Projects fetched successfully\");\n        return;\n      })\n      .catch(() => {\n        alert(\"Unable to fetch projects\");\n      });\n  }, [dispatch]);\n\n  const transformDate = (date) => {\n    const splitDate = date.split(\"-\");\n    const newDateList = splitDate.reverse();\n    const newDate = newDateList.join(\"-\");\n\n    return newDate;\n  };\n\n  const schema = yup.object().shape({\n    name: yup.string().required(\"Required!\"),\n    paymentMethod: yup.string().required(\"Required!\"),\n    currency: yup.string().required(\"Required!\"),\n    billable: yup.bool().required(\"Required!\"),\n    reimburseable: yup.bool().required(\"Required!\"),\n    amount: yup\n      .number()\n      .min(0, \"Minumim value must be 0\")\n      .test(\n        'has-2-decimal',\n        'Maximum 2 dgits after decimal point',\n         value => (value + \"\").match(/^(?:\\d*\\.\\d{1,2}|\\d+)$/),\n      )\n      .typeError(\"Cost must be a numerical value\")\n      .required(\"Required!\"),\n    taxZone: yup.string().required(\"Required!\"),\n    tax: yup\n      .number()\n      .min(0, \"Minumim value must be 0\")\n      .test(\n        'has-2-decimal',\n        'Maximum 2 dgits after decimal point',\n         value => (value + \"\").match(/^(?:\\d*\\.\\d{1,2}|\\d+)$/),\n      )\n      .typeError(\"Cost must be a numerical value\")\n      .required(\"Required!\"),\n    description: yup.string().required(\"Required!\"),\n    file: yup.mixed().required(\"Required!\"),\n  });\n\n  const schemaEdit = yup.object().shape({\n    name: yup.string().required(\"Required!\"),\n    paymentMethod: yup.string().required(\"Required!\"),\n    currency: yup.string().required(\"Required!\"),\n    billable: yup.bool().required(\"Required!\"),\n    reimburseable: yup.bool().required(\"Required!\"),\n    amount: yup\n      .number()\n      .min(0, \"Minumim value must be 0\")\n      .test(\n        'has-2-decimal',\n        'Maximum 2 dgits after decimal point',\n         value => (value + \"\").match(/^(?:\\d*\\.\\d{1,2}|\\d+)$/),\n      )\n      .typeError(\"Cost must be a numerical value\")\n      .required(\"Required!\"),\n    taxZone: yup.string().required(\"Required!\"),\n    tax: yup\n      .number()\n      .min(0, \"Minumim value must be 0\")\n      .test(\n        'has-2-decimal',\n        'Maximum 2 dgits after decimal point',\n         value => (value + \"\").match(/^(?:\\d*\\.\\d{1,2}|\\d+)$/),\n      )\n      .typeError(\"Cost must be a numerical value\")\n      .required(\"Required!\"),\n    description: yup.string().required(\"Required!\"),\n  });\n\n  const [loading, setLoading] = useState(false);\n  const dummyForm = new FormData();\n  const [fileData, setFileData] = useState(dummyForm);\n  const [fileChange, setFileChange] = useState(0);\n  const { projects } = useSelector((state) => state.project);\n  const { user: currentUser } = useSelector((state) => state.auth);\n\n  const onSuccess = (values) => {\n    const payload = {};\n    payload[\"project\"] = { id: Number(values.projectName) };\n    payload[\"name\"] = values.name;\n    payload[\"currency\"] = values.currency;\n    payload[\"date\"] = transformDate(values.date);\n    payload[\"billable\"] = values.billable;\n    payload[\"reimburseable\"] = values.reimburseable;\n    payload[\"amount\"] = values.amount;\n    payload[\"taxZone\"] = values.taxZone;\n    payload[\"tax\"] = values.tax;\n    payload[\"paymentMethod\"] = values.paymentMethod;\n    payload[\"status\"] = \"SUBMITTED\";\n    payload[\"description\"] = values.description;\n    payload[\"attachments\"] = [];\n\n    props.onHide();\n\n    setLoading(true);\n\n    attachmentsService\n      .uploadDoc(fileData)\n      .then((response) => {\n        // payload[\"attachments\"].push(response);\n        payload[\"attachments\"] = [{\"id\":response.id}];\n        dispatch(addEntry(payload))\n          .then(() => {\n            dispatch(getExpenseSheets())\n              .then(() => {\n                // console.log(\"Expenses fetched successfully\");\n                return;\n              })\n              .catch(() => {\n                alert(\"Unable to fetch Expenses\");\n              });\n          })\n          .catch(() => {\n            alert(\"Expense Could Not be Added!\");\n            setLoading(false);\n          });\n      })\n      .catch(() => {\n        alert(\"File Could Not Be Attached!\");\n      });\n  };\n\n  const onSuccessEdit = (values) => {\n    const payload = {};\n    payload[\"name\"] = values.name;\n    payload[\"currency\"] = values.currency;\n    payload[\"billable\"] = values.billable;\n    payload[\"reimburseable\"] = values.reimburseable;\n    payload[\"amount\"] = values.amount;\n    payload[\"taxZone\"] = values.taxZone;\n    payload[\"tax\"] = values.tax;\n    payload[\"paymentMethod\"] = values.paymentMethod;\n    payload[\"description\"] = values.description;\n    // payload[\"attachments\"] = [];\n    props.onHide();\n    setLoading(true);\n\n    if (fileChange === 1) {\n      attachmentsService\n        .uploadDoc(fileData)\n        .then((response) => {\n          // payload[\"attachments\"] = [response];\n          // console.log(\"File Changed -> \", payload);\n          payload[\"attachments\"] = [{\"id\":response.id}];\n          dispatch(editEntry(data.expenseId, payload))\n            .then(() => {\n              dispatch(getExpenseSheets())\n                .then(() => {\n                  // console.log(\"Expenses fetched successfully\");\n                  return;\n                })\n                .catch(() => {\n                  alert(\"Unable to fetch Expenses\");\n                });\n            })\n            .catch(() => {\n              alert(\"Could Not Edit Expense!\")\n              setLoading(false);\n            });\n        })\n        .catch(() => {\n          alert(\"File Could Not Be Attached!\");\n        });\n    } else {\n      dispatch(editEntry(data.expenseId, payload))\n        .then(() => {\n          dispatch(getExpenseSheets())\n            .then(() => {\n              // console.log(\"Expense updated successfully\");\n              return;\n            })\n            .catch(() => {\n              alert(\"Unable to update Expense\");\n            });\n        })\n        .catch(() => {\n          alert(\"Could Not Edit Expense!\")\n          setLoading(false);\n        });\n    }\n  };\n\n  \n  const handleSubmit = () => {\n    if (formRef.current) {\n      formRef.current.handleSubmit();\n    }\n  };\n  const formRef = useRef();\n\n  const onFileChangeHandler = (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", e.target.files[0]);\n    if (e.target.files.length > 0) setFileChange(1);\n    if (e.target.files.length === 0) setFileChange(0);\n    setFileData(formData);\n  };\n\n  return (\n    <Modal {...props} backdrop=\"static\" size=\"lg\" id=\"entry-modal\">\n      <Modal.Header closeButton>\n        <Modal.Title>{props.method} Expense Entry</Modal.Title>\n      </Modal.Header>\n\n      <Formik\n        key=\"Formik\"\n        validationSchema={props.method === \"Edit\" ? schemaEdit : schema}\n        validateOnChange={true}\n        onSubmit={props.method === \"Edit\" ? onSuccessEdit : onSuccess}\n        initialValues={props.data}\n        innerRef={formRef}\n      >\n        {({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          values,\n          touched,\n          isValid,\n          errors,\n        }) => (\n          <Form noValidate onSubmit={handleSubmit}>\n            <Modal.Body>\n              <Tabs defaultActiveKey=\"basic\">\n                <Tab eventKey=\"basic\" title=\"Basic\">\n                  <br />\n                  <Row>\n                    <Form.Group as={Col} controlId=\"projectName\">\n                      <Form.Label>\n                        <small>Project name</small>\n                      </Form.Label>\n                      <Form.Select\n                        name=\"projectName\"\n                        value={values.projectName}\n                        disabled={props.method === \"Edit\"}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.projectName && errors.projectName}\n                      >\n                        <option key=\"SP\" value=\"\" disabled>\n                          Select Project\n                        </option>\n                        {projects.map((project) => {\n                          return (\n                            <option key={project.id} value={project.id}>\n                              {project.projectName}\n                            </option>\n                          );\n                        })}\n                      </Form.Select>\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Group as={Col} controlId=\"name\">\n                      <Form.Label>\n                        <small>Expense Name </small>\n                      </Form.Label>\n                      <Form.Control\n                        // as=\"textarea\"\n                        name=\"name\"\n                        value={values.name}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.name && errors.name}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.name}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"paymentMethod\">\n                      <Form.Label>\n                        <small>Payment Method</small>\n                      </Form.Label>\n                      <Form.Select\n                        aria-label=\"Default select example\"\n                        name=\"paymentMethod\"\n                        value={values.paymentMethod}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          touched.paymentMethod && errors.paymentMethod\n                        }\n                      >\n                        <option></option>\n                        <option value=\"CASH\">CASH</option>\n                        <option value=\"CARD\">CARD</option>\n                        <option value=\"ONLINE TRANSACTION\">\n                          ONLINE TRANSACTION\n                        </option>\n                      </Form.Select>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.paymentMethod}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"currency\">\n                      <Form.Label>\n                        <small>Currency</small>\n                      </Form.Label>\n                      <Form.Select\n                        aria-label=\"Default select example\"\n                        name=\"currency\"\n                        value={values.currency}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.currency && errors.currency}\n                      >\n                        <option></option>\n                        <option value=\"INR\">INR</option>\n                        <option value=\"USD\">USD</option>\n                      </Form.Select>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.currency}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Row>\n\n                  <Row>\n                    <Form.Group as={Col} controlId=\"date\">\n                      <Form.Label>\n                        <small>Expense Entry Date </small>\n                      </Form.Label>\n                      <Form.Control\n                        type=\"date\"\n                        name=\"date\"\n                        value={values.date}\n                        readOnly\n                      />\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"billable\">\n                      <Form.Label>\n                        <small>Billable</small>\n                      </Form.Label>\n                      <Form.Select\n                        aria-label=\"Default select example\"\n                        name=\"billable\"\n                        value={values.billable}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.billable && errors.billable}\n                      >\n                        <option></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </Form.Select>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.billable}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"reimburseable\">\n                      <Form.Label>\n                        <small>Reimburse</small>\n                      </Form.Label>\n                      <Form.Select\n                        aria-label=\"Default select example\"\n                        name=\"reimburseable\"\n                        value={values.reimburseable}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          touched.reimburseable && errors.reimburseable\n                        }\n                      >\n                        <option></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </Form.Select>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.reimburseable}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Group as={Col} controlId=\"amount\">\n                      <Form.Label>\n                        <small>Net Amount</small>\n                      </Form.Label>\n                      <Form.Control\n                        name=\"amount\"\n                        value={values.amount}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.amount && errors.amount}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.amount}\n                      </Form.Control.Feedback>{\" \"}\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"taxZone\">\n                      <Form.Label>\n                        <small>Tax Zone</small>\n                      </Form.Label>\n\n                      <Form.Select\n                        aria-label=\"Default select example\"\n                        name=\"taxZone\"\n                        value={values.taxZone}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.taxZone && errors.taxZone}\n                      >\n                        <option></option>\n                        <option value=\"IND\">IND</option>\n                        <option value=\"USA\">USA</option>\n                      </Form.Select>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.taxZone}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Group as={Col} controlId=\"tax\">\n                      <Form.Label>\n                        <small>Tax</small>\n                      </Form.Label>\n                      <Form.Control\n                        name=\"tax\"\n                        value={values.tax}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.tax && errors.tax}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.tax}\n                      </Form.Control.Feedback>{\" \"}\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"netAmount\">\n                      <Form.Label>\n                        <small>Amount</small>\n                      </Form.Label>\n                      <Form.Control\n                        name=\"netAmount\"\n                        value={String(\n                          Number(values.amount) + Number(values.tax)\n                        )}\n                        readOnly\n                      />\n                    </Form.Group>\n                  </Row>\n                </Tab>\n\n                <Tab eventKey=\"description\" title=\"Description\">\n                  <br />\n                  <Form.Group className=\"mb-3\" controlId=\"description\">\n                    <Form.Control\n                      as=\"textarea\"\n                      type=\"long-description\"\n                      name=\"description\"\n                      placeholder=\"Enter description of expense here\"\n                      value={values.description}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      isInvalid={touched.description && errors.description}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.description}\n                    </Form.Control.Feedback>{\" \"}\n                  </Form.Group>\n                </Tab>\n                <Tab eventKey=\"attachment\" title=\"Attachment\">\n                  <br />\n                  <Form.Group className=\"mb-3\" controlId=\"file\">\n                    <Form.Group className=\"position-relative mb-3\">\n                      <Form.Label>Upload File (PDFs only)</Form.Label>\n                      <Form.Control\n                        type=\"file\"\n                        name=\"file\"\n                        accept=\".pdf\"\n                        onChange={(e) => {\n                          handleChange(e);\n                          onFileChangeHandler(e);\n                        }}\n                        isInvalid={!!errors.file}\n                        // disabled={props.method === \"Edit\"}\n                      />\n                      <Form.Control.Feedback type=\"invalid\" tooltip>\n                        {errors.file}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    {data.attachments.length > 0 &&\n                      \"File Already Uploaded : \" + data.attachments[0].docName}\n                  </Form.Group>\n                </Tab>\n              </Tabs>\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button\n                variant=\"success\"\n                type=\"submit\"\n                onClick={handleSubmit}\n                disabled={values.name.length === 0 || !isValid}\n              >\n                {props.method} Expense Entry\n              </Button>\n              <Button variant=\"secondary\" onClick={props.onHide}>\n                Close\n              </Button>\n            </Modal.Footer>\n          </Form>\n        )}\n      </Formik>\n    </Modal>\n  );\n};\n\nexport default AddExpenseEntry;\n","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Approval/ViewExpense.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Approval/ApprovalHeader.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/services/attachments.service.js",["597"],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/auth.js",["598"],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/message.js",["599"],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/client.js",["600"],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/project.js",["601"],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/projectById.js",["602"],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/projectExpense.js",["603"],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/employees.js",["604"],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/expense.reducer.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/expenseByStatus.js",["605"],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/attachments.reducer.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Client/AddClient.js",["606","607","608"],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/Project/AddProject.js",["609","610","611","612","613"],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/services/client.service.js",["614"],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/actions/types.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/services/project.service.js",["615"],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/services/auth.service.js",["616"],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/services/employee.service.js",["617"],"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport { API_URL } from \"./constants\";\n\nconst getEmployees = () => {\n  return axios\n    .get(API_URL + \"api/employees\", { headers: authHeader() })\n    .then((response) => {\n      return response.data;\n    });\n};\n\nconst addEmployees = (payload) => {\n  return axios\n    .post(API_URL + \"api/employees\", payload)\n    .then((response) => {\n      return response.data;\n    });\n};\n\nexport default {\n  getEmployees,\n  addEmployees,\n};\n","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/services/constants.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/services/auth-header.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/services/expense.service.js",["618"],"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport { API_URL } from \"./constants\";\n\nconst getExpenseSheets = () => {\n  return axios.get(API_URL + \"api/expenses/\", { headers: authHeader() }).then((response) => {\n    return response.data;\n  });\n};\n\nconst addEntry = (payload) => {\n  return axios\n    .post(API_URL + \"api/expenses/\", payload, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data;\n    });\n};\n\nconst deleteEntry = (id) => {\n  return axios\n    .delete(API_URL + \"api/expenses/\" + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data;\n    });\n};\n\nconst editEntry = (id, payload) => {\n  return axios\n    .patch(API_URL + \"api/expenses/\" + id, payload, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data;\n    });\n};\n\nconst getSubmittedExpenses = () => {\n  return axios\n    .get(API_URL + \"api/expenses/approvals/0\", { headers: authHeader() })\n    .then((response) => {\n      return response.data;\n    });\n};\n\nconst updateExpenseState = (id, payload) => {\n  return axios\n    .patch(API_URL + \"api/expenses/updateStatus/\" + id, payload, { headers: authHeader() })\n    .then((response) => {\n      return response.data;\n    });\n};\n\nexport default {\n  getExpenseSheets,\n  addEntry,\n  deleteEntry,\n  editEntry,\n  getSubmittedExpenses,\n  updateExpenseState,\n};\n","/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/constants/expense.constants.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/constants/attachments.constants.js",[],"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/AddEmployee.js",["619"],"import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Container, Card, Row, Toast, Col } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport employeeService from \"../services/employee.service\";\n\nconst AddEmployee = () => {\n  const [showA, setShowA] = useState(false);\n  const closeA = () => setShowA(false);\n  const openA = () => setShowA(true);\n  const [showB, setShowB] = useState(false);\n  const closeB = () => setShowB(false);\n  const openB = () => setShowB(true);\n  const [loading, setLoading] = useState(false);\n\n  const schema = yup.object().shape({\n    firstName: yup.string().required(\"First Name is required\"),\n    lastName: yup.string().required(\"Last Name is required\"),\n    email: yup.string().email(\"Invalid Email\").required(),\n    pwd: yup\n      .string()\n      .max(16, \"Password length should not exceed 16 characters\")\n      .required(\"Enter to set Password\"),\n    confirmedPwd: yup\n      .string()\n      .oneOf(\n        [yup.ref(\"pwd\"), null],\n        \"Does not match with the Password set above\"\n      )\n      .required(\"Confirm Password is a required field\"),\n    role: yup.string().required(\"Please select a Role\"),\n  });\n\n  const onSuccess = (values) => {\n    setLoading(true);\n    const payload = {};\n    payload[\"firstName\"] = values.firstName;\n    payload[\"lastName\"] = values.lastName;\n    payload[\"email\"] = values.email;\n    payload[\"password\"] = values.pwd;\n    payload[\"role\"] = values.role;\n    payload[\"isPasswordTemp\"] = \"TRUE\";\n\n    employeeService\n      .addEmployees(payload)\n      .then(() => {\n        openB();\n      })\n      .catch(() => {\n        setLoading(false);\n        openA();\n      });\n  };\n\n  return (\n    <Container className=\"mt-5\">\n      <Row>\n        <Col lg={4} md={6} />\n        <Col lg={4} md={6}>\n          <Card>\n            <Card.Header className=\"text-center\">\n              <h4>Add an Employee</h4>\n            </Card.Header>\n            <Card.Body>\n              <Formik\n                validationSchema={schema}\n                validateOnChange={true}\n                onSubmit={onSuccess}\n                initialValues={{\n                  firstName: \"\",\n                  lastName: \"\",\n                  email: \"\",\n                  pwd: \"\",\n                  confirmedPwd: \"\",\n                  role: \"0\",\n                }}\n              >\n                {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  resetForm,\n                  values,\n                  touched,\n                  isValid,\n                  errors,\n                }) => (\n                  <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group\n                      className=\"mb-3\"\n                      size=\"lg\"\n                      controlId=\"firstName\"\n                    >\n                      <Form.Label>First Name</Form.Label>\n                      <Form.Control\n                        name=\"firstName\"\n                        value={values.firstName}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.firstName && errors.firstName}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.firstName}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" size=\"lg\" controlId=\"lastName\">\n                      <Form.Label>Last Name</Form.Label>\n                      <Form.Control\n                        name=\"lastName\"\n                        value={values.lastName}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.lastName && errors.lastName}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.lastName}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" size=\"lg\" controlId=\"email\">\n                      <Form.Label>Email</Form.Label>\n                      <Form.Control\n                        type=\"email\"\n                        name=\"email\"\n                        value={values.email}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.email && errors.email}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.email}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" size=\"lg\" controlId=\"pwd\">\n                      <Form.Label>Set Password</Form.Label>\n                      <Form.Control\n                        type=\"password\"\n                        name=\"pwd\"\n                        value={values.pwd}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.pwd && errors.pwd}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.pwd}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group\n                      className=\"mb-3\"\n                      size=\"lg\"\n                      controlId=\"confirmedPwd\"\n                    >\n                      <Form.Label>Confirm Password</Form.Label>\n                      <Form.Control\n                        type=\"password\"\n                        name=\"confirmedPwd\"\n                        value={values.confirmedPwd}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.confirmedPwd && errors.confirmedPwd}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.confirmedPwd}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" size=\"lg\" controlId=\"role\">\n                      <Form.Label>Employee Role</Form.Label>\n                      <Form.Select\n                        name=\"role\"\n                        value={values.role}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.role && errors.role}\n                      >\n                        <option key=\"0R\" value=\"0\">\n                          Software Development Engineer\n                        </option>\n                        <option key=\"1R\" value=\"1\">\n                          Project Manager\n                        </option>\n                        <option key=\"2R\" value=\"2\">\n                          Administrator\n                        </option>\n                      </Form.Select>\n                    </Form.Group>\n\n                    <br />\n                    <div className=\"d-grid\">\n                      <Button\n                        variant=\"primary\"\n                        type=\"submit\"\n                        disabled={values.firstName.length === 0 || !isValid}\n                      >\n                        Submit\n                      </Button>\n                      <br />\n                      <Button\n                        variant=\"secondary\"\n                        type=\"reset\"\n                        onClick={resetForm}\n                      >\n                        Reset\n                      </Button>\n                    </div>\n                  </Form>\n                )}\n              </Formik>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={4} md={6} />\n      </Row>\n      <br />\n      <Row className=\"justify-content-center\">\n        <Toast\n          className=\"text-center\"\n          bg=\"danger\"\n          style={{ width: \"18rem\" }}\n          show={showA}\n          onClose={closeA}\n          position=\"middle-center\"\n          delay={3000}\n          autohide\n        >\n          <Toast.Header>\n            <strong className=\"me-auto\">ERROR!</strong>\n          </Toast.Header>\n          <Toast.Body>\n            <h6>Employee could NOT be added!</h6>\n          </Toast.Body>\n        </Toast>\n      </Row>\n      <br />\n      <Row className=\"justify-content-center\">\n        <Toast\n          className=\"text-center\"\n          bg=\"success\"\n          style={{ width: \"18rem\" }}\n          show={showB}\n          onClose={closeB}\n          position=\"middle-center\"\n          delay={3000}\n          autohide\n        >\n          <Toast.Header>\n            <strong className=\"me-auto\">SUCCESS!</strong>\n          </Toast.Header>\n          <Toast.Body>\n            <h6>Employee Added Successfully!</h6>\n          </Toast.Body>\n        </Toast>\n      </Row>\n    </Container>\n  );\n};\n\nexport default AddEmployee;\n",{"ruleId":"620","replacedBy":"621"},{"ruleId":"622","replacedBy":"623"},{"ruleId":"624","severity":1,"message":"625","line":9,"column":19,"nodeType":"626","messageId":"627","endLine":9,"endColumn":25},{"ruleId":"628","severity":1,"message":"629","line":13,"column":8,"nodeType":"630","endLine":13,"endColumn":10,"suggestions":"631"},{"ruleId":"620","replacedBy":"632"},{"ruleId":"622","replacedBy":"633"},{"ruleId":"634","severity":1,"message":"635","line":28,"column":83,"nodeType":"636","messageId":"637","endLine":28,"endColumn":84,"suggestions":"638"},{"ruleId":"634","severity":1,"message":"639","line":28,"column":88,"nodeType":"636","messageId":"637","endLine":28,"endColumn":89,"suggestions":"640"},{"ruleId":"624","severity":1,"message":"641","line":93,"column":9,"nodeType":"626","messageId":"627","endLine":93,"endColumn":21},{"ruleId":"642","severity":1,"message":"643","line":141,"column":9,"nodeType":"644","messageId":"645","endLine":141,"endColumn":63},{"ruleId":"642","severity":1,"message":"643","line":145,"column":9,"nodeType":"644","messageId":"645","endLine":145,"endColumn":63},{"ruleId":"646","severity":1,"message":"647","line":156,"column":15,"nodeType":"626","messageId":"648","endLine":156,"endColumn":16},{"ruleId":"642","severity":1,"message":"643","line":157,"column":48,"nodeType":"644","messageId":"645","endLine":157,"endColumn":94},{"ruleId":"624","severity":1,"message":"641","line":277,"column":9,"nodeType":"626","messageId":"627","endLine":277,"endColumn":21},{"ruleId":"628","severity":1,"message":"649","line":31,"column":6,"nodeType":"630","endLine":31,"endColumn":16,"suggestions":"650"},{"ruleId":"628","severity":1,"message":"649","line":42,"column":6,"nodeType":"630","endLine":42,"endColumn":16,"suggestions":"651"},{"ruleId":"624","severity":1,"message":"652","line":1,"column":17,"nodeType":"626","messageId":"627","endLine":1,"endColumn":26},{"ruleId":"624","severity":1,"message":"653","line":5,"column":3,"nodeType":"626","messageId":"627","endLine":5,"endColumn":12},{"ruleId":"624","severity":1,"message":"654","line":6,"column":3,"nodeType":"626","messageId":"627","endLine":6,"endColumn":13},{"ruleId":"624","severity":1,"message":"655","line":7,"column":3,"nodeType":"626","messageId":"627","endLine":7,"endColumn":8},{"ruleId":"624","severity":1,"message":"656","line":8,"column":3,"nodeType":"626","messageId":"627","endLine":8,"endColumn":7},{"ruleId":"624","severity":1,"message":"657","line":9,"column":3,"nodeType":"626","messageId":"627","endLine":9,"endColumn":8},{"ruleId":"624","severity":1,"message":"658","line":10,"column":3,"nodeType":"626","messageId":"627","endLine":10,"endColumn":11},{"ruleId":"624","severity":1,"message":"659","line":11,"column":3,"nodeType":"626","messageId":"627","endLine":11,"endColumn":6},{"ruleId":"624","severity":1,"message":"660","line":12,"column":3,"nodeType":"626","messageId":"627","endLine":12,"endColumn":6},{"ruleId":"624","severity":1,"message":"661","line":14,"column":10,"nodeType":"626","messageId":"627","endLine":14,"endColumn":18},{"ruleId":"624","severity":1,"message":"662","line":16,"column":34,"nodeType":"626","messageId":"627","endLine":16,"endColumn":41},{"ruleId":"624","severity":1,"message":"663","line":29,"column":10,"nodeType":"626","messageId":"627","endLine":29,"endColumn":26},{"ruleId":"624","severity":1,"message":"664","line":32,"column":9,"nodeType":"626","messageId":"627","endLine":32,"endColumn":18},{"ruleId":"624","severity":1,"message":"665","line":85,"column":9,"nodeType":"626","messageId":"627","endLine":85,"endColumn":17},{"ruleId":"624","severity":1,"message":"666","line":87,"column":11,"nodeType":"626","messageId":"627","endLine":87,"endColumn":20},{"ruleId":"624","severity":1,"message":"667","line":99,"column":7,"nodeType":"626","messageId":"627","endLine":99,"endColumn":25},{"ruleId":"668","severity":1,"message":"669","line":110,"column":35,"nodeType":"670","endLine":110,"endColumn":62},{"ruleId":"620","replacedBy":"671"},{"ruleId":"622","replacedBy":"672"},{"ruleId":"624","severity":1,"message":"673","line":2,"column":8,"nodeType":"626","messageId":"627","endLine":2,"endColumn":16},{"ruleId":"624","severity":1,"message":"674","line":110,"column":10,"nodeType":"626","messageId":"627","endLine":110,"endColumn":17},{"ruleId":"624","severity":1,"message":"675","line":115,"column":17,"nodeType":"626","messageId":"627","endLine":115,"endColumn":28},{"ruleId":"624","severity":1,"message":"641","line":224,"column":9,"nodeType":"626","messageId":"627","endLine":224,"endColumn":21},{"ruleId":"620","replacedBy":"676"},{"ruleId":"622","replacedBy":"677"},{"ruleId":"678","severity":1,"message":"679","line":5,"column":1,"nodeType":"680","endLine":18,"endColumn":2},{"ruleId":"678","severity":1,"message":"679","line":9,"column":1,"nodeType":"680","endLine":44,"endColumn":2},{"ruleId":"624","severity":1,"message":"674","line":18,"column":10,"nodeType":"626","messageId":"627","endLine":18,"endColumn":17},{"ruleId":"678","severity":1,"message":"681","line":42,"column":1,"nodeType":"680","endLine":46,"endColumn":3},{"ruleId":"678","severity":1,"message":"681","line":67,"column":1,"nodeType":"680","endLine":74,"endColumn":3},{"ruleId":"678","severity":1,"message":"679","line":5,"column":1,"nodeType":"680","endLine":47,"endColumn":2},{"ruleId":"678","severity":1,"message":"681","line":56,"column":1,"nodeType":"680","endLine":63,"endColumn":3},{"ruleId":"678","severity":1,"message":"679","line":14,"column":1,"nodeType":"680","endLine":59,"endColumn":2},{"ruleId":"678","severity":1,"message":"681","line":42,"column":1,"nodeType":"680","endLine":47,"endColumn":3},{"ruleId":"678","severity":1,"message":"681","line":13,"column":1,"nodeType":"680","endLine":15,"endColumn":3},{"ruleId":"678","severity":1,"message":"679","line":5,"column":1,"nodeType":"680","endLine":21,"endColumn":2},{"ruleId":"678","severity":1,"message":"679","line":8,"column":1,"nodeType":"680","endLine":26,"endColumn":2},{"ruleId":"624","severity":1,"message":"653","line":7,"column":24,"nodeType":"626","messageId":"627","endLine":7,"endColumn":33},{"ruleId":"624","severity":1,"message":"655","line":7,"column":35,"nodeType":"626","messageId":"627","endLine":7,"endColumn":40},{"ruleId":"678","severity":1,"message":"679","line":8,"column":3,"nodeType":"680","endLine":25,"endColumn":4},{"ruleId":"624","severity":1,"message":"674","line":28,"column":10,"nodeType":"626","messageId":"627","endLine":28,"endColumn":17},{"ruleId":"624","severity":1,"message":"682","line":16,"column":10,"nodeType":"626","messageId":"627","endLine":16,"endColumn":15},{"ruleId":"683","severity":1,"message":"684","line":130,"column":5,"nodeType":"685","messageId":"686","endLine":130,"endColumn":16},{"ruleId":"678","severity":1,"message":"679","line":5,"column":1,"nodeType":"680","endLine":30,"endColumn":4},{"ruleId":"678","severity":1,"message":"681","line":33,"column":1,"nodeType":"680","endLine":36,"endColumn":2},{"ruleId":"620","replacedBy":"687"},{"ruleId":"622","replacedBy":"688"},{"ruleId":"624","severity":1,"message":"674","line":18,"column":10,"nodeType":"626","messageId":"627","endLine":18,"endColumn":17},{"ruleId":"624","severity":1,"message":"674","line":28,"column":10,"nodeType":"626","messageId":"627","endLine":28,"endColumn":17},{"ruleId":"628","severity":1,"message":"649","line":30,"column":6,"nodeType":"630","endLine":30,"endColumn":16,"suggestions":"689"},{"ruleId":"628","severity":1,"message":"649","line":41,"column":6,"nodeType":"630","endLine":41,"endColumn":16,"suggestions":"690"},{"ruleId":"624","severity":1,"message":"674","line":108,"column":10,"nodeType":"626","messageId":"627","endLine":108,"endColumn":17},{"ruleId":"624","severity":1,"message":"675","line":113,"column":17,"nodeType":"626","messageId":"627","endLine":113,"endColumn":28},{"ruleId":"624","severity":1,"message":"641","line":222,"column":9,"nodeType":"626","messageId":"627","endLine":222,"endColumn":21},{"ruleId":"678","severity":1,"message":"681","line":33,"column":1,"nodeType":"680","endLine":36,"endColumn":2},{"ruleId":"678","severity":1,"message":"679","line":9,"column":1,"nodeType":"680","endLine":44,"endColumn":2},{"ruleId":"678","severity":1,"message":"679","line":5,"column":1,"nodeType":"680","endLine":18,"endColumn":2},{"ruleId":"678","severity":1,"message":"679","line":14,"column":1,"nodeType":"680","endLine":59,"endColumn":2},{"ruleId":"678","severity":1,"message":"679","line":5,"column":1,"nodeType":"680","endLine":47,"endColumn":2},{"ruleId":"678","severity":1,"message":"679","line":8,"column":1,"nodeType":"680","endLine":26,"endColumn":2},{"ruleId":"678","severity":1,"message":"679","line":8,"column":3,"nodeType":"680","endLine":25,"endColumn":4},{"ruleId":"678","severity":1,"message":"679","line":5,"column":1,"nodeType":"680","endLine":21,"endColumn":2},{"ruleId":"678","severity":1,"message":"679","line":5,"column":1,"nodeType":"680","endLine":30,"endColumn":4},{"ruleId":"634","severity":1,"message":"635","line":28,"column":83,"nodeType":"636","messageId":"637","endLine":28,"endColumn":84,"suggestions":"691"},{"ruleId":"634","severity":1,"message":"639","line":28,"column":88,"nodeType":"636","messageId":"637","endLine":28,"endColumn":89,"suggestions":"692"},{"ruleId":"624","severity":1,"message":"641","line":93,"column":9,"nodeType":"626","messageId":"627","endLine":93,"endColumn":21},{"ruleId":"642","severity":1,"message":"643","line":141,"column":9,"nodeType":"644","messageId":"645","endLine":141,"endColumn":63},{"ruleId":"642","severity":1,"message":"643","line":145,"column":9,"nodeType":"644","messageId":"645","endLine":145,"endColumn":63},{"ruleId":"646","severity":1,"message":"647","line":156,"column":15,"nodeType":"626","messageId":"648","endLine":156,"endColumn":16},{"ruleId":"642","severity":1,"message":"643","line":157,"column":48,"nodeType":"644","messageId":"645","endLine":157,"endColumn":94},{"ruleId":"624","severity":1,"message":"641","line":277,"column":9,"nodeType":"626","messageId":"627","endLine":277,"endColumn":21},{"ruleId":"678","severity":1,"message":"681","line":42,"column":1,"nodeType":"680","endLine":47,"endColumn":3},{"ruleId":"678","severity":1,"message":"681","line":67,"column":1,"nodeType":"680","endLine":74,"endColumn":3},{"ruleId":"678","severity":1,"message":"681","line":42,"column":1,"nodeType":"680","endLine":46,"endColumn":3},{"ruleId":"678","severity":1,"message":"681","line":21,"column":1,"nodeType":"680","endLine":24,"endColumn":3},{"ruleId":"678","severity":1,"message":"681","line":55,"column":1,"nodeType":"680","endLine":62,"endColumn":3},{"ruleId":"624","severity":1,"message":"674","line":16,"column":10,"nodeType":"626","messageId":"627","endLine":16,"endColumn":17},"no-native-reassign",["693"],"no-negated-in-lhs",["694"],"no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["695"],["693"],["694"],"no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["696","697"],"Unnecessary escape character: \\?.",["698","699"],"'handleSubmit' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","ArrowFunctionExpression","unsafeRefs","no-redeclare","'i' is already defined.","redeclared","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.",["700"],["701"],"'Component' is defined but never used.","'Container' is defined but never used.","'Pagination' is defined but never used.","'Badge' is defined but never used.","'Form' is defined but never used.","'Table' is defined but never used.","'Dropdown' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'useState' is defined but never used.","'history' is defined but never used.","'GetExpenseSheets' is defined but never used.","'SearchBar' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'expandRow' is assigned a value but never used.","'headerSortingStyle' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["693"],["694"],"'ReactDOM' is defined but never used.","'loading' is assigned a value but never used.","'currentUser' is assigned a value but never used.",["693"],["694"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","'Modal' is defined but never used.","no-dupe-keys","Duplicate key 'attachments'.","ObjectExpression","unexpected",["693"],["694"],["702"],["703"],["704","705"],["706","707"],"no-global-assign","no-unsafe-negation",{"desc":"708","fix":"709"},{"messageId":"710","fix":"711","desc":"712"},{"messageId":"713","fix":"714","desc":"715"},{"messageId":"710","fix":"716","desc":"712"},{"messageId":"713","fix":"717","desc":"715"},{"desc":"718","fix":"719"},{"desc":"718","fix":"720"},{"desc":"718","fix":"721"},{"desc":"718","fix":"722"},{"messageId":"710","fix":"723","desc":"712"},{"messageId":"713","fix":"724","desc":"715"},{"messageId":"710","fix":"725","desc":"712"},{"messageId":"713","fix":"726","desc":"715"},"Update the dependencies array to be: [dispatch]",{"range":"727","text":"728"},"removeEscape",{"range":"729","text":"730"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"731","text":"732"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"733","text":"730"},{"range":"734","text":"732"},"Update the dependencies array to be: [dispatch, props.id]",{"range":"735","text":"736"},{"range":"737","text":"736"},{"range":"738","text":"736"},{"range":"739","text":"736"},{"range":"740","text":"730"},{"range":"741","text":"732"},{"range":"742","text":"730"},{"range":"743","text":"732"},[381,383],"[dispatch]",[993,994],"",[993,993],"\\",[998,999],[998,998],[799,809],"[dispatch, props.id]",[1099,1109],[756,766],[1056,1066],[993,994],[993,993],[998,999],[998,998]]