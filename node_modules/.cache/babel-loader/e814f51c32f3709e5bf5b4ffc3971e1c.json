{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getByCurrPage = exports.alignPage = undefined;\n\nvar _const = require('./const');\n\nvar _const2 = _interopRequireDefault(_const);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar getNormalizedPage = function getNormalizedPage(page, pageStartIndex) {\n  var offset = Math.abs(1 - pageStartIndex);\n  return page + offset;\n};\n\nvar endIndex = function endIndex(page, sizePerPage, pageStartIndex) {\n  return getNormalizedPage(page, pageStartIndex) * sizePerPage - 1;\n};\n\nvar startIndex = function startIndex(end, sizePerPage) {\n  return end - (sizePerPage - 1);\n};\n\nvar alignPage = exports.alignPage = function alignPage(dataSize, prevDataSize, page, sizePerPage, pageStartIndex) {\n  if (prevDataSize < dataSize) return page;\n  if (page < pageStartIndex) return pageStartIndex;\n  if (dataSize <= 0) return pageStartIndex;\n\n  if (page >= Math.floor(dataSize / sizePerPage) + pageStartIndex && pageStartIndex === 1) {\n    return Math.ceil(dataSize / sizePerPage);\n  }\n\n  if (page >= Math.floor(dataSize / sizePerPage) && pageStartIndex === 0) {\n    var newPage = Math.ceil(dataSize / sizePerPage);\n    return newPage - Math.abs(_const2.default.PAGE_START_INDEX - pageStartIndex);\n  }\n\n  return page;\n};\n\nvar getByCurrPage = exports.getByCurrPage = function getByCurrPage(data, page, sizePerPage, pageStartIndex) {\n  var dataSize = data.length;\n  if (!dataSize) return [];\n  var end = endIndex(page, sizePerPage, pageStartIndex);\n  var start = startIndex(end, sizePerPage);\n  var result = [];\n\n  for (var i = start; i <= end; i += 1) {\n    result.push(data[i]);\n    if (i + 1 === dataSize) break;\n  }\n\n  return result;\n};","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/node_modules/react-bootstrap-table2-paginator/lib/src/page.js"],"names":["Object","defineProperty","exports","value","getByCurrPage","alignPage","undefined","_const","require","_const2","_interopRequireDefault","obj","__esModule","default","getNormalizedPage","page","pageStartIndex","offset","Math","abs","endIndex","sizePerPage","startIndex","end","dataSize","prevDataSize","floor","ceil","newPage","PAGE_START_INDEX","data","length","start","result","i","push"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getByCurrPage = exports.alignPage = undefined;\n\nvar _const = require('./const');\n\nvar _const2 = _interopRequireDefault(_const);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getNormalizedPage = function getNormalizedPage(page, pageStartIndex) {\n  var offset = Math.abs(1 - pageStartIndex);\n  return page + offset;\n};\n\nvar endIndex = function endIndex(page, sizePerPage, pageStartIndex) {\n  return getNormalizedPage(page, pageStartIndex) * sizePerPage - 1;\n};\n\nvar startIndex = function startIndex(end, sizePerPage) {\n  return end - (sizePerPage - 1);\n};\n\nvar alignPage = exports.alignPage = function alignPage(dataSize, prevDataSize, page, sizePerPage, pageStartIndex) {\n  if (prevDataSize < dataSize) return page;\n  if (page < pageStartIndex) return pageStartIndex;\n  if (dataSize <= 0) return pageStartIndex;\n  if (page >= Math.floor(dataSize / sizePerPage) + pageStartIndex && pageStartIndex === 1) {\n    return Math.ceil(dataSize / sizePerPage);\n  }\n  if (page >= Math.floor(dataSize / sizePerPage) && pageStartIndex === 0) {\n    var newPage = Math.ceil(dataSize / sizePerPage);\n    return newPage - Math.abs(_const2.default.PAGE_START_INDEX - pageStartIndex);\n  }\n  return page;\n};\n\nvar getByCurrPage = exports.getByCurrPage = function getByCurrPage(data, page, sizePerPage, pageStartIndex) {\n  var dataSize = data.length;\n  if (!dataSize) return [];\n\n  var end = endIndex(page, sizePerPage, pageStartIndex);\n  var start = startIndex(end, sizePerPage);\n\n  var result = [];\n  for (var i = start; i <= end; i += 1) {\n    result.push(data[i]);\n    if (i + 1 === dataSize) break;\n  }\n  return result;\n};"]},"metadata":{},"sourceType":"script"}