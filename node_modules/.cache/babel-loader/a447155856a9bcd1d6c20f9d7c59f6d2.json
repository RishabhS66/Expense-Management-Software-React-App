{"ast":null,"code":"var _jsxFileName = \"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Expense/AddExpenseEntry.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport ReactDOM from \"react-dom\"; // import { useFormik } from \"formik\";\n\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport \"./Expense.css\";\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getExpenseSheets } from \"../../actions/expense.actions\";\nimport { getProjects } from \"../../actions/project\";\nimport { editEntry } from \"../../actions/expense.actions\";\nimport uploadDoc from \"../../services/attachments.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddExpenseEntry = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  var data = props.data;\n  useEffect(() => {\n    dispatch(getProjects()).then(() => {\n      console.log(\"Projects fetched successfully\");\n    }).catch(() => {\n      console.log(\"Unable to fetch projects\");\n    });\n  }, [dispatch]);\n\n  const transformDate = date => {\n    const splitDate = date.split(\"-\");\n    const newDateList = splitDate.reverse();\n    const newDate = newDateList.join(\"-\");\n    return newDate;\n  };\n\n  const schema = yup.object().shape({\n    name: yup.string().required(\"Required!\"),\n    paymentMethod: yup.string().required(\"Required!\"),\n    currency: yup.string().required(\"Required!\"),\n    billable: yup.bool().required(\"Required!\"),\n    reimburseable: yup.bool().required(\"Required!\"),\n    amount: yup.number().min(0, \"Minumim value must be 0\").typeError(\"Cost must be a numerical value\").required(\"Required!\"),\n    taxZone: yup.string().required(\"Required!\"),\n    tax: yup.number().min(0, \"Minumim value must be 0\").typeError(\"Cost must be a numerical value\").required(\"Required!\"),\n    description: yup.string().required(\"Required!\"),\n    file: yup.mixed().required(\"Required!\")\n  });\n  const [loading, setLoading] = useState(false);\n  const dummyForm = new FormData();\n  const [fileData, setFileData] = useState(dummyForm);\n  const {\n    projects\n  } = useSelector(state => state.project);\n  const {\n    user: currentUser\n  } = useSelector(state => state.auth);\n\n  const onSuccess = values => {\n    const payload = {};\n    payload[\"project\"] = {\n      id: Number(values.projectName)\n    };\n    payload[\"name\"] = values.name;\n    payload[\"currency\"] = values.currency;\n    payload[\"date\"] = transformDate(values.date);\n    payload[\"billable\"] = values.billable;\n    payload[\"reimburseable\"] = values.reimburseable;\n    payload[\"amount\"] = values.amount;\n    payload[\"taxZone\"] = values.taxZone;\n    payload[\"tax\"] = values.tax;\n    payload[\"paymentMethod\"] = values.paymentMethod;\n    payload[\"status\"] = \"SUBMITTED\";\n    payload[\"description\"] = values.description;\n    payload[\"attachments\"] = [];\n    props.onHide();\n    setLoading(true);\n    console.log(values);\n    console.log(\"OK\");\n    console.log(fileData.entries().next().value);\n    dispatch(uploadDoc(fileData)).then(response => {\n      console.log(\"Please Work -> \", response);\n    }); // dispatch(addEntry(payload))\n    //   .then(() => {\n    //     dispatch(getExpenseSheets())\n    //       .then(() => {\n    //         console.log(\"Expenses fetched successfully\");\n    //       })\n    //       .catch(() => {\n    //         console.log(\"Unable to fetch Expenses\");\n    //       });\n    //   })\n    //   .catch(() => {\n    //     setLoading(false);\n    //   });\n  };\n\n  const onSuccessEdit = values => {\n    const payload = {};\n    payload[\"name\"] = values.name;\n    payload[\"currency\"] = values.currency;\n    payload[\"billable\"] = values.billable;\n    payload[\"reimburseable\"] = values.reimburseable;\n    payload[\"amount\"] = values.amount;\n    payload[\"taxZone\"] = values.taxZone;\n    payload[\"tax\"] = values.tax;\n    payload[\"paymentMethod\"] = values.paymentMethod;\n    payload[\"description\"] = values.description;\n    payload[\"attachments\"] = [];\n    props.onHide();\n    setLoading(true);\n    dispatch(editEntry(data.expenseId, payload)).then(() => {\n      dispatch(getExpenseSheets()).then(() => {\n        console.log(\"Expense updated successfully\");\n      }).catch(() => {\n        console.log(\"Unable to update Expense\");\n      });\n    }).catch(() => {\n      setLoading(false);\n    });\n  };\n\n  const handleSubmit = () => {\n    if (formRef.current) {\n      formRef.current.handleSubmit();\n    }\n  };\n\n  const formRef = useRef();\n\n  const onFileChangeHandler = e => {\n    e.preventDefault(); // console.log(\"---\", e.target.files[0]);\n\n    const formData = new FormData();\n    formData.append(\"file\", e.target.files[0]);\n    console.log(\"OK\");\n    console.log(formData.entries().next().value);\n    setFileData(formData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    backdrop: \"static\",\n    size: \"lg\",\n    id: \"entry-modal\",\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: [props.method, \" Expense Entry\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      validationSchema: schema,\n      validateOnChange: true,\n      onSubmit: props.method === \"Edit\" ? onSuccessEdit : onSuccess,\n      initialValues: props.data,\n      innerRef: formRef,\n      children: ({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Tabs, {\n            defaultActiveKey: \"basic\",\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              eventKey: \"basic\",\n              title: \"Basic\",\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"projectName\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Project name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    name: \"projectName\",\n                    value: values.projectName,\n                    disabled: props.method === \"Edit\",\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.projectName && errors.projectName,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      disabled: true,\n                      children: \"Select Project\"\n                    }, \"SP\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 25\n                    }, this), projects.map(project => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: project.id,\n                        children: project.projectName\n                      }, project.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 212,\n                        columnNumber: 29\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"name\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Expense Name \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    // as=\"textarea\"\n                    name: \"name\",\n                    value: values.name,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.name && errors.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"paymentMethod\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Payment Method\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    \"aria-label\": \"Default select example\",\n                    name: \"paymentMethod\",\n                    value: values.paymentMethod,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.paymentMethod && errors.paymentMethod,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"CASH\",\n                      children: \"CASH\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"CARD\",\n                      children: \"CARD\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"ONLINE TRANSACTION\",\n                      children: \"ONLINE TRANSACTION\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.paymentMethod\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"currency\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Currency\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    \"aria-label\": \"Default select example\",\n                    name: \"currency\",\n                    value: values.currency,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.currency && errors.currency,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"INR\",\n                      children: \"INR\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"USD\",\n                      children: \"USD\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.currency\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"date\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Expense Entry Date \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"date\",\n                    name: \"date\",\n                    value: values.date,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"billable\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Billable\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    \"aria-label\": \"Default select example\",\n                    name: \"billable\",\n                    value: values.billable,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.billable && errors.billable,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"true\",\n                      children: \"Yes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 309,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"false\",\n                      children: \"No\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.billable\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"reimburseable\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Reimburse\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    \"aria-label\": \"Default select example\",\n                    name: \"reimburseable\",\n                    value: values.reimburseable,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.reimburseable && errors.reimburseable,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 330,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"true\",\n                      children: \"Yes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"false\",\n                      children: \"No\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.reimburseable\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"amount\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Net Amount\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    name: \"amount\",\n                    value: values.amount,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.amount && errors.amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 23\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"taxZone\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Tax Zone\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 357,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    \"aria-label\": \"Default select example\",\n                    name: \"taxZone\",\n                    value: values.taxZone,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.taxZone && errors.taxZone,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"IND\",\n                      children: \"IND\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"USA\",\n                      children: \"USA\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 370,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.taxZone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"tax\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Tax\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 380,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    name: \"tax\",\n                    value: values.tax,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.tax && errors.tax\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.tax\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 23\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"netAmount\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Amount\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 395,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    name: \"netAmount\",\n                    value: String(Number(values.amount) + Number(values.tax)),\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              eventKey: \"description\",\n              title: \"Description\",\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"description\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  type: \"long-description\",\n                  name: \"description\",\n                  placeholder: \"Enter description of expense here\",\n                  value: values.description,\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  isInvalid: touched.description && errors.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 21\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              eventKey: \"attachment\",\n              title: \"Attachment\",\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"file\",\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"position-relative mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Upload File\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 430,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"file\",\n                    name: \"file\",\n                    accept: \".pdf, .jpg, .jpeg, .png\",\n                    onChange: e => {\n                      handleChange(e);\n                      onFileChangeHandler(e);\n                    },\n                    isInvalid: !!errors.file\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 431,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    tooltip: true,\n                    children: errors.file\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            type: \"submit\",\n            onClick: handleSubmit,\n            disabled: values.name.length === 0 || !isValid,\n            children: [props.method, \" Expense Entry\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: props.onHide,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)\n    }, \"Formik\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddExpenseEntry, \"5KCWUHZy3UKj+DMGXvfvrAvvelI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = AddExpenseEntry;\nexport default AddExpenseEntry;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddExpenseEntry\");","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Expense/AddExpenseEntry.js"],"names":["React","useRef","ReactDOM","Tabs","Tab","Form","Button","Row","Col","Modal","Formik","yup","useSelector","useState","useDispatch","useEffect","getExpenseSheets","getProjects","editEntry","uploadDoc","AddExpenseEntry","props","dispatch","data","then","console","log","catch","transformDate","date","splitDate","split","newDateList","reverse","newDate","join","schema","object","shape","name","string","required","paymentMethod","currency","billable","bool","reimburseable","amount","number","min","typeError","taxZone","tax","description","file","mixed","loading","setLoading","dummyForm","FormData","fileData","setFileData","projects","state","project","user","currentUser","auth","onSuccess","values","payload","id","Number","projectName","onHide","entries","next","value","response","onSuccessEdit","expenseId","handleSubmit","formRef","current","onFileChangeHandler","e","preventDefault","formData","append","target","files","method","handleChange","handleBlur","touched","isValid","errors","map","String","length"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { useFormik } from \"formik\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport \"./Expense.css\";\n\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nimport { getExpenseSheets } from \"../../actions/expense.actions\";\nimport { getProjects } from \"../../actions/project\";\nimport { editEntry } from \"../../actions/expense.actions\";\nimport uploadDoc from \"../../services/attachments.service\";\n\nconst AddExpenseEntry = (props) => {\n  const dispatch = useDispatch();\n  var data = props.data;\n\n  useEffect(() => {\n    dispatch(getProjects())\n      .then(() => {\n        console.log(\"Projects fetched successfully\");\n      })\n      .catch(() => {\n        console.log(\"Unable to fetch projects\");\n      });\n  }, [dispatch]);\n\n  const transformDate = (date) => {\n    const splitDate = date.split(\"-\");\n    const newDateList = splitDate.reverse();\n    const newDate = newDateList.join(\"-\");\n\n    return newDate;\n  };\n\n  const schema = yup.object().shape({\n    name: yup.string().required(\"Required!\"),\n    paymentMethod: yup.string().required(\"Required!\"),\n    currency: yup.string().required(\"Required!\"),\n    billable: yup.bool().required(\"Required!\"),\n    reimburseable: yup.bool().required(\"Required!\"),\n    amount: yup\n      .number()\n      .min(0, \"Minumim value must be 0\")\n      .typeError(\"Cost must be a numerical value\")\n      .required(\"Required!\"),\n    taxZone: yup.string().required(\"Required!\"),\n    tax: yup\n      .number()\n      .min(0, \"Minumim value must be 0\")\n      .typeError(\"Cost must be a numerical value\")\n      .required(\"Required!\"),\n    description: yup.string().required(\"Required!\"),\n    file: yup.mixed().required(\"Required!\"),\n  });\n\n  const [loading, setLoading] = useState(false);\n  const dummyForm = new FormData();\n  const [fileData, setFileData] = useState(dummyForm);\n  const { projects } = useSelector((state) => state.project);\n  const { user: currentUser } = useSelector((state) => state.auth);\n\n  const onSuccess = (values) => {\n    const payload = {};\n    payload[\"project\"] = { id: Number(values.projectName) };\n    payload[\"name\"] = values.name;\n    payload[\"currency\"] = values.currency;\n    payload[\"date\"] = transformDate(values.date);\n    payload[\"billable\"] = values.billable;\n    payload[\"reimburseable\"] = values.reimburseable;\n    payload[\"amount\"] = values.amount;\n    payload[\"taxZone\"] = values.taxZone;\n    payload[\"tax\"] = values.tax;\n    payload[\"paymentMethod\"] = values.paymentMethod;\n    payload[\"status\"] = \"SUBMITTED\";\n    payload[\"description\"] = values.description;\n    payload[\"attachments\"] = [];\n\n    props.onHide();\n\n    setLoading(true);\n    console.log(values);\n    console.log(\"OK\");\n    console.log(fileData.entries().next().value);\n    \n    dispatch(uploadDoc(fileData))\n      .then((response) => {\n        console.log(\"Please Work -> \", response);        \n      })\n\n    // dispatch(addEntry(payload))\n    //   .then(() => {\n    //     dispatch(getExpenseSheets())\n    //       .then(() => {\n    //         console.log(\"Expenses fetched successfully\");\n    //       })\n    //       .catch(() => {\n    //         console.log(\"Unable to fetch Expenses\");\n    //       });\n    //   })\n    //   .catch(() => {\n    //     setLoading(false);\n    //   });\n  };\n\n  const onSuccessEdit = (values) => {\n    const payload = {};\n    payload[\"name\"] = values.name;\n    payload[\"currency\"] = values.currency;\n    payload[\"billable\"] = values.billable;\n    payload[\"reimburseable\"] = values.reimburseable;\n    payload[\"amount\"] = values.amount;\n    payload[\"taxZone\"] = values.taxZone;\n    payload[\"tax\"] = values.tax;\n    payload[\"paymentMethod\"] = values.paymentMethod;\n    payload[\"description\"] = values.description;\n    payload[\"attachments\"] = [];\n\n    props.onHide();\n\n    setLoading(true);\n\n    dispatch(editEntry(data.expenseId, payload))\n      .then(() => {\n        dispatch(getExpenseSheets())\n          .then(() => {\n            console.log(\"Expense updated successfully\");\n          })\n          .catch(() => {\n            console.log(\"Unable to update Expense\");\n          });\n      })\n      .catch(() => {\n        setLoading(false);\n      });\n  };\n\n  const handleSubmit = () => {\n    if (formRef.current) {\n      formRef.current.handleSubmit();\n    }\n  };\n  const formRef = useRef();\n\n  const onFileChangeHandler = (e) => {\n    e.preventDefault();\n    // console.log(\"---\", e.target.files[0]);\n    const formData = new FormData();\n    formData.append(\"file\", e.target.files[0]);\n    console.log(\"OK\");\n    console.log(formData.entries().next().value);\n    setFileData(formData);\n  };\n\n  return (\n    <Modal {...props} backdrop=\"static\" size=\"lg\" id=\"entry-modal\">\n      <Modal.Header closeButton>\n        <Modal.Title>{props.method} Expense Entry</Modal.Title>\n      </Modal.Header>\n\n      <Formik\n        key=\"Formik\"\n        validationSchema={schema}\n        validateOnChange={true}\n        onSubmit={props.method === \"Edit\" ? onSuccessEdit : onSuccess}\n        initialValues={props.data}\n        innerRef={formRef}\n      >\n        {({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          values,\n          touched,\n          isValid,\n          errors,\n        }) => (\n          <Form noValidate onSubmit={handleSubmit}>\n            <Modal.Body>\n              <Tabs defaultActiveKey=\"basic\">\n                <Tab eventKey=\"basic\" title=\"Basic\">\n                  <br />\n                  <Row>\n                    <Form.Group as={Col} controlId=\"projectName\">\n                      <Form.Label>\n                        <small>Project name</small>\n                      </Form.Label>\n                      <Form.Select\n                        name=\"projectName\"\n                        value={values.projectName}\n                        disabled={props.method === \"Edit\"}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.projectName && errors.projectName}\n                      >\n                        <option key=\"SP\" value=\"\" disabled>\n                          Select Project\n                        </option>\n                        {projects.map((project) => {\n                          return (\n                            <option key={project.id} value={project.id}>\n                              {project.projectName}\n                            </option>\n                          );\n                        })}\n                      </Form.Select>\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Group as={Col} controlId=\"name\">\n                      <Form.Label>\n                        <small>Expense Name </small>\n                      </Form.Label>\n                      <Form.Control\n                        // as=\"textarea\"\n                        name=\"name\"\n                        value={values.name}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.name && errors.name}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.name}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"paymentMethod\">\n                      <Form.Label>\n                        <small>Payment Method</small>\n                      </Form.Label>\n                      <Form.Select\n                        aria-label=\"Default select example\"\n                        name=\"paymentMethod\"\n                        value={values.paymentMethod}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          touched.paymentMethod && errors.paymentMethod\n                        }\n                      >\n                        <option></option>\n                        <option value=\"CASH\">CASH</option>\n                        <option value=\"CARD\">CARD</option>\n                        <option value=\"ONLINE TRANSACTION\">\n                          ONLINE TRANSACTION\n                        </option>\n                      </Form.Select>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.paymentMethod}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"currency\">\n                      <Form.Label>\n                        <small>Currency</small>\n                      </Form.Label>\n                      <Form.Select\n                        aria-label=\"Default select example\"\n                        name=\"currency\"\n                        value={values.currency}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.currency && errors.currency}\n                      >\n                        <option></option>\n                        <option value=\"INR\">INR</option>\n                        <option value=\"USD\">USD</option>\n                      </Form.Select>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.currency}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Row>\n\n                  <Row>\n                    <Form.Group as={Col} controlId=\"date\">\n                      <Form.Label>\n                        <small>Expense Entry Date </small>\n                      </Form.Label>\n                      <Form.Control\n                        type=\"date\"\n                        name=\"date\"\n                        value={values.date}\n                        readOnly\n                      />\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"billable\">\n                      <Form.Label>\n                        <small>Billable</small>\n                      </Form.Label>\n                      <Form.Select\n                        aria-label=\"Default select example\"\n                        name=\"billable\"\n                        value={values.billable}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.billable && errors.billable}\n                      >\n                        <option></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </Form.Select>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.billable}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"reimburseable\">\n                      <Form.Label>\n                        <small>Reimburse</small>\n                      </Form.Label>\n                      <Form.Select\n                        aria-label=\"Default select example\"\n                        name=\"reimburseable\"\n                        value={values.reimburseable}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          touched.reimburseable && errors.reimburseable\n                        }\n                      >\n                        <option></option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                      </Form.Select>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.reimburseable}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Group as={Col} controlId=\"amount\">\n                      <Form.Label>\n                        <small>Net Amount</small>\n                      </Form.Label>\n                      <Form.Control\n                        name=\"amount\"\n                        value={values.amount}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.amount && errors.amount}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.amount}\n                      </Form.Control.Feedback>{\" \"}\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"taxZone\">\n                      <Form.Label>\n                        <small>Tax Zone</small>\n                      </Form.Label>\n\n                      <Form.Select\n                        aria-label=\"Default select example\"\n                        name=\"taxZone\"\n                        value={values.taxZone}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.taxZone && errors.taxZone}\n                      >\n                        <option></option>\n                        <option value=\"IND\">IND</option>\n                        <option value=\"USA\">USA</option>\n                      </Form.Select>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.taxZone}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Group as={Col} controlId=\"tax\">\n                      <Form.Label>\n                        <small>Tax</small>\n                      </Form.Label>\n                      <Form.Control\n                        name=\"tax\"\n                        value={values.tax}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.tax && errors.tax}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.tax}\n                      </Form.Control.Feedback>{\" \"}\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"netAmount\">\n                      <Form.Label>\n                        <small>Amount</small>\n                      </Form.Label>\n                      <Form.Control\n                        name=\"netAmount\"\n                        value={String(\n                          Number(values.amount) + Number(values.tax)\n                        )}\n                        readOnly\n                      />\n                    </Form.Group>\n                  </Row>\n                </Tab>\n\n                <Tab eventKey=\"description\" title=\"Description\">\n                  <br />\n                  <Form.Group className=\"mb-3\" controlId=\"description\">\n                    <Form.Control\n                      as=\"textarea\"\n                      type=\"long-description\"\n                      name=\"description\"\n                      placeholder=\"Enter description of expense here\"\n                      value={values.description}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      isInvalid={touched.description && errors.description}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.description}\n                    </Form.Control.Feedback>{\" \"}\n                  </Form.Group>\n                </Tab>\n                <Tab eventKey=\"attachment\" title=\"Attachment\">\n                  <br />\n                  <Form.Group className=\"mb-3\" controlId=\"file\">\n                    <Form.Group className=\"position-relative mb-3\">\n                      <Form.Label>Upload File</Form.Label>\n                      <Form.Control\n                        type=\"file\"\n                        name=\"file\"\n                        accept='.pdf, .jpg, .jpeg, .png'\n                        onChange={(e) => {handleChange(e);onFileChangeHandler(e)}}\n                        isInvalid={!!errors.file}\n                      />\n                      <Form.Control.Feedback type=\"invalid\" tooltip>\n                        {errors.file}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Form.Group>\n                </Tab>\n              </Tabs>\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button\n                variant=\"success\"\n                type=\"submit\"\n                onClick={handleSubmit}\n                disabled={values.name.length === 0 || !isValid}\n              >\n                {props.method} Expense Entry\n              </Button>\n              <Button variant=\"secondary\" onClick={props.onHide}>\n                Close\n              </Button>\n            </Modal.Footer>\n          </Form>\n        )}\n      </Formik>\n    </Modal>\n  );\n};\n\nexport default AddExpenseEntry;\n"]},"metadata":{},"sourceType":"module"}