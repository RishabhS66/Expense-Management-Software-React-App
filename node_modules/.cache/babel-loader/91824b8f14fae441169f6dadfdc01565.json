{"ast":null,"code":"var _jsxFileName = \"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/ProjectDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { Card, Button, Container, Badge, Dropdown } from \"react-bootstrap\";\nimport AddProject from \"./AddProject\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteProject } from \"../../actions/project\";\nimport { getProjects } from \"../../actions/project\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectDashboard = () => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [method, setMethod] = useState(\"Add\");\n  const initProj = {\n    projectName: \"\",\n    projectDescription: \"\",\n    client: \"\",\n    projectManager: \"\",\n    status: \"To-Do\",\n    startDate: \"\",\n    endDate: \"\",\n    duration: 0.0,\n    cost: 0.0,\n    teamMembers: [],\n    projectID: -2\n  };\n  const [proj, setProj] = useState(initProj);\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => {\n    setShow(false);\n    setProj(initProj);\n    setMethod(\"Add\");\n  };\n\n  const formDate = date => {\n    let splitDate = date.split(\" \");\n    let newDate = splitDate[0];\n    let splitDateList = newDate.split(\"-\");\n    splitDateList = splitDateList.reverse();\n    const finalDate = splitDateList.join(\"-\");\n    return finalDate;\n  };\n\n  const handleSelect = e => {\n    handleShow();\n    const statusType = {\n      TO_DO: \"To-Do\",\n      IN_PROGRESS: \"In Progress\",\n      COMPLETED: \"Completed\",\n      SUSPENDED: \"Suspended\"\n    };\n    const index = content.findIndex(o => o.id.toString() === e.target.id.toString());\n    let dataGot = content[index];\n    let toPass = {\n      projectName: \"\",\n      projectDescription: \"\",\n      client: \"\",\n      projectManager: \"\",\n      status: \"To-Do\",\n      startDate: \"\",\n      endDate: \"\",\n      duration: 0.0,\n      cost: 0.0,\n      teamMembers: [],\n      projectID: -1\n    };\n    toPass.projectName = dataGot.projectName;\n    toPass.projectManager = dataGot.projectManager;\n    toPass.projectDescription = dataGot.description;\n    toPass.client = dataGot.client.id;\n    toPass.projectManager = dataGot.projectManager.id;\n    toPass.status = statusType[dataGot.status];\n    toPass.startDate = formDate(dataGot.startDate);\n    toPass.endDate = formDate(dataGot.endDate);\n    toPass.teamMembers = dataGot.teamMembers;\n    toPass.projectID = dataGot.id; // console.log(\"entering \");\n    // console.log(dataGot);\n\n    setProj(toPass);\n    setMethod(\"Edit\");\n  };\n\n  const dispatch = useDispatch();\n\n  const handleDelete = e => {\n    dispatch(deleteProject(e.target.id)).then(() => {\n      dispatch(getProjects()).then(() => {\n        console.log(\"Projects fetched successfully\");\n      }).catch(() => {\n        console.log(\"Unable to fetch projects\");\n      });\n    }).catch(() => {\n      console.log(\"Could not delete project!!\");\n    });\n  };\n\n  const SortCaret = (order, column) => {\n    if (!order) return /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"float-end\",\n      children: /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"grey\",\n        children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-caret-up-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-caret-down-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this);else if (order === \"asc\") return /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"float-end\",\n      children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"bi bi-caret-up-fill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"grey\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-caret-down-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this);else if (order === \"desc\") return /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"float-end\",\n      children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"grey\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-caret-up-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"bi bi-caret-down-fill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this);\n    return null;\n  }; // TO CHANGE\n\n\n  const {\n    projects: content\n  } = useSelector(state => state.project); // const content = [content1];\n  // let content = [\n  //   {\n  //     id: 1,\n  //     client: {\n  //       id: 1,\n  //       fullName: \"Client1\",\n  //       nickName: \"cl1\",\n  //       email: \"cl1@google.come\",\n  //       address: {\n  //         addressLine1: \"MNOP\",\n  //         addressLine2: \"DEF\",\n  //         city: \"ABC\",\n  //         state: \"Haryana\",\n  //         country: \"India\",\n  //         zipcode: \"121004\",\n  //         telephone1: \"12345\",\n  //         telephone2: \"4567\",\n  //         fax: \"56789\",\n  //       },\n  //       website: \"cl1.github.io\",\n  //       billDetails: \"N/A\",\n  //     },\n  //     description: \"test\",\n  //     projectManager: {\n  //       id: 1,\n  //       email: \"pmangla@adobe.com\",\n  //       firstName: \"Puneet\",\n  //       lastName: \"Mangla\",\n  //       password: \"1234\",\n  //       role: \"PRJ_MANAGER\",\n  //       isPasswordTemp: false,\n  //       manager: null,\n  //     },\n  //     projectName: \"prj15\",\n  //     startDate: \"06-11-2021 11:10:09\",\n  //     endDate: \"09-11-2021 11:10:09\",\n  //     status: \"IN_PROGRESS\",\n  //     teamMembers: [\n  //       {\n  //         id: 3,\n  //         email: \"ashaw@adobe.com\",\n  //         firstName: \"Abhisekh\",\n  //         lastName: \"Shaw\",\n  //         password: \"1234\",\n  //         role: \"PRJ_MANAGER\",\n  //         isPasswordTemp: true,\n  //         manager: null,\n  //       },\n  //       {\n  //         id: 2,\n  //         email: \"ailani@adobe.com\",\n  //         firstName: \"Bhanu\",\n  //         lastName: \"Ailani\",\n  //         password: \"1234\",\n  //         role: \"USER\",\n  //         isPasswordTemp: true,\n  //         manager: null,\n  //       },\n  //     ],\n  //     attachments: [],\n  //     active: false,\n  //     soonDue: false,\n  //   },\n  // ];\n\n  let {\n    projects\n  } = useSelector(state => state.project);\n\n  const dropDown = (id, content) => {\n    const idUrl = \"/projectsummary/\" + id;\n    const editProj = content.filter(prj => prj.id === id)[0];\n    return /*#__PURE__*/_jsxDEV(Dropdown, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        id: \"options-menu\",\n        variant: \"secondary\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-gear-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), \" Options\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        variant: \"dark\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          as: Link,\n          to: idUrl,\n          children: \"View Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          onClick: handleSelect,\n          id: id,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          onClick: handleDelete,\n          id: id,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this);\n  };\n\n  const projectData = content.map(prj => {\n    const ActiveStatus = prj.active ? \"Active\" : \"Inactive\";\n    const BadgeType = ActiveStatus === \"Active\" ? \"success\" : \"danger\";\n    const statusType = {\n      TO_DO: \"To-Do\",\n      IN_PROGRESS: \"In Progress\",\n      COMPLETED: \"Completed\",\n      SUSPENDED: \"Suspended\"\n    };\n    const soonDue = prj.soonDue ? /*#__PURE__*/_jsxDEV(Badge, {\n      bg: \"info\",\n      children: \"Soon Due\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 35\n    }, this) : \"\";\n    const prjData = {\n      projectActiveStatus: /*#__PURE__*/_jsxDEV(Badge, {\n        bg: BadgeType,\n        children: ActiveStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 28\n      }, this),\n      projectDueStatus: soonDue,\n      projectCode: prj.id,\n      pName: prj.projectName,\n      cName: prj.client.fullName,\n      projectStatus: statusType[prj.status],\n      projectTeam: prj.projectManager.firstName + \" \" + prj.projectManager.lastName,\n      projectOptions: dropDown(prj.id, content)\n    };\n    return prjData;\n  });\n  const columns = [{\n    dataField: \"projectActiveStatus\",\n    text: \"\",\n    sort: true,\n    sortCaret: SortCaret,\n    headerStyle: (colum, colIndex) => {\n      return {\n        width: \"80px\",\n        textAlign: \"center\"\n      };\n    }\n  }, {\n    dataField: \"projectDueStatus\",\n    text: \"\",\n    sort: true,\n    sortCaret: SortCaret,\n    headerStyle: (colum, colIndex) => {\n      return {\n        width: \"100px\",\n        textAlign: \"center\"\n      };\n    }\n  }, {\n    dataField: \"projectCode\",\n    text: \"Code\",\n    sort: true,\n    sortCaret: SortCaret,\n    headerStyle: (colum, colIndex) => {\n      return {\n        width: \"100px\",\n        textAlign: \"center\"\n      };\n    }\n  }, {\n    dataField: \"pName\",\n    text: \"Project Name\",\n    sort: true,\n    sortCaret: SortCaret\n  }, {\n    dataField: \"cName\",\n    text: \"Client Name\",\n    sort: true,\n    sortCaret: SortCaret\n  }, {\n    dataField: \"projectStatus\",\n    text: \"Status\",\n    sort: true,\n    sortCaret: SortCaret\n  }, {\n    dataField: \"projectTeam\",\n    text: \"Team\"\n  }, {\n    dataField: \"projectOptions\",\n    text: \"\",\n    headerStyle: (colum, colIndex) => {\n      return {\n        width: \"140px\",\n        textAlign: \"center\"\n      };\n    }\n  }];\n  const defaultSorted = [{\n    dataField: \"projectCode\",\n    order: \"asc\" //desc\n\n  }];\n\n  const customTotal = (from, to, size) => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"react-bootstrap-table-pagination-total\",\n    children: [\"\\xA0 Showing \", from, \" to \", to, \" of \", size, \" Results\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 5\n  }, this);\n\n  const options = {\n    // paginationSize: 4,\n    // pageStartIndex: 0,\n    // alwaysShowAllBtns: true, // Always show next and previous button\n    // withFirstAndLast: false, // Hide the going to First and Last page button\n    // hideSizePerPage: true, // Hide the sizePerPage dropdown always\n    // hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\n    // firstPageText: 'First',\n    // prePageText: 'Back',\n    // nextPageText: 'Next',\n    // lastPageText: 'Last',\n    // nextPageTitle: 'First page',\n    // prePageTitle: 'Pre page',\n    // firstPageTitle: 'Next page',\n    // lastPageTitle: 'Last page',\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    disablePageTitle: true,\n    sizePerPageList: [{\n      text: \"5\",\n      value: 5\n    }, {\n      text: \"10\",\n      value: 10\n    }, {\n      text: \"All\",\n      value: projectData.length\n    }]\n  };\n  const {\n    SearchBar\n  } = Search;\n  return (\n    /*#__PURE__*/\n    // <Container>\n    _jsxDEV(Card, {\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        as: \"h4\",\n        children: [\"PROJECTS\", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          className: \"float-end\",\n          id: \"addProject\",\n          onClick: handleShow,\n          children: \"+ Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n          keyField: \"projectCode\",\n          data: projectData,\n          columns: columns,\n          search: true,\n          children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(SearchBar, { ...props.searchProps,\n              srText: \"Search Projects :\",\n              placeholder: \"Enter text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, { ...props.baseProps,\n              hover: true // selectRow={{ mode: \"checkbox\" }}\n              ,\n              defaultSorted: defaultSorted,\n              pagination: paginationFactory(options),\n              noDataIndication: \"No data available in table\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddProject, {\n        show: show,\n        onHide: handleClose,\n        data: proj,\n        method: method\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this) // </Container>\n\n  );\n};\n\n_s(ProjectDashboard, \"ms6XYV50iHV3fi+lgjuxF7DsO44=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProjectDashboard;\nexport default ProjectDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectDashboard\");","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/ProjectDashboard.js"],"names":["React","useState","useSelector","BootstrapTable","paginationFactory","ToolkitProvider","Search","Card","Button","Container","Badge","Dropdown","AddProject","Link","useDispatch","deleteProject","getProjects","ProjectDashboard","show","setShow","method","setMethod","initProj","projectName","projectDescription","client","projectManager","status","startDate","endDate","duration","cost","teamMembers","projectID","proj","setProj","handleShow","handleClose","formDate","date","splitDate","split","newDate","splitDateList","reverse","finalDate","join","handleSelect","e","statusType","TO_DO","IN_PROGRESS","COMPLETED","SUSPENDED","index","content","findIndex","o","id","toString","target","dataGot","toPass","description","dispatch","handleDelete","then","console","log","catch","SortCaret","order","column","projects","state","project","dropDown","idUrl","editProj","filter","prj","projectData","map","ActiveStatus","active","BadgeType","soonDue","prjData","projectActiveStatus","projectDueStatus","projectCode","pName","cName","fullName","projectStatus","projectTeam","firstName","lastName","projectOptions","columns","dataField","text","sort","sortCaret","headerStyle","colum","colIndex","width","textAlign","defaultSorted","customTotal","from","to","size","options","showTotal","paginationTotalRenderer","disablePageTitle","sizePerPageList","value","length","SearchBar","props","searchProps","baseProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { Card, Button, Container, Badge, Dropdown } from \"react-bootstrap\";\nimport AddProject from \"./AddProject\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteProject } from \"../../actions/project\";\nimport { getProjects } from \"../../actions/project\";\n\nconst ProjectDashboard = () => {\n  const [show, setShow] = useState(false);\n  const [method, setMethod] = useState(\"Add\");\n  const initProj = {\n    projectName: \"\",\n    projectDescription: \"\",\n    client: \"\",\n    projectManager: \"\",\n    status: \"To-Do\",\n    startDate: \"\",\n    endDate: \"\",\n    duration: 0.0,\n    cost: 0.0,\n    teamMembers: [],\n    projectID:-2,\n  };\n  const [proj, setProj] = useState(initProj);\n  const handleShow = () => setShow(true);\n  const handleClose = () => {\n    setShow(false);\n    setProj(initProj);\n    setMethod(\"Add\");\n  };\n\n  const formDate = (date) => {\n    let splitDate = date.split(\" \");\n    let newDate = splitDate[0];\n    let splitDateList = newDate.split(\"-\");\n    splitDateList = splitDateList.reverse();\n    const finalDate = splitDateList.join(\"-\");\n    return finalDate;\n  };\n\n  const handleSelect = (e) => {\n    handleShow();\n\n    const statusType = {\n      TO_DO: \"To-Do\",\n      IN_PROGRESS: \"In Progress\",\n      COMPLETED: \"Completed\",\n      SUSPENDED: \"Suspended\",\n    };\n\n    const index = content.findIndex(\n      (o) => o.id.toString() === e.target.id.toString()\n    );\n    let dataGot = content[index];\n    let toPass = {\n      projectName: \"\",\n      projectDescription: \"\",\n      client: \"\",\n      projectManager: \"\",\n      status: \"To-Do\",\n      startDate: \"\",\n      endDate: \"\",\n      duration: 0.0,\n      cost: 0.0,\n      teamMembers: [],\n      projectID:-1,\n    };\n    toPass.projectName = dataGot.projectName;\n    toPass.projectManager = dataGot.projectManager;\n    toPass.projectDescription = dataGot.description;\n    toPass.client = dataGot.client.id;\n    toPass.projectManager = dataGot.projectManager.id;\n    toPass.status = statusType[dataGot.status];\n    toPass.startDate = formDate(dataGot.startDate);\n    toPass.endDate = formDate(dataGot.endDate);\n    toPass.teamMembers = dataGot.teamMembers;\n    toPass.projectID = dataGot.id;\n    // console.log(\"entering \");\n    // console.log(dataGot);\n    setProj(toPass);\n    setMethod(\"Edit\");\n  };\n\n  const dispatch = useDispatch();\n  \n  const handleDelete = (e) => {\n    dispatch(deleteProject(e.target.id))\n      .then(() => {\n        dispatch(getProjects())\n          .then(() => {\n            console.log(\"Projects fetched successfully\");\n          })\n          .catch(() => {\n            console.log(\"Unable to fetch projects\");\n          });\n      })\n      .catch(() => {\n        console.log(\"Could not delete project!!\");\n      });\n  }\n\n  const SortCaret = (order, column) => {\n    if (!order)\n      return (\n        <span class=\"float-end\">\n          <font color=\"grey\">\n            &nbsp;&nbsp;<i class=\"bi bi-caret-up-fill\"></i>\n            <i class=\"bi bi-caret-down-fill\"></i>\n          </font>\n        </span>\n      );\n    else if (order === \"asc\")\n      return (\n        <span class=\"float-end\">\n          &nbsp;&nbsp;<i class=\"bi bi-caret-up-fill\"></i>\n          <font color=\"grey\">\n            <i class=\"bi bi-caret-down-fill\"></i>\n          </font>\n        </span>\n      );\n    else if (order === \"desc\")\n      return (\n        <span class=\"float-end\">\n          &nbsp;&nbsp;\n          <font color=\"grey\">\n            <i class=\"bi bi-caret-up-fill\"></i>\n          </font>\n          <i class=\"bi bi-caret-down-fill\"></i>\n        </span>\n      );\n    return null;\n  };\n\n  // TO CHANGE\n  const { projects:content } = useSelector((state) => state.project);\n  // const content = [content1];\n  // let content = [\n  //   {\n  //     id: 1,\n  //     client: {\n  //       id: 1,\n  //       fullName: \"Client1\",\n  //       nickName: \"cl1\",\n  //       email: \"cl1@google.come\",\n  //       address: {\n  //         addressLine1: \"MNOP\",\n  //         addressLine2: \"DEF\",\n  //         city: \"ABC\",\n  //         state: \"Haryana\",\n  //         country: \"India\",\n  //         zipcode: \"121004\",\n  //         telephone1: \"12345\",\n  //         telephone2: \"4567\",\n  //         fax: \"56789\",\n  //       },\n  //       website: \"cl1.github.io\",\n  //       billDetails: \"N/A\",\n  //     },\n  //     description: \"test\",\n  //     projectManager: {\n  //       id: 1,\n  //       email: \"pmangla@adobe.com\",\n  //       firstName: \"Puneet\",\n  //       lastName: \"Mangla\",\n  //       password: \"1234\",\n  //       role: \"PRJ_MANAGER\",\n  //       isPasswordTemp: false,\n  //       manager: null,\n  //     },\n  //     projectName: \"prj15\",\n  //     startDate: \"06-11-2021 11:10:09\",\n  //     endDate: \"09-11-2021 11:10:09\",\n  //     status: \"IN_PROGRESS\",\n  //     teamMembers: [\n  //       {\n  //         id: 3,\n  //         email: \"ashaw@adobe.com\",\n  //         firstName: \"Abhisekh\",\n  //         lastName: \"Shaw\",\n  //         password: \"1234\",\n  //         role: \"PRJ_MANAGER\",\n  //         isPasswordTemp: true,\n  //         manager: null,\n  //       },\n  //       {\n  //         id: 2,\n  //         email: \"ailani@adobe.com\",\n  //         firstName: \"Bhanu\",\n  //         lastName: \"Ailani\",\n  //         password: \"1234\",\n  //         role: \"USER\",\n  //         isPasswordTemp: true,\n  //         manager: null,\n  //       },\n  //     ],\n  //     attachments: [],\n  //     active: false,\n  //     soonDue: false,\n  //   },\n  // ];\n  let { projects } = useSelector((state) => state.project);\n\n  const dropDown = (id, content) => {\n    const idUrl = \"/projectsummary/\" + id;\n    const editProj = content.filter((prj) => prj.id === id)[0];\n    return (\n      <Dropdown>\n        <Dropdown.Toggle id=\"options-menu\" variant=\"secondary\">\n          <i class=\"bi bi-gear-fill\"></i> Options\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu variant=\"dark\">\n          <Dropdown.Item as={Link} to={idUrl}>\n            View Summary\n          </Dropdown.Item>\n          <Dropdown.Item onClick={handleSelect} id={id}>\n            Edit\n          </Dropdown.Item>\n          <Dropdown.Item onClick={handleDelete} id={id}>\n            Delete\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  };\n  const projectData = content.map((prj) => {\n    const ActiveStatus = prj.active ? \"Active\" : \"Inactive\";\n    const BadgeType = ActiveStatus === \"Active\" ? \"success\" : \"danger\";\n    const statusType = {\n      TO_DO: \"To-Do\",\n      IN_PROGRESS: \"In Progress\",\n      COMPLETED: \"Completed\",\n      SUSPENDED: \"Suspended\",\n    };\n    const soonDue = prj.soonDue ? <Badge bg=\"info\">Soon Due</Badge> : \"\";\n    const prjData = {\n      projectActiveStatus: <Badge bg={BadgeType}>{ActiveStatus}</Badge>,\n      projectDueStatus: soonDue,\n      projectCode: prj.id,\n      pName: prj.projectName,\n      cName: prj.client.fullName,\n      projectStatus: statusType[prj.status],\n      projectTeam:\n        prj.projectManager.firstName + \" \" + prj.projectManager.lastName,\n      projectOptions: dropDown(prj.id, content),\n    };\n    return prjData;\n  });\n\n  const columns = [\n    {\n      dataField: \"projectActiveStatus\",\n      text: \"\",\n      sort: true,\n      sortCaret: SortCaret,\n      headerStyle: (colum, colIndex) => {\n        return { width: \"80px\", textAlign: \"center\" };\n      },\n    },\n    {\n      dataField: \"projectDueStatus\",\n      text: \"\",\n      sort: true,\n      sortCaret: SortCaret,\n      headerStyle: (colum, colIndex) => {\n        return { width: \"100px\", textAlign: \"center\" };\n      },\n    },\n    {\n      dataField: \"projectCode\",\n      text: \"Code\",\n      sort: true,\n      sortCaret: SortCaret,\n\n      headerStyle: (colum, colIndex) => {\n        return { width: \"100px\", textAlign: \"center\" };\n      },\n    },\n    {\n      dataField: \"pName\",\n      text: \"Project Name\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"cName\",\n      text: \"Client Name\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"projectStatus\",\n      text: \"Status\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"projectTeam\",\n      text: \"Team\",\n    },\n    {\n      dataField: \"projectOptions\",\n      text: \"\",\n\n      headerStyle: (colum, colIndex) => {\n        return { width: \"140px\", textAlign: \"center\" };\n      },\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"projectCode\",\n      order: \"asc\", //desc\n    },\n  ];\n\n  const customTotal = (from, to, size) => (\n    <span className=\"react-bootstrap-table-pagination-total\">\n      &nbsp; Showing {from} to {to} of {size} Results\n    </span>\n  );\n\n  const options = {\n    // paginationSize: 4,\n    // pageStartIndex: 0,\n    // alwaysShowAllBtns: true, // Always show next and previous button\n    // withFirstAndLast: false, // Hide the going to First and Last page button\n    // hideSizePerPage: true, // Hide the sizePerPage dropdown always\n    // hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\n    // firstPageText: 'First',\n    // prePageText: 'Back',\n    // nextPageText: 'Next',\n    // lastPageText: 'Last',\n    // nextPageTitle: 'First page',\n    // prePageTitle: 'Pre page',\n    // firstPageTitle: 'Next page',\n    // lastPageTitle: 'Last page',\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    disablePageTitle: true,\n    sizePerPageList: [\n      {\n        text: \"5\",\n        value: 5,\n      },\n      {\n        text: \"10\",\n        value: 10,\n      },\n      {\n        text: \"All\",\n        value: projectData.length,\n      },\n    ],\n  };\n\n  const { SearchBar } = Search;\n\n  return (\n    // <Container>\n      <Card style={{ width: \"100%\" }}>\n        <Card.Header as=\"h4\">\n          PROJECTS\n          <Button\n            variant=\"success\"\n            className=\"float-end\"\n            id=\"addProject\"\n            onClick={handleShow}\n          >\n            + Add Project\n          </Button>\n          {/* <Card.Text className=\"float-end\">&nbsp;</Card.Text> */}\n          {/* <Button\n            variant=\"danger\"\n            className=\"float-end\"\n            id=\"deleteProjects\"\n            disabled={true}\n          >\n            Delete Selected\n          </Button> */}\n        </Card.Header>\n        <Card.Body>\n          <ToolkitProvider\n            keyField=\"projectCode\"\n            data={projectData}\n            columns={columns}\n            search\n          >\n            {(props) => (\n              <div>\n                <SearchBar\n                  {...props.searchProps}\n                  srText=\"Search Projects :\"\n                  placeholder=\"Enter text\"\n                />\n                <br />\n                <BootstrapTable\n                  {...props.baseProps}\n                  hover\n                  // selectRow={{ mode: \"checkbox\" }}\n                  defaultSorted={defaultSorted}\n                  pagination={paginationFactory(options)}\n                  noDataIndication=\"No data available in table\"\n                />\n              </div>\n            )}\n          </ToolkitProvider>\n        </Card.Body>\n        <AddProject\n          show={show}\n          onHide={handleClose}\n          data={proj}\n          method={method}\n        />\n      </Card>\n    // </Container>\n  );\n};\n\nexport default ProjectDashboard;\n"]},"metadata":{},"sourceType":"module"}