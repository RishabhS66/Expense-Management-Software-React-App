{"ast":null,"code":"var _jsxFileName = \"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/ProjectDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport projectService from \"../../services/project.service\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { Card, Button, Container, Badge, Dropdown } from \"react-bootstrap\";\nimport AddProject from \"./AddProject\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectDashboard = () => {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => setShow(false);\n\n  const SortCaret = (order, column) => {\n    if (!order) return /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"float-end\",\n      children: /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"grey\",\n        children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-caret-up-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-caret-down-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this);else if (order === \"asc\") return /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"float-end\",\n      children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"bi bi-caret-up-fill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"grey\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-caret-down-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this);else if (order === \"desc\") return /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"float-end\",\n      children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"grey\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-caret-up-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"bi bi-caret-down-fill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this);\n    return null;\n  };\n\n  const [content, setContent] = useState(\"\");\n  useEffect(() => {\n    projectService.getProjects().then(response => {\n      setContent(response.data);\n    }, error => {\n      const _content = error.response && error.response.data || error.message || error.toString();\n\n      setContent(_content);\n    });\n  }, []); // console.log(content);\n\n  const dropDown = /*#__PURE__*/_jsxDEV(Dropdown, {\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n      id: \"options-menu\",\n      variant: \"secondary\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"bi bi-gear-fill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), \" Options\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n      variant: \"dark\",\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        href: \"/projectsummary\",\n        children: \"View Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        href: \"\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        href: \"\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n\n  const c1 = [content];\n  console.log(c1);\n  console.log(content); // const projectData1 = c1\n  // .map((prj) => {\n  //     const ActiveStatus = prj.active?\"Active\":\"Inactive\";\n  //     const BadgeType = ActiveStatus === \"Active\"?\"success\":\"danger\"\n  //     const prjData = {\n  //       projectActiveStatus: <Badge bg={BadgeType}>{ActiveStatus}</Badge>,\n  //       projectDueStatus: <Badge bg=\"info\">Soon Due</Badge>,\n  //       projectCode: prj.id,\n  //       pName: prj.ptojectName,\n  //       cName: prj.client.fullName,\n  //       projectStatus: prj.status,\n  //       projectTeam: prj.projectManager.firstName + prj.projectManager.firstName,\n  //       projectOptions: dropDown,\n  //     }\n  //     return prjData;\n  // });\n  // console.log(projectData1);\n\n  const columns = [{\n    dataField: \"projectActiveStatus\",\n    text: \"\",\n    sort: true,\n    sortCaret: SortCaret,\n    headerStyle: (colum, colIndex) => {\n      return {\n        width: \"80px\",\n        textAlign: \"center\"\n      };\n    }\n  }, {\n    dataField: \"projectDueStatus\",\n    text: \"\",\n    sort: true,\n    sortCaret: SortCaret,\n    headerStyle: (colum, colIndex) => {\n      return {\n        width: \"100px\",\n        textAlign: \"center\"\n      };\n    }\n  }, {\n    dataField: \"projectCode\",\n    text: \"Code\",\n    sort: true,\n    sortCaret: SortCaret,\n    headerStyle: (colum, colIndex) => {\n      return {\n        width: \"100px\",\n        textAlign: \"center\"\n      };\n    }\n  }, {\n    dataField: \"pName\",\n    text: \"Project Name\",\n    sort: true,\n    sortCaret: SortCaret\n  }, {\n    dataField: \"cName\",\n    text: \"Client Name\",\n    sort: true,\n    sortCaret: SortCaret\n  }, {\n    dataField: \"projectStatus\",\n    text: \"Status\",\n    sort: true,\n    sortCaret: SortCaret\n  }, {\n    dataField: \"projectTeam\",\n    text: \"Team\"\n  }, {\n    dataField: \"projectOptions\",\n    text: \"\",\n    headerStyle: (colum, colIndex) => {\n      return {\n        width: \"140px\",\n        textAlign: \"center\"\n      };\n    }\n  }];\n  const defaultSorted = [{\n    dataField: \"projectCode\",\n    order: \"asc\" //desc\n\n  }];\n  const projectData = [{\n    projectActiveStatus: /*#__PURE__*/_jsxDEV(Badge, {\n      bg: \"success\",\n      children: \"Active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 28\n    }, this),\n    projectDueStatus: /*#__PURE__*/_jsxDEV(Badge, {\n      bg: \"info\",\n      children: \"Soon Due\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }, this),\n    projectCode: 1,\n    pName: \"BI Software\",\n    cName: \"XYZ\",\n    projectStatus: \"Started\",\n    projectTeam: \"BP\",\n    projectOptions: dropDown\n  }, {\n    projectActiveStatus: /*#__PURE__*/_jsxDEV(Badge, {\n      bg: \"success\",\n      children: \"Active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 28\n    }, this),\n    projectDueStatus: /*#__PURE__*/_jsxDEV(Badge, {\n      bg: \"info\",\n      children: \"Soon Due\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }, this),\n    projectCode: 2,\n    pName: \"BL Software\",\n    cName: \"ABC\",\n    projectStatus: \"Started\",\n    projectTeam: \"BP\",\n    projectOptions: dropDown\n  }];\n\n  const customTotal = (from, to, size) => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"react-bootstrap-table-pagination-total\",\n    children: [\"\\xA0 Showing \", from, \" to \", to, \" of \", size, \" Results\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n\n  const options = {\n    // paginationSize: 4,\n    // pageStartIndex: 0,\n    // alwaysShowAllBtns: true, // Always show next and previous button\n    // withFirstAndLast: false, // Hide the going to First and Last page button\n    // hideSizePerPage: true, // Hide the sizePerPage dropdown always\n    // hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\n    // firstPageText: 'First',\n    // prePageText: 'Back',\n    // nextPageText: 'Next',\n    // lastPageText: 'Last',\n    // nextPageTitle: 'First page',\n    // prePageTitle: 'Pre page',\n    // firstPageTitle: 'Next page',\n    // lastPageTitle: 'Last page',\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    disablePageTitle: true,\n    sizePerPageList: [{\n      text: \"5\",\n      value: 5\n    }, {\n      text: \"10\",\n      value: 10\n    }, {\n      text: \"All\",\n      value: projectData.length\n    }]\n  };\n  const {\n    SearchBar\n  } = Search;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        as: \"h4\",\n        children: [\"PROJECTS\", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          className: \"float-end\",\n          id: \"addProject\",\n          onClick: handleShow,\n          children: \"+ Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"float-end\",\n          children: \"\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          className: \"float-end\",\n          id: \"deleteProjects\",\n          disabled: true,\n          children: \"Delete Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n          keyField: \"projectCode\",\n          data: projectData,\n          columns: columns,\n          search: true,\n          children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(SearchBar, { ...props.searchProps,\n              srText: \"Search Projects :\",\n              placeholder: \"Enter text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, { ...props.baseProps,\n              hover: true,\n              selectRow: {\n                mode: \"checkbox\"\n              },\n              defaultSorted: defaultSorted,\n              pagination: paginationFactory(options),\n              noDataIndication: \"No data available in table\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddProject, {\n        show: show,\n        onHide: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProjectDashboard, \"kRjbQtAYOzkmi7TW5sSDEWmHQGU=\");\n\n_c = ProjectDashboard;\nexport default ProjectDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectDashboard\");","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/ProjectDashboard.js"],"names":["React","useState","useEffect","projectService","BootstrapTable","paginationFactory","ToolkitProvider","Search","Card","Button","Container","Badge","Dropdown","AddProject","ProjectDashboard","show","setShow","handleShow","handleClose","SortCaret","order","column","content","setContent","getProjects","then","response","data","error","_content","message","toString","dropDown","c1","console","log","columns","dataField","text","sort","sortCaret","headerStyle","colum","colIndex","width","textAlign","defaultSorted","projectData","projectActiveStatus","projectDueStatus","projectCode","pName","cName","projectStatus","projectTeam","projectOptions","customTotal","from","to","size","options","showTotal","paginationTotalRenderer","disablePageTitle","sizePerPageList","value","length","SearchBar","props","searchProps","baseProps","mode"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport projectService from \"../../services/project.service\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { Card, Button, Container, Badge, Dropdown } from \"react-bootstrap\";\nimport AddProject from \"./AddProject\";\n\nconst ProjectDashboard = () => {\n  const [show, setShow] = useState(false);\n  const handleShow = () => setShow(true);\n  const handleClose = () => setShow(false);\n\n  const SortCaret = (order, column) => {\n    if (!order)\n      return (\n        <span class=\"float-end\">\n          <font color=\"grey\">\n            &nbsp;&nbsp;<i class=\"bi bi-caret-up-fill\"></i>\n            <i class=\"bi bi-caret-down-fill\"></i>\n          </font>\n        </span>\n      );\n    else if (order === \"asc\")\n      return (\n        <span class=\"float-end\">\n          &nbsp;&nbsp;<i class=\"bi bi-caret-up-fill\"></i>\n          <font color=\"grey\">\n            <i class=\"bi bi-caret-down-fill\"></i>\n          </font>\n        </span>\n      );\n    else if (order === \"desc\")\n      return (\n        <span class=\"float-end\">\n          &nbsp;&nbsp;\n          <font color=\"grey\">\n            <i class=\"bi bi-caret-up-fill\"></i>\n          </font>\n          <i class=\"bi bi-caret-down-fill\"></i>\n        </span>\n      );\n    return null;\n  };\n  \n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    projectService.getProjects().then(\n      (response) => {\n        setContent(response.data);\n      },\n      (error) => {\n        const _content =\n          (error.response && error.response.data) ||\n          error.message ||\n          error.toString();\n\n        setContent(_content);\n      }\n    );\n  }, []);\n  // console.log(content);\n\n  const dropDown = (\n    <Dropdown>\n      <Dropdown.Toggle id=\"options-menu\" variant=\"secondary\">\n        <i class=\"bi bi-gear-fill\"></i> Options\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu variant=\"dark\">\n        <Dropdown.Item href=\"/projectsummary\">View Summary</Dropdown.Item>\n        <Dropdown.Item href=\"\">Edit</Dropdown.Item>\n        <Dropdown.Item href=\"\">Delete</Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n  const c1 = [content];\n  console.log(c1);\n  console.log(content);\n  // const projectData1 = c1\n  // .map((prj) => {\n  //     const ActiveStatus = prj.active?\"Active\":\"Inactive\";\n  //     const BadgeType = ActiveStatus === \"Active\"?\"success\":\"danger\"\n  //     const prjData = {\n  //       projectActiveStatus: <Badge bg={BadgeType}>{ActiveStatus}</Badge>,\n  //       projectDueStatus: <Badge bg=\"info\">Soon Due</Badge>,\n  //       projectCode: prj.id,\n  //       pName: prj.ptojectName,\n  //       cName: prj.client.fullName,\n  //       projectStatus: prj.status,\n  //       projectTeam: prj.projectManager.firstName + prj.projectManager.firstName,\n  //       projectOptions: dropDown,\n  //     }\n  //     return prjData;\n  // });\n  // console.log(projectData1);\n\n  const columns = [\n    {\n      dataField: \"projectActiveStatus\",\n      text: \"\",\n      sort: true,\n      sortCaret: SortCaret,\n      headerStyle: (colum, colIndex) => {\n        return { width: \"80px\", textAlign: \"center\" };\n      },\n    },\n    {\n      dataField: \"projectDueStatus\",\n      text: \"\",\n      sort: true,\n      sortCaret: SortCaret,\n      headerStyle: (colum, colIndex) => {\n        return { width: \"100px\", textAlign: \"center\" };\n      },\n    },\n    {\n      dataField: \"projectCode\",\n      text: \"Code\",\n      sort: true,\n      sortCaret: SortCaret,\n\n      headerStyle: (colum, colIndex) => {\n        return { width: \"100px\", textAlign: \"center\" };\n      },\n    },\n    {\n      dataField: \"pName\",\n      text: \"Project Name\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"cName\",\n      text: \"Client Name\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"projectStatus\",\n      text: \"Status\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"projectTeam\",\n      text: \"Team\",\n    },\n    {\n      dataField: \"projectOptions\",\n      text: \"\",\n\n      headerStyle: (colum, colIndex) => {\n        return { width: \"140px\", textAlign: \"center\" };\n      },\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"projectCode\",\n      order: \"asc\", //desc\n    },\n  ];\n\n  const projectData = [\n    {\n      projectActiveStatus: <Badge bg=\"success\">Active</Badge>,\n      projectDueStatus: <Badge bg=\"info\">Soon Due</Badge>,\n      projectCode: 1,\n      pName: \"BI Software\",\n      cName: \"XYZ\",\n      projectStatus: \"Started\",\n      projectTeam: \"BP\",\n      projectOptions: dropDown,\n    },\n    {\n      projectActiveStatus: <Badge bg=\"success\">Active</Badge>,\n      projectDueStatus: <Badge bg=\"info\">Soon Due</Badge>,\n      projectCode: 2,\n      pName: \"BL Software\",\n      cName: \"ABC\",\n      projectStatus: \"Started\",\n      projectTeam: \"BP\",\n      projectOptions: dropDown,\n    },\n  ];\n\n  const customTotal = (from, to, size) => (\n    <span className=\"react-bootstrap-table-pagination-total\">\n      &nbsp; Showing {from} to {to} of {size} Results\n    </span>\n  );\n\n  const options = {\n    // paginationSize: 4,\n    // pageStartIndex: 0,\n    // alwaysShowAllBtns: true, // Always show next and previous button\n    // withFirstAndLast: false, // Hide the going to First and Last page button\n    // hideSizePerPage: true, // Hide the sizePerPage dropdown always\n    // hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\n    // firstPageText: 'First',\n    // prePageText: 'Back',\n    // nextPageText: 'Next',\n    // lastPageText: 'Last',\n    // nextPageTitle: 'First page',\n    // prePageTitle: 'Pre page',\n    // firstPageTitle: 'Next page',\n    // lastPageTitle: 'Last page',\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    disablePageTitle: true,\n    sizePerPageList: [\n      {\n        text: \"5\",\n        value: 5,\n      },\n      {\n        text: \"10\",\n        value: 10,\n      },\n      {\n        text: \"All\",\n        value: projectData.length,\n      },\n    ],\n  };\n\n  const { SearchBar } = Search;\n\n  return (\n    <Container>\n      <Card style={{ width: \"100%\" }}>\n        <Card.Header as=\"h4\">\n          PROJECTS\n          <Button\n            variant=\"success\"\n            className=\"float-end\"\n            id=\"addProject\"\n            onClick={handleShow}\n          >\n            + Add Project\n          </Button>\n          <Card.Text className=\"float-end\">&nbsp;</Card.Text>\n          <Button\n            variant=\"danger\"\n            className=\"float-end\"\n            id=\"deleteProjects\"\n            disabled={true}\n          >\n            Delete Selected\n          </Button>\n        </Card.Header>\n        <Card.Body>\n          <ToolkitProvider\n            keyField=\"projectCode\"\n            data={projectData}\n            columns={columns}\n            search\n          >\n            {(props) => (\n              <div>\n                <SearchBar\n                  {...props.searchProps}\n                  srText=\"Search Projects :\"\n                  placeholder=\"Enter text\"\n                />\n                <br />\n                <BootstrapTable\n                  {...props.baseProps}\n                  hover\n                  selectRow={{ mode: \"checkbox\" }}\n                  defaultSorted={defaultSorted}\n                  pagination={paginationFactory(options)}\n                  noDataIndication=\"No data available in table\"\n                />\n              </div>\n            )}\n          </ToolkitProvider>\n        </Card.Body>\n        <AddProject show={show} onHide={handleClose} />\n      </Card>\n    </Container>\n  );\n};\n\nexport default ProjectDashboard;\n"]},"metadata":{},"sourceType":"module"}