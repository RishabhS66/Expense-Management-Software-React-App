{"ast":null,"code":"var _jsxFileName = \"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/MainFile.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchUsers } from \"./redux/DummyApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MainFile() {\n  _s();\n\n  const state = useSelector(state => state); // mapDispatchToProps\n\n  const dispatch = useDispatch();\n  let {\n    loading,\n    errors,\n    users\n  } = state;\n  React.useEffect(() => {\n    dispatch(fetchUsers());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading ... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this) : users.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this)\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false);\n}\n\n_s(MainFile, \"FWkvKHga9et6MC1eWo2CBPmZzW4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = MainFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainFile\");","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/MainFile.js"],"names":["React","useSelector","useDispatch","fetchUsers","MainFile","state","dispatch","loading","errors","users","useEffect","map","user","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,KAAK,GAAGJ,WAAW,CAAEI,KAAD,IAAWA,KAAZ,CAAzB,CADiC,CAEjC;;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,MAAI;AAAEK,IAAAA,OAAF;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA;AAAnB,MAA6BJ,KAAjC;AAEAL,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AACpBJ,IAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;AACD,GAFD,EAEG,EAFH;AAIA,sBACE;AAAA,cACGI,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,GAGNE,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAU;AAClB,0BACE;AAAA,+BACE;AAAA,oBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA;AADF,SAASD,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAND;AAJJ,mBADF;AAeD;;GAzBuBV,Q;UACRH,W,EAEGC,W;;;KAHKE,Q","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchUsers } from \"./redux/DummyApi\";\n\nexport default function MainFile() {\n  const state = useSelector((state) => state);\n  // mapDispatchToProps\n  const dispatch = useDispatch();\n  let { loading, errors, users } = state;\n\n  React.useEffect(() => {\n    dispatch(fetchUsers());\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <h4>Loading ... </h4>\n      ) : (\n        users.map((user) => {\n          return (\n            <ul key={user.id}>\n              <li>{user.name}</li>\n            </ul>\n          );\n        })\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}