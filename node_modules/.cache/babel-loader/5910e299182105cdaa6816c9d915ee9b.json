{"ast":null,"code":"var _jsxFileName = \"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/AddProject.js\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport { Dropdown, DropdownButton, ToastContainer } from \"react-bootstrap\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Toast } from \"react-bootstrap\";\nimport FileUpload from \"../FileUpload\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addProjects } from \"../../actions/project\";\nimport { getProjects } from \"../../actions/project\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddProject = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const schema = yup.object().shape({\n    projectName: yup.string().required(\"Project Name is required\"),\n    client: yup.string().required(\"Please select a Client\"),\n    projectManager: yup.string().required(\"Please select a Project Manager\"),\n    projectDescription: yup.string(),\n    duration: yup.number().min(0, \"Minumim value must be 0\").typeError(\"Duration must be a numerical value\").required(\"Duration is required\"),\n    cost: yup.number().min(0, \"Minumim value must be 0\").typeError(\"Cost must be a numerical value\").required(\"Cost is required\"),\n    startDate: yup.date().min(new Date(\"01-01-2000\"), \"Start Date must be after 01-01-2000\").required(\"Start Date is required\"),\n    endDate: yup.date().min(yup.ref(\"startDate\"), \"Due Date must be after Start Date\").required(\"Due Date is required\")\n  });\n  const [toast, setToast] = useState(false);\n\n  const closeToast = () => setToast(false);\n\n  const openToast = () => setToast(true);\n\n  const {\n    employees\n  } = useSelector(state => state.employees);\n  const {\n    clients\n  } = useSelector(state => state.client);\n  const {\n    user: currentUser\n  } = useSelector(state => state.auth);\n  const {\n    id\n  } = currentUser;\n  const k = employees.filter(e => e.id === id)[0];\n  const [membersAdded, setMembersAdded] = useState([{\n    firstname: \"\",\n    lastname: \"\",\n    id: -1\n  }]);\n\n  if (membersAdded.length === 1 && membersAdded[0].id === -1 && k !== undefined) {\n    let membersAdded_cpy = [k];\n    setMembersAdded(membersAdded_cpy);\n  }\n\n  const employees_cpy = [...employees]; // Dropdown needs access to the DOM of the Menu to measure it\n\n  const CustomMenu = /*#__PURE__*/React.forwardRef(_s(({\n    children,\n    style,\n    className,\n    \"aria-labelledby\": labeledBy\n  }, ref) => {\n    _s();\n\n    const [value, setValue] = useState(\"\");\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        autoFocus: true,\n        className: \"mx-3 my-2 w-auto\",\n        placeholder: \"Type to find...\",\n        onChange: e => setValue(e.target.value),\n        value: value,\n        ref: ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-unstyled\",\n        children: React.Children.toArray(children).filter(child => !value || child.props.children.toLowerCase().indexOf(value.toLowerCase()) >= 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\"));\n\n  const addMembers = id => () => {\n    const membersAdded_cpy = [...membersAdded];\n    const check = membersAdded_cpy.filter(m => m.id === id);\n    if (check.length !== 0) return;\n    const toAdd = employees_cpy.filter(e => e.id === id)[0];\n    membersAdded_cpy.push(toAdd);\n    setMembersAdded(membersAdded_cpy);\n    return;\n  };\n\n  const deleteMembers = id => () => {\n    const updateMembers = [...membersAdded].filter(m => m.id !== id);\n    setMembersAdded(updateMembers);\n    return;\n  };\n\n  const transformDate = (date, end) => {\n    const tStart = \"00:00:00\";\n    const tEnd = \"23:59:00\";\n    const splitDate = date.split(\"-\");\n    const newDateList = splitDate.reverse();\n\n    if (end === 0) {\n      newDateList.push(tStart);\n    } else {\n      newDateList.push(tEnd);\n    }\n\n    const newDate = newDateList.join(\"-\");\n    return newDate;\n  };\n\n  const dispatch = useDispatch();\n\n  const onSuccess = values => {\n    const pmId = Number(values.projectManager);\n    const statusType = {\n      \"To-Do\": \"TO_DO\",\n      \"In Progress\": \"IN_PROGRESS\",\n      Completed: \"COMPLETED\",\n      Suspended: \"SUSPENDED\"\n    };\n    const payload = {};\n    payload[\"projectName\"] = values.projectName;\n    payload[\"client\"] = {\n      id: Number(values.client)\n    };\n    payload[\"projectManager\"] = {\n      id: Number(values.projectManager)\n    };\n    payload[\"teamMembers\"] = membersAdded.filter(m => Number(m.id) !== pmId).map(m => {\n      return {\n        id: Number(m.id)\n      };\n    });\n    payload[\"description\"] = values.projectDescription;\n    payload[\"startDate\"] = transformDate(values.startDate, 0);\n    payload[\"endDate\"] = transformDate(values.endDate, 1);\n    payload[\"status\"] = statusType[values.status];\n    props.onHide();\n    dispatch(addProjects(payload)).then(() => {\n      dispatch(getProjects()).then(() => {\n        console.log(\"Projects fetched successfully\");\n      }).catch(() => {\n        console.log(\"Unable to fetch projects\");\n      });\n    }).catch(error => {\n      console.log(error);\n      openToast();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      validationSchema: schema,\n      validateOnChange: true,\n      onSubmit: onSuccess,\n      initialValues: {\n        projectName: \"\",\n        projectDescription: \"\",\n        client: \"\",\n        projectManager: \"\",\n        status: \"To-Do\",\n        startDate: \"\",\n        endDate: \"\",\n        duration: 0.0,\n        cost: 0.0\n      },\n      children: ({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Modal, { ...props,\n          size: \"lg\",\n          backdrop: \"static\",\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"Add Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"projectName\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Project Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  name: \"projectName\",\n                  value: values.projectName,\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  isInvalid: touched.projectName && errors.projectName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.projectName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n              defaultActiveKey: \"basic\",\n              children: [/*#__PURE__*/_jsxDEV(Tab, {\n                eventKey: \"basic\",\n                title: \"Basic\",\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    controlId: \"clientName\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Client Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                      name: \"client\",\n                      value: values.client,\n                      onChange: handleChange,\n                      onBlur: handleBlur,\n                      isInvalid: touched.client && errors.client,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        disabled: true,\n                        children: \"Select Client\"\n                      }, \"SC\", false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 25\n                      }, this), clients.map(client => {\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: client.id,\n                          children: client.fullName + \" (Client ID: \" + client.id + \")\"\n                        }, client.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 238,\n                          columnNumber: 29\n                        }, this);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    controlId: \"teamLead\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Team Lead\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                      defaultValue: \"Choose...\",\n                      disabled: true,\n                      children: /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"---\"\n                      }, \"NA\", false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    controlId: \"projectManager\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Project Manager\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                      name: \"projectManager\",\n                      value: values.projectManager,\n                      onChange: handleChange,\n                      onBlur: handleBlur,\n                      isInvalid: touched.projectManager && errors.projectManager,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        disabled: true,\n                        children: \"Select Project Manager\"\n                      }, \"SPM\", false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 267,\n                        columnNumber: 25\n                      }, this), employees.filter(e => e.role === 1 && e.id === id).map(e => {\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: e.id,\n                          children: e.firstname + \" \" + e.lastname + \" (Employee ID: \" + e.id + \")\"\n                        }, e.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 274,\n                          columnNumber: 31\n                        }, this);\n                      }), employees.filter(e => e.role === 1 && e.id !== id).map(e => {\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: e.id,\n                          children: e.firstname + \" \" + e.lastname + \" (Employee ID: \" + e.id + \")\"\n                        }, e.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 288,\n                          columnNumber: 31\n                        }, this);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                eventKey: \"team\",\n                title: \"Team\",\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"teamMembers\",\n                    children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n                      title: \"Search and Add Team Members \",\n                      variant: \"secondary\",\n                      children: /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                        as: CustomMenu,\n                        children: employees.map(e => {\n                          return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                            eventKey: e.id,\n                            onClick: addMembers(e.id),\n                            children: e.firstname + \" \" + e.lastname + \" (Employee ID: \" + e.id + \")\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 315,\n                            columnNumber: 31\n                          }, this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 312,\n                        columnNumber: 25\n                      }, this)\n                    }, \"down\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    controlId: \"teamMembers\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: [\"Team Members: \", membersAdded.length]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 336,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 335,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                      children: membersAdded.map(m => {\n                        return /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: [m.firstname + \" \" + m.lastname + \" (Employee ID: \" + m.id + \")  \", /*#__PURE__*/_jsxDEV(Button, {\n                            className: \"m-0 p- border-0\",\n                            variant: \"outline-danger\",\n                            size: \"sm\",\n                            onClick: deleteMembers(m.id),\n                            disabled: m.id === id,\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              class: \"bi bi-x-lg\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 355,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 348,\n                            columnNumber: 31\n                          }, this)]\n                        }, m.id, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 341,\n                          columnNumber: 29\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 338,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                eventKey: \"approvals\",\n                title: \"Approvals\",\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    controlId: \"timeSheetApproval\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Timesheet Approval Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 384,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                      defaultValue: \"Choose...\",\n                      children: /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Team Lead\"\n                      }, \"TL\", false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 386,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 385,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    controlId: \"expenseApproval\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Expense Approval Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 391,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                      defaultValue: \"Choose...\",\n                      children: /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Project Manager\"\n                      }, \"PM\", false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 393,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 392,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                eventKey: \"advanced\",\n                title: \"Advanced\",\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"projDescription\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Project Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FloatingLabel, {\n                    controlId: \"projDescriptionText\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                      as: \"textarea\",\n                      placeholder: \"Leave a comment here\",\n                      style: {\n                        height: \"100px\"\n                      },\n                      name: \"projectDescription\",\n                      value: values.projectDescription,\n                      onChange: handleChange,\n                      onBlur: handleBlur,\n                      isInvalid: touched.projectDescription && errors.projectDescription\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: errors.projectDescription\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 418,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    controlId: \"duration\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Duration (Hours)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 425,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      name: \"duration\",\n                      value: values.duration,\n                      onChange: handleChange,\n                      onBlur: handleBlur,\n                      isInvalid: touched.duration && errors.duration\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 426,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: errors.duration\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 433,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    controlId: \"estimatedCost\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Project Estimated Cost (Rs.)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 438,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      name: \"cost\",\n                      value: values.cost,\n                      onChange: handleChange,\n                      onBlur: handleBlur,\n                      isInvalid: touched.cost && errors.cost\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 439,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: errors.cost\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 446,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 437,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    controlId: \"projectStatus\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Project Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 453,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                      name: \"status\",\n                      value: values.status,\n                      onChange: handleChange,\n                      onBlur: handleBlur,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"To-Do\"\n                      }, \"TD\", false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 460,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"In Progress\"\n                      }, \"IP\", false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 461,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Suspended\"\n                      }, \"S\", false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 462,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Completed\"\n                      }, \"C\", false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 463,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 454,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 452,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                eventKey: \"dates\",\n                title: \"Dates\",\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    controlId: \"startDate\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Start Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 472,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"date\",\n                      name: \"startDate\",\n                      value: values.startDate,\n                      onChange: handleChange,\n                      onBlur: handleBlur,\n                      isInvalid: touched.startDate && errors.startDate\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 473,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: errors.startDate\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 481,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    controlId: \"dueDate\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Due Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 486,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"date\",\n                      name: \"endDate\",\n                      value: values.endDate,\n                      onChange: handleChange,\n                      onBlur: handleBlur,\n                      isInvalid: touched.endDate && errors.endDate\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 487,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: errors.endDate\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 495,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 485,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                eventKey: \"attachment\",\n                title: \"Attachment\",\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FileUpload, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              type: \"submit\",\n              onClick: handleSubmit,\n              disabled: values.projectName.length === 0 || !isValid,\n              children: \"Add Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: props.onHide,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, \"Formik\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-center\",\n      children: /*#__PURE__*/_jsxDEV(Toast, {\n        className: \"text-center\",\n        bg: \"danger\",\n        style: {\n          width: \"18rem\"\n        },\n        show: toast,\n        onClose: closeToast,\n        position: \"middle-center\",\n        delay: 3000,\n        autohide: true,\n        children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"me-auto\",\n            children: \"ERROR!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Project Could NOT Be Added!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(AddProject, \"Vh7+yNpAZMd/q/SoR3m0pAwh9vA=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = AddProject;\nexport default AddProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProject\");","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/AddProject.js"],"names":["React","Tabs","Tab","Form","Button","Row","Col","FloatingLabel","Dropdown","DropdownButton","ToastContainer","Modal","Toast","FileUpload","Formik","yup","useSelector","useState","useDispatch","addProjects","getProjects","AddProject","props","schema","object","shape","projectName","string","required","client","projectManager","projectDescription","duration","number","min","typeError","cost","startDate","date","Date","endDate","ref","toast","setToast","closeToast","openToast","employees","state","clients","user","currentUser","auth","id","k","filter","e","membersAdded","setMembersAdded","firstname","lastname","length","undefined","membersAdded_cpy","employees_cpy","CustomMenu","forwardRef","children","style","className","labeledBy","value","setValue","target","Children","toArray","child","toLowerCase","indexOf","addMembers","check","m","toAdd","push","deleteMembers","updateMembers","transformDate","end","tStart","tEnd","splitDate","split","newDateList","reverse","newDate","join","dispatch","onSuccess","values","pmId","Number","statusType","Completed","Suspended","payload","map","status","onHide","then","console","log","catch","error","handleSubmit","handleChange","handleBlur","touched","isValid","errors","fullName","role","height","width"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,SAASC,QAAT,EAAmBC,cAAnB,EAAmCC,cAAnC,QAAyD,iBAAzD;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,WAAT,QAA4B,uBAA5B;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AAC5B,QAAMC,MAAM,GAAGR,GAAG,CAACS,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,IAAAA,WAAW,EAAEX,GAAG,CAACY,MAAJ,GAAaC,QAAb,CAAsB,0BAAtB,CADmB;AAEhCC,IAAAA,MAAM,EAAEd,GAAG,CAACY,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CAFwB;AAGhCE,IAAAA,cAAc,EAAEf,GAAG,CAACY,MAAJ,GAAaC,QAAb,CAAsB,iCAAtB,CAHgB;AAIhCG,IAAAA,kBAAkB,EAAEhB,GAAG,CAACY,MAAJ,EAJY;AAKhCK,IAAAA,QAAQ,EAAEjB,GAAG,CACVkB,MADO,GAEPC,GAFO,CAEH,CAFG,EAEA,yBAFA,EAGPC,SAHO,CAGG,oCAHH,EAIPP,QAJO,CAIE,sBAJF,CALsB;AAUhCQ,IAAAA,IAAI,EAAErB,GAAG,CACNkB,MADG,GAEHC,GAFG,CAEC,CAFD,EAEI,yBAFJ,EAGHC,SAHG,CAGO,gCAHP,EAIHP,QAJG,CAIM,kBAJN,CAV0B;AAehCS,IAAAA,SAAS,EAAEtB,GAAG,CACXuB,IADQ,GAERJ,GAFQ,CAEJ,IAAIK,IAAJ,CAAS,YAAT,CAFI,EAEoB,qCAFpB,EAGRX,QAHQ,CAGC,wBAHD,CAfqB;AAmBhCY,IAAAA,OAAO,EAAEzB,GAAG,CACTuB,IADM,GAENJ,GAFM,CAEFnB,GAAG,CAAC0B,GAAJ,CAAQ,WAAR,CAFE,EAEoB,mCAFpB,EAGNb,QAHM,CAGG,sBAHH;AAnBuB,GAAnB,CAAf;AAwBA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,CAAC,KAAD,CAAlC;;AACA,QAAM2B,UAAU,GAAG,MAAMD,QAAQ,CAAC,KAAD,CAAjC;;AACA,QAAME,SAAS,GAAG,MAAMF,QAAQ,CAAC,IAAD,CAAhC;;AAEA,QAAM;AAAEG,IAAAA;AAAF,MAAgB9B,WAAW,CAAE+B,KAAD,IAAWA,KAAK,CAACD,SAAlB,CAAjC;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAchC,WAAW,CAAE+B,KAAD,IAAWA,KAAK,CAAClB,MAAlB,CAA/B;AACA,QAAM;AAAEoB,IAAAA,IAAI,EAAEC;AAAR,MAAwBlC,WAAW,CAAE+B,KAAD,IAAWA,KAAK,CAACI,IAAlB,CAAzC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASF,WAAf;AACA,QAAMG,CAAC,GAAGP,SAAS,CAACQ,MAAV,CAAkBC,CAAD,IAAOA,CAAC,CAACH,EAAF,KAASA,EAAjC,EAAqC,CAArC,CAAV;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCxC,QAAQ,CAAC,CAC/C;AAAEyC,IAAAA,SAAS,EAAE,EAAb;AAAiBC,IAAAA,QAAQ,EAAE,EAA3B;AAA+BP,IAAAA,EAAE,EAAE,CAAC;AAApC,GAD+C,CAAD,CAAhD;;AAGA,MACEI,YAAY,CAACI,MAAb,KAAwB,CAAxB,IACAJ,YAAY,CAAC,CAAD,CAAZ,CAAgBJ,EAAhB,KAAuB,CAAC,CADxB,IAEAC,CAAC,KAAKQ,SAHR,EAIE;AACA,QAAIC,gBAAgB,GAAG,CAACT,CAAD,CAAvB;AACAI,IAAAA,eAAe,CAACK,gBAAD,CAAf;AACD;;AACD,QAAMC,aAAa,GAAG,CAAC,GAAGjB,SAAJ,CAAtB,CA7C4B,CA+C5B;;AACA,QAAMkB,UAAU,gBAAGhE,KAAK,CAACiE,UAAN,IACjB,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,SAAnB;AAA8B,uBAAmBC;AAAjD,GAAD,EAA+D5B,GAA/D,KAAuE;AAAA;;AACrE,UAAM,CAAC6B,KAAD,EAAQC,QAAR,IAAoBtD,QAAQ,CAAC,EAAD,CAAlC;AAEA,wBACE;AAAA,8BACE,QAAC,IAAD,CAAM,OAAN;AACE,QAAA,SAAS,MADX;AAEE,QAAA,SAAS,EAAC,kBAFZ;AAGE,QAAA,WAAW,EAAC,iBAHd;AAIE,QAAA,QAAQ,EAAGsC,CAAD,IAAOgB,QAAQ,CAAChB,CAAC,CAACiB,MAAF,CAASF,KAAV,CAJ3B;AAKE,QAAA,KAAK,EAAEA,KALT;AAME,QAAA,GAAG,EAAE7B;AANP;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,kBACGzC,KAAK,CAACyE,QAAN,CAAeC,OAAf,CAAuBR,QAAvB,EAAiCZ,MAAjC,CACEqB,KAAD,IACE,CAACL,KAAD,IACAK,KAAK,CAACrD,KAAN,CAAY4C,QAAZ,CACGU,WADH,GAEGC,OAFH,CAEWP,KAAK,CAACM,WAAN,EAFX,KAEmC,CALtC;AADH;AAAA;AAAA;AAAA;AAAA,cATF;AAAA,oBADF;AAqBD,GAzBgB,kCAAnB;;AA4BA,QAAME,UAAU,GAAI1B,EAAD,IAAQ,MAAM;AAC/B,UAAMU,gBAAgB,GAAG,CAAC,GAAGN,YAAJ,CAAzB;AACA,UAAMuB,KAAK,GAAGjB,gBAAgB,CAACR,MAAjB,CAAyB0B,CAAD,IAAOA,CAAC,CAAC5B,EAAF,KAASA,EAAxC,CAAd;AACA,QAAI2B,KAAK,CAACnB,MAAN,KAAiB,CAArB,EAAwB;AACxB,UAAMqB,KAAK,GAAGlB,aAAa,CAACT,MAAd,CAAsBC,CAAD,IAAOA,CAAC,CAACH,EAAF,KAASA,EAArC,EAAyC,CAAzC,CAAd;AACAU,IAAAA,gBAAgB,CAACoB,IAAjB,CAAsBD,KAAtB;AACAxB,IAAAA,eAAe,CAACK,gBAAD,CAAf;AACA;AACD,GARD;;AAUA,QAAMqB,aAAa,GAAI/B,EAAD,IAAQ,MAAM;AAClC,UAAMgC,aAAa,GAAG,CAAC,GAAG5B,YAAJ,EAAkBF,MAAlB,CAA0B0B,CAAD,IAAOA,CAAC,CAAC5B,EAAF,KAASA,EAAzC,CAAtB;AACAK,IAAAA,eAAe,CAAC2B,aAAD,CAAf;AACA;AACD,GAJD;;AAMA,QAAMC,aAAa,GAAG,CAAC/C,IAAD,EAAOgD,GAAP,KAAe;AACnC,UAAMC,MAAM,GAAG,UAAf;AACA,UAAMC,IAAI,GAAG,UAAb;AACA,UAAMC,SAAS,GAAGnD,IAAI,CAACoD,KAAL,CAAW,GAAX,CAAlB;AACA,UAAMC,WAAW,GAAGF,SAAS,CAACG,OAAV,EAApB;;AACA,QAAIN,GAAG,KAAK,CAAZ,EAAe;AACbK,MAAAA,WAAW,CAACT,IAAZ,CAAiBK,MAAjB;AACD,KAFD,MAEO;AACLI,MAAAA,WAAW,CAACT,IAAZ,CAAiBM,IAAjB;AACD;;AACD,UAAMK,OAAO,GAAGF,WAAW,CAACG,IAAZ,CAAiB,GAAjB,CAAhB;AACA,WAAOD,OAAP;AACD,GAZD;;AAcA,QAAME,QAAQ,GAAG7E,WAAW,EAA5B;;AAEA,QAAM8E,SAAS,GAAIC,MAAD,IAAY;AAC5B,UAAMC,IAAI,GAAGC,MAAM,CAACF,MAAM,CAACnE,cAAR,CAAnB;AACA,UAAMsE,UAAU,GAAG;AACjB,eAAS,OADQ;AAEjB,qBAAe,aAFE;AAGjBC,MAAAA,SAAS,EAAE,WAHM;AAIjBC,MAAAA,SAAS,EAAE;AAJM,KAAnB;AAMA,UAAMC,OAAO,GAAG,EAAhB;AACAA,IAAAA,OAAO,CAAC,aAAD,CAAP,GAAyBN,MAAM,CAACvE,WAAhC;AACA6E,IAAAA,OAAO,CAAC,QAAD,CAAP,GAAoB;AAAEnD,MAAAA,EAAE,EAAE+C,MAAM,CAACF,MAAM,CAACpE,MAAR;AAAZ,KAApB;AACA0E,IAAAA,OAAO,CAAC,gBAAD,CAAP,GAA4B;AAAEnD,MAAAA,EAAE,EAAE+C,MAAM,CAACF,MAAM,CAACnE,cAAR;AAAZ,KAA5B;AACAyE,IAAAA,OAAO,CAAC,aAAD,CAAP,GAAyB/C,YAAY,CAClCF,MADsB,CACd0B,CAAD,IAAOmB,MAAM,CAACnB,CAAC,CAAC5B,EAAH,CAAN,KAAiB8C,IADT,EAEtBM,GAFsB,CAEjBxB,CAAD,IAAO;AACV,aAAO;AAAE5B,QAAAA,EAAE,EAAE+C,MAAM,CAACnB,CAAC,CAAC5B,EAAH;AAAZ,OAAP;AACD,KAJsB,CAAzB;AAKAmD,IAAAA,OAAO,CAAC,aAAD,CAAP,GAAyBN,MAAM,CAAClE,kBAAhC;AACAwE,IAAAA,OAAO,CAAC,WAAD,CAAP,GAAuBlB,aAAa,CAACY,MAAM,CAAC5D,SAAR,EAAmB,CAAnB,CAApC;AACAkE,IAAAA,OAAO,CAAC,SAAD,CAAP,GAAqBlB,aAAa,CAACY,MAAM,CAACzD,OAAR,EAAiB,CAAjB,CAAlC;AACA+D,IAAAA,OAAO,CAAC,QAAD,CAAP,GAAoBH,UAAU,CAACH,MAAM,CAACQ,MAAR,CAA9B;AACAnF,IAAAA,KAAK,CAACoF,MAAN;AAGAX,IAAAA,QAAQ,CAAC5E,WAAW,CAACoF,OAAD,CAAZ,CAAR,CACGI,IADH,CACQ,MAAM;AACVZ,MAAAA,QAAQ,CAAC3E,WAAW,EAAZ,CAAR,CACGuF,IADH,CACQ,MAAM;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,OAHH,EAIGC,KAJH,CAIS,MAAM;AACXF,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,OANH;AAOD,KATH,EAUGC,KAVH,CAUUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAlE,MAAAA,SAAS;AACV,KAbH;AAcD,GAtCD;;AAwCA,sBACE;AAAA,4BACA,QAAC,MAAD;AAEE,MAAA,gBAAgB,EAAEtB,MAFpB;AAGE,MAAA,gBAAgB,EAAE,IAHpB;AAIE,MAAA,QAAQ,EAAEyE,SAJZ;AAKE,MAAA,aAAa,EAAE;AACbtE,QAAAA,WAAW,EAAE,EADA;AAEbK,QAAAA,kBAAkB,EAAE,EAFP;AAGbF,QAAAA,MAAM,EAAE,EAHK;AAIbC,QAAAA,cAAc,EAAE,EAJH;AAKb2E,QAAAA,MAAM,EAAE,OALK;AAMbpE,QAAAA,SAAS,EAAE,EANE;AAObG,QAAAA,OAAO,EAAE,EAPI;AAQbR,QAAAA,QAAQ,EAAE,GARG;AASbI,QAAAA,IAAI,EAAE;AATO,OALjB;AAAA,gBAiBG,CAAC;AACA4E,QAAAA,YADA;AAEAC,QAAAA,YAFA;AAGAC,QAAAA,UAHA;AAIAjB,QAAAA,MAJA;AAKAkB,QAAAA,OALA;AAMAC,QAAAA,OANA;AAOAC,QAAAA;AAPA,OAAD,kBASC,QAAC,IAAD;AAAM,QAAA,UAAU,MAAhB;AAAiB,QAAA,QAAQ,EAAEL,YAA3B;AAAA,+BACE,QAAC,KAAD,OAAW1F,KAAX;AAAkB,UAAA,IAAI,EAAC,IAAvB;AAA4B,UAAA,QAAQ,EAAC,QAArC;AAAA,kCACE,QAAC,KAAD,CAAO,MAAP;AAAc,YAAA,WAAW,MAAzB;AAAA,mCACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,KAAD,CAAO,IAAP;AAAA,oCACE,QAAC,GAAD;AAAA,qCACE,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,EAAE,EAAEhB,GAAhB;AAAqB,gBAAA,SAAS,EAAC,aAA/B;AAAA,wCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,kBAAA,IAAI,EAAC,aADP;AAEE,kBAAA,KAAK,EAAE2F,MAAM,CAACvE,WAFhB;AAGE,kBAAA,QAAQ,EAAEuF,YAHZ;AAIE,kBAAA,MAAM,EAAEC,UAJV;AAKE,kBAAA,SAAS,EAAEC,OAAO,CAACzF,WAAR,IAAuB2F,MAAM,CAAC3F;AAL3C;AAAA;AAAA;AAAA;AAAA,wBAFF,eASE,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,kBAAA,IAAI,EAAC,SAA5B;AAAA,4BACG2F,MAAM,CAAC3F;AADV;AAAA;AAAA;AAAA;AAAA,wBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAgBE;AAAA;AAAA;AAAA;AAAA,oBAhBF,eAiBE,QAAC,IAAD;AAAM,cAAA,gBAAgB,EAAC,OAAvB;AAAA,sCACE,QAAC,GAAD;AAAK,gBAAA,QAAQ,EAAC,OAAd;AAAsB,gBAAA,KAAK,EAAC,OAA5B;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,GAAD;AAAA,yCACE,QAAC,IAAD,CAAM,KAAN;AAAY,oBAAA,EAAE,EAAEpB,GAAhB;AAAqB,oBAAA,SAAS,EAAC,YAA/B;AAAA,4CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,IAAD,CAAM,MAAN;AACE,sBAAA,IAAI,EAAC,QADP;AAEE,sBAAA,KAAK,EAAE2F,MAAM,CAACpE,MAFhB;AAGE,sBAAA,QAAQ,EAAEoF,YAHZ;AAIE,sBAAA,MAAM,EAAEC,UAJV;AAKE,sBAAA,SAAS,EAAEC,OAAO,CAACtF,MAAR,IAAkBwF,MAAM,CAACxF,MALtC;AAAA,8CAOE;AAAiB,wBAAA,KAAK,EAAC,EAAvB;AAA0B,wBAAA,QAAQ,MAAlC;AAAA;AAAA,yBAAY,IAAZ;AAAA;AAAA;AAAA;AAAA,8BAPF,EAUGmB,OAAO,CAACwD,GAAR,CAAa3E,MAAD,IAAY;AACvB,4CACE;AAAwB,0BAAA,KAAK,EAAEA,MAAM,CAACuB,EAAtC;AAAA,oCACGvB,MAAM,CAACyF,QAAP,GACC,eADD,GAECzF,MAAM,CAACuB,EAFR,GAGC;AAJJ,2BAAavB,MAAM,CAACuB,EAApB;AAAA;AAAA;AAAA;AAAA,gCADF;AAQD,uBATA,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAFF,eA4BE,QAAC,GAAD;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAY,oBAAA,EAAE,EAAE9C,GAAhB;AAAqB,oBAAA,SAAS,EAAC,UAA/B;AAAA,4CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,IAAD,CAAM,MAAN;AAAa,sBAAA,YAAY,EAAC,WAA1B;AAAsC,sBAAA,QAAQ,MAA9C;AAAA,6CACE;AAAA;AAAA,yBAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAOE,QAAC,IAAD,CAAM,KAAN;AAAY,oBAAA,EAAE,EAAEA,GAAhB;AAAqB,oBAAA,SAAS,EAAC,gBAA/B;AAAA,4CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,IAAD,CAAM,MAAN;AACE,sBAAA,IAAI,EAAC,gBADP;AAEE,sBAAA,KAAK,EAAE2F,MAAM,CAACnE,cAFhB;AAGE,sBAAA,QAAQ,EAAEmF,YAHZ;AAIE,sBAAA,MAAM,EAAEC,UAJV;AAKE,sBAAA,SAAS,EACPC,OAAO,CAACrF,cAAR,IAA0BuF,MAAM,CAACvF,cANrC;AAAA,8CASE;AAAkB,wBAAA,KAAK,EAAC,EAAxB;AAA2B,wBAAA,QAAQ,MAAnC;AAAA;AAAA,yBAAY,KAAZ;AAAA;AAAA;AAAA;AAAA,8BATF,EAYGgB,SAAS,CACPQ,MADF,CACUC,CAAD,IAAOA,CAAC,CAACgE,IAAF,KAAW,CAAX,IAAgBhE,CAAC,CAACH,EAAF,KAASA,EADzC,EAEEoD,GAFF,CAEOjD,CAAD,IAAO;AACV,4CACE;AAAmB,0BAAA,KAAK,EAAEA,CAAC,CAACH,EAA5B;AAAA,oCACGG,CAAC,CAACG,SAAF,GACC,GADD,GAECH,CAAC,CAACI,QAFH,GAGC,iBAHD,GAICJ,CAAC,CAACH,EAJH,GAKC;AANJ,2BAAaG,CAAC,CAACH,EAAf;AAAA;AAAA;AAAA;AAAA,gCADF;AAUD,uBAbF,CAZH,EA0BGN,SAAS,CACPQ,MADF,CACUC,CAAD,IAAOA,CAAC,CAACgE,IAAF,KAAW,CAAX,IAAgBhE,CAAC,CAACH,EAAF,KAASA,EADzC,EAEEoD,GAFF,CAEOjD,CAAD,IAAO;AACV,4CACE;AAAmB,0BAAA,KAAK,EAAEA,CAAC,CAACH,EAA5B;AAAA,oCACGG,CAAC,CAACG,SAAF,GACC,GADD,GAECH,CAAC,CAACI,QAFH,GAGC,iBAHD,GAICJ,CAAC,CAACH,EAJH,GAKC;AANJ,2BAAaG,CAAC,CAACH,EAAf;AAAA;AAAA;AAAA;AAAA,gCADF;AAUD,uBAbF,CA1BH;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPF;AAAA;AAAA;AAAA;AAAA;AAAA,wBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAmFE,QAAC,GAAD;AAAK,gBAAA,QAAQ,EAAC,MAAd;AAAqB,gBAAA,KAAK,EAAC,MAA3B;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,GAAD;AAAA,yCACE,QAAC,IAAD,CAAM,KAAN;AAAY,oBAAA,SAAS,EAAC,aAAtB;AAAA,2CACE,QAAC,cAAD;AACE,sBAAA,KAAK,EAAC,8BADR;AAEE,sBAAA,OAAO,EAAC,WAFV;AAAA,6CAKE,QAAC,QAAD,CAAU,IAAV;AAAe,wBAAA,EAAE,EAAEY,UAAnB;AAAA,kCACGlB,SAAS,CAAC0D,GAAV,CAAejD,CAAD,IAAO;AACpB,8CACE,QAAC,QAAD,CAAU,IAAV;AACE,4BAAA,QAAQ,EAAEA,CAAC,CAACH,EADd;AAEE,4BAAA,OAAO,EAAE0B,UAAU,CAACvB,CAAC,CAACH,EAAH,CAFrB;AAAA,sCAIGG,CAAC,CAACG,SAAF,GACC,GADD,GAECH,CAAC,CAACI,QAFH,GAGC,iBAHD,GAICJ,CAAC,CAACH,EAJH,GAKC;AATJ;AAAA;AAAA;AAAA;AAAA,kCADF;AAaD,yBAdA;AADH;AAAA;AAAA;AAAA;AAAA;AALF,uBAGM,MAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAFF,eA6BE;AAAA;AAAA;AAAA;AAAA,wBA7BF,eA8BE,QAAC,GAAD;AAAA,yCACE,QAAC,IAAD,CAAM,KAAN;AAAY,oBAAA,EAAE,EAAE9C,GAAhB;AAAqB,oBAAA,SAAS,EAAC,aAA/B;AAAA,4CACE,QAAC,IAAD,CAAM,KAAN;AAAA,6CACE;AAAA,qDAAuBkD,YAAY,CAACI,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BADF,eAIE;AAAA,gCACGJ,YAAY,CAACgD,GAAb,CAAkBxB,CAAD,IAAO;AACvB,4CACE;AAAA,qCACGA,CAAC,CAACtB,SAAF,GACC,GADD,GAECsB,CAAC,CAACrB,QAFH,GAGC,iBAHD,GAICqB,CAAC,CAAC5B,EAJH,GAKC,KANJ,eAOE,QAAC,MAAD;AACE,4BAAA,SAAS,EAAC,iBADZ;AAEE,4BAAA,OAAO,EAAC,gBAFV;AAGE,4BAAA,IAAI,EAAC,IAHP;AAIE,4BAAA,OAAO,EAAE+B,aAAa,CAACH,CAAC,CAAC5B,EAAH,CAJxB;AAKE,4BAAA,QAAQ,EAAE4B,CAAC,CAAC5B,EAAF,KAASA,EALrB;AAAA,mDAOE;AAAG,8BAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,kCAPF;AAAA,2BAAS4B,CAAC,CAAC5B,EAAX;AAAA;AAAA;AAAA;AAAA,gCADF;AAmBD,uBApBA;AADH;AAAA;AAAA;AAAA;AAAA,4BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnFF,eAgKE,QAAC,GAAD;AAAK,gBAAA,QAAQ,EAAC,WAAd;AAA0B,gBAAA,KAAK,EAAC,WAAhC;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,GAAD;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAY,oBAAA,EAAE,EAAE9C,GAAhB;AAAqB,oBAAA,SAAS,EAAC,mBAA/B;AAAA,4CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,IAAD,CAAM,MAAN;AAAa,sBAAA,YAAY,EAAC,WAA1B;AAAA,6CACE;AAAA;AAAA,yBAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAQE,QAAC,IAAD,CAAM,KAAN;AAAY,oBAAA,EAAE,EAAEA,GAAhB;AAAqB,oBAAA,SAAS,EAAC,iBAA/B;AAAA,4CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,IAAD,CAAM,MAAN;AAAa,sBAAA,YAAY,EAAC,WAA1B;AAAA,6CACE;AAAA;AAAA,yBAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,0BARF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhKF,eAoLE,QAAC,GAAD;AAAK,gBAAA,QAAQ,EAAC,UAAd;AAAyB,gBAAA,KAAK,EAAC,UAA/B;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,iBAAtB;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,aAAD;AAAe,oBAAA,SAAS,EAAC,qBAAzB;AAAA,4CACE,QAAC,IAAD,CAAM,OAAN;AACE,sBAAA,EAAE,EAAC,UADL;AAEE,sBAAA,WAAW,EAAC,sBAFd;AAGE,sBAAA,KAAK,EAAE;AAAEkH,wBAAAA,MAAM,EAAE;AAAV,uBAHT;AAIE,sBAAA,IAAI,EAAC,oBAJP;AAKE,sBAAA,KAAK,EAAEvB,MAAM,CAAClE,kBALhB;AAME,sBAAA,QAAQ,EAAEkF,YANZ;AAOE,sBAAA,MAAM,EAAEC,UAPV;AAQE,sBAAA,SAAS,EACPC,OAAO,CAACpF,kBAAR,IACAsF,MAAM,CAACtF;AAVX;AAAA;AAAA;AAAA;AAAA,4BADF,eAcE,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,sBAAA,IAAI,EAAC,SAA5B;AAAA,gCACGsF,MAAM,CAACtF;AADV;AAAA;AAAA;AAAA;AAAA,4BAdF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAuBE,QAAC,GAAD;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAY,oBAAA,EAAE,EAAEzB,GAAhB;AAAqB,oBAAA,SAAS,EAAC,UAA/B;AAAA,4CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,sBAAA,IAAI,EAAC,UADP;AAEE,sBAAA,KAAK,EAAE2F,MAAM,CAACjE,QAFhB;AAGE,sBAAA,QAAQ,EAAEiF,YAHZ;AAIE,sBAAA,MAAM,EAAEC,UAJV;AAKE,sBAAA,SAAS,EAAEC,OAAO,CAACnF,QAAR,IAAoBqF,MAAM,CAACrF;AALxC;AAAA;AAAA;AAAA;AAAA,4BAFF,eASE,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,sBAAA,IAAI,EAAC,SAA5B;AAAA,gCACGqF,MAAM,CAACrF;AADV;AAAA;AAAA;AAAA;AAAA,4BATF;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAcE,QAAC,IAAD,CAAM,KAAN;AAAY,oBAAA,EAAE,EAAE1B,GAAhB;AAAqB,oBAAA,SAAS,EAAC,eAA/B;AAAA,4CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,sBAAA,IAAI,EAAC,MADP;AAEE,sBAAA,KAAK,EAAE2F,MAAM,CAAC7D,IAFhB;AAGE,sBAAA,QAAQ,EAAE6E,YAHZ;AAIE,sBAAA,MAAM,EAAEC,UAJV;AAKE,sBAAA,SAAS,EAAEC,OAAO,CAAC/E,IAAR,IAAgBiF,MAAM,CAACjF;AALpC;AAAA;AAAA;AAAA;AAAA,4BAFF,eASE,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,sBAAA,IAAI,EAAC,SAA5B;AAAA,gCACGiF,MAAM,CAACjF;AADV;AAAA;AAAA;AAAA;AAAA,4BATF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAdF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAvBF,eAmDE,QAAC,GAAD;AAAA,yCACE,QAAC,IAAD,CAAM,KAAN;AAAY,oBAAA,EAAE,EAAE9B,GAAhB;AAAqB,oBAAA,SAAS,EAAC,eAA/B;AAAA,4CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,IAAD,CAAM,MAAN;AACE,sBAAA,IAAI,EAAC,QADP;AAEE,sBAAA,KAAK,EAAE2F,MAAM,CAACQ,MAFhB;AAGE,sBAAA,QAAQ,EAAEQ,YAHZ;AAIE,sBAAA,MAAM,EAAEC,UAJV;AAAA,8CAME;AAAA;AAAA,yBAAY,IAAZ;AAAA;AAAA;AAAA;AAAA,8BANF,eAOE;AAAA;AAAA,yBAAY,IAAZ;AAAA;AAAA;AAAA;AAAA,8BAPF,eAQE;AAAA;AAAA,yBAAY,GAAZ;AAAA;AAAA;AAAA;AAAA,8BARF,eASE;AAAA;AAAA,yBAAY,GAAZ;AAAA;AAAA;AAAA;AAAA,8BATF;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAnDF;AAAA;AAAA;AAAA;AAAA;AAAA,sBApLF,eAwPE,QAAC,GAAD;AAAK,gBAAA,QAAQ,EAAC,OAAd;AAAsB,gBAAA,KAAK,EAAC,OAA5B;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,GAAD;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAY,oBAAA,EAAE,EAAE5G,GAAhB;AAAqB,oBAAA,SAAS,EAAC,WAA/B;AAAA,4CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,sBAAA,IAAI,EAAC,MADP;AAEE,sBAAA,IAAI,EAAC,WAFP;AAGE,sBAAA,KAAK,EAAE2F,MAAM,CAAC5D,SAHhB;AAIE,sBAAA,QAAQ,EAAE4E,YAJZ;AAKE,sBAAA,MAAM,EAAEC,UALV;AAME,sBAAA,SAAS,EAAEC,OAAO,CAAC9E,SAAR,IAAqBgF,MAAM,CAAChF;AANzC;AAAA;AAAA;AAAA;AAAA,4BAFF,eAUE,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,sBAAA,IAAI,EAAC,SAA5B;AAAA,gCACGgF,MAAM,CAAChF;AADV;AAAA;AAAA;AAAA;AAAA,4BAVF;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAeE,QAAC,IAAD,CAAM,KAAN;AAAY,oBAAA,EAAE,EAAE/B,GAAhB;AAAqB,oBAAA,SAAS,EAAC,SAA/B;AAAA,4CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,sBAAA,IAAI,EAAC,MADP;AAEE,sBAAA,IAAI,EAAC,SAFP;AAGE,sBAAA,KAAK,EAAE2F,MAAM,CAACzD,OAHhB;AAIE,sBAAA,QAAQ,EAAEyE,YAJZ;AAKE,sBAAA,MAAM,EAAEC,UALV;AAME,sBAAA,SAAS,EAAEC,OAAO,CAAC3E,OAAR,IAAmB6E,MAAM,CAAC7E;AANvC;AAAA;AAAA;AAAA;AAAA,4BAFF,eAUE,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,sBAAA,IAAI,EAAC,SAA5B;AAAA,gCACG6E,MAAM,CAAC7E;AADV;AAAA;AAAA;AAAA;AAAA,4BAVF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAfF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAxPF,eAyRE,QAAC,GAAD;AAAK,gBAAA,QAAQ,EAAC,YAAd;AAA2B,gBAAA,KAAK,EAAC,YAAjC;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAzRF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAwTE,QAAC,KAAD,CAAO,MAAP;AAAA,oCACE,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,SADV;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,OAAO,EAAEwE,YAHX;AAIE,cAAA,QAAQ,EAAEf,MAAM,CAACvE,WAAP,CAAmBkC,MAAnB,KAA8B,CAA9B,IAAmC,CAACwD,OAJhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eASE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,WAAhB;AAA4B,cAAA,OAAO,EAAE9F,KAAK,CAACoF,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxTF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AA1BJ,OACM,QADN;AAAA;AAAA;AAAA;AAAA,YADA,eAqWA,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC,YAAzB;AAAA,6BACA,QAAC,KAAD;AACA,QAAA,SAAS,EAAC,aADV;AAEA,QAAA,EAAE,EAAC,QAFH;AAGA,QAAA,KAAK,EAAE;AAAEe,UAAAA,KAAK,EAAE;AAAT,SAHP;AAIA,QAAA,IAAI,EAAE/E,KAJN;AAKA,QAAA,OAAO,EAAEE,UALT;AAMA,QAAA,QAAQ,EAAC,eANT;AAOA,QAAA,KAAK,EAAE,IAPP;AAQA,QAAA,QAAQ,MARR;AAAA,gCAUA,QAAC,KAAD,CAAO,MAAP;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVA,eAaA,QAAC,KAAD,CAAO,IAAP;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YArWA;AAAA,kBADF;AA2XD,CA/gBD;;IAAMvB,U;UA6BkBL,W,EACFA,W,EACUA,W,EA2EbE,W;;;KA1GbG,U;AAihBN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport { Dropdown, DropdownButton, ToastContainer } from \"react-bootstrap\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Toast } from \"react-bootstrap\";\nimport FileUpload from \"../FileUpload\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addProjects } from \"../../actions/project\";\nimport { getProjects } from \"../../actions/project\";\n\nconst AddProject = (props) => {\n  const schema = yup.object().shape({\n    projectName: yup.string().required(\"Project Name is required\"),\n    client: yup.string().required(\"Please select a Client\"),\n    projectManager: yup.string().required(\"Please select a Project Manager\"),\n    projectDescription: yup.string(),\n    duration: yup\n      .number()\n      .min(0, \"Minumim value must be 0\")\n      .typeError(\"Duration must be a numerical value\")\n      .required(\"Duration is required\"),\n    cost: yup\n      .number()\n      .min(0, \"Minumim value must be 0\")\n      .typeError(\"Cost must be a numerical value\")\n      .required(\"Cost is required\"),\n    startDate: yup\n      .date()\n      .min(new Date(\"01-01-2000\"), \"Start Date must be after 01-01-2000\")\n      .required(\"Start Date is required\"),\n    endDate: yup\n      .date()\n      .min(yup.ref(\"startDate\"), \"Due Date must be after Start Date\")\n      .required(\"Due Date is required\"),\n  });\n  const [toast, setToast] = useState(false);\n  const closeToast = () => setToast(false);\n  const openToast = () => setToast(true);\n\n  const { employees } = useSelector((state) => state.employees);\n  const { clients } = useSelector((state) => state.client);\n  const { user: currentUser } = useSelector((state) => state.auth);\n  const { id } = currentUser;\n  const k = employees.filter((e) => e.id === id)[0];\n  const [membersAdded, setMembersAdded] = useState([\n    { firstname: \"\", lastname: \"\", id: -1 },\n  ]);\n  if (\n    membersAdded.length === 1 &&\n    membersAdded[0].id === -1 &&\n    k !== undefined\n  ) {\n    let membersAdded_cpy = [k];\n    setMembersAdded(membersAdded_cpy);\n  }\n  const employees_cpy = [...employees];\n\n  // Dropdown needs access to the DOM of the Menu to measure it\n  const CustomMenu = React.forwardRef(\n    ({ children, style, className, \"aria-labelledby\": labeledBy }, ref) => {\n      const [value, setValue] = useState(\"\");\n\n      return (\n        <>\n          <Form.Control\n            autoFocus\n            className=\"mx-3 my-2 w-auto\"\n            placeholder=\"Type to find...\"\n            onChange={(e) => setValue(e.target.value)}\n            value={value}\n            ref={ref}\n          />\n          <ul className=\"list-unstyled\">\n            {React.Children.toArray(children).filter(\n              (child) =>\n                !value ||\n                child.props.children\n                  .toLowerCase()\n                  .indexOf(value.toLowerCase()) >= 0\n            )}\n          </ul>\n        </>\n      );\n    }\n  );\n\n  const addMembers = (id) => () => {\n    const membersAdded_cpy = [...membersAdded];\n    const check = membersAdded_cpy.filter((m) => m.id === id);\n    if (check.length !== 0) return;\n    const toAdd = employees_cpy.filter((e) => e.id === id)[0];\n    membersAdded_cpy.push(toAdd);\n    setMembersAdded(membersAdded_cpy);\n    return;\n  };\n\n  const deleteMembers = (id) => () => {\n    const updateMembers = [...membersAdded].filter((m) => m.id !== id);\n    setMembersAdded(updateMembers);\n    return;\n  };\n\n  const transformDate = (date, end) => {\n    const tStart = \"00:00:00\";\n    const tEnd = \"23:59:00\";\n    const splitDate = date.split(\"-\");\n    const newDateList = splitDate.reverse();\n    if (end === 0) {\n      newDateList.push(tStart);\n    } else {\n      newDateList.push(tEnd);\n    }\n    const newDate = newDateList.join(\"-\");\n    return newDate;\n  };\n\n  const dispatch = useDispatch();\n\n  const onSuccess = (values) => {\n    const pmId = Number(values.projectManager);\n    const statusType = {\n      \"To-Do\": \"TO_DO\",\n      \"In Progress\": \"IN_PROGRESS\",\n      Completed: \"COMPLETED\",\n      Suspended: \"SUSPENDED\",\n    };\n    const payload = {};\n    payload[\"projectName\"] = values.projectName;\n    payload[\"client\"] = { id: Number(values.client) };\n    payload[\"projectManager\"] = { id: Number(values.projectManager) };\n    payload[\"teamMembers\"] = membersAdded\n      .filter((m) => Number(m.id) !== pmId)\n      .map((m) => {\n        return { id: Number(m.id) };\n      });\n    payload[\"description\"] = values.projectDescription;\n    payload[\"startDate\"] = transformDate(values.startDate, 0);\n    payload[\"endDate\"] = transformDate(values.endDate, 1);\n    payload[\"status\"] = statusType[values.status];\n    props.onHide();\n\n      \n    dispatch(addProjects(payload))\n      .then(() => {\n        dispatch(getProjects())\n          .then(() => {\n            console.log(\"Projects fetched successfully\");\n          })\n          .catch(() => {\n            console.log(\"Unable to fetch projects\");\n          });\n      })\n      .catch((error) => {\n        console.log(error);\n        openToast();\n      });\n  };\n\n  return (\n    <>\n    <Formik\n      key=\"Formik\"\n      validationSchema={schema}\n      validateOnChange={true}\n      onSubmit={onSuccess}\n      initialValues={{\n        projectName: \"\",\n        projectDescription: \"\",\n        client: \"\",\n        projectManager: \"\",\n        status: \"To-Do\",\n        startDate: \"\",\n        endDate: \"\",\n        duration: 0.0,\n        cost: 0.0,\n      }}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Modal {...props} size=\"lg\" backdrop=\"static\">\n            <Modal.Header closeButton>\n              <Modal.Title>Add Project</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n              <Row>\n                <Form.Group as={Col} controlId=\"projectName\">\n                  <Form.Label>Project Name</Form.Label>\n                  <Form.Control\n                    name=\"projectName\"\n                    value={values.projectName}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    isInvalid={touched.projectName && errors.projectName}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.projectName}\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Row>\n              <br />\n              <Tabs defaultActiveKey=\"basic\">\n                <Tab eventKey=\"basic\" title=\"Basic\">\n                  <br />\n                  <Row>\n                    <Form.Group as={Col} controlId=\"clientName\">\n                      <Form.Label>Client Name</Form.Label>\n                      <Form.Select\n                        name=\"client\"\n                        value={values.client}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.client && errors.client}\n                      >\n                        <option key=\"SC\" value=\"\" disabled>\n                          Select Client\n                        </option>\n                        {clients.map((client) => {\n                          return (\n                            <option key={client.id} value={client.id}>\n                              {client.fullName +\n                                \" (Client ID: \" +\n                                client.id +\n                                \")\"}\n                            </option>\n                          );\n                        })}\n                      </Form.Select>\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Group as={Col} controlId=\"teamLead\">\n                      <Form.Label>Team Lead</Form.Label>\n                      <Form.Select defaultValue=\"Choose...\" disabled>\n                        <option key=\"NA\">---</option>\n                      </Form.Select>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"projectManager\">\n                      <Form.Label>Project Manager</Form.Label>\n                      <Form.Select\n                        name=\"projectManager\"\n                        value={values.projectManager}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          touched.projectManager && errors.projectManager\n                        }\n                      >\n                        <option key=\"SPM\" value=\"\" disabled>\n                          Select Project Manager\n                        </option>\n                        {employees\n                          .filter((e) => e.role === 1 && e.id === id)\n                          .map((e) => {\n                            return (\n                              <option key={e.id} value={e.id}>\n                                {e.firstname +\n                                  \" \" +\n                                  e.lastname +\n                                  \" (Employee ID: \" +\n                                  e.id +\n                                  \")\"}\n                              </option>\n                            );\n                          })}\n                        {employees\n                          .filter((e) => e.role === 1 && e.id !== id)\n                          .map((e) => {\n                            return (\n                              <option key={e.id} value={e.id}>\n                                {e.firstname +\n                                  \" \" +\n                                  e.lastname +\n                                  \" (Employee ID: \" +\n                                  e.id +\n                                  \")\"}\n                              </option>\n                            );\n                          })}\n                      </Form.Select>\n                    </Form.Group>\n                  </Row>\n                </Tab>\n\n                <Tab eventKey=\"team\" title=\"Team\">\n                  <br />\n                  <Row>\n                    <Form.Group controlId=\"teamMembers\">\n                      <DropdownButton\n                        title=\"Search and Add Team Members \"\n                        variant=\"secondary\"\n                        key=\"down\"\n                      >\n                        <Dropdown.Menu as={CustomMenu}>\n                          {employees.map((e) => {\n                            return (\n                              <Dropdown.Item\n                                eventKey={e.id}\n                                onClick={addMembers(e.id)}\n                              >\n                                {e.firstname +\n                                  \" \" +\n                                  e.lastname +\n                                  \" (Employee ID: \" +\n                                  e.id +\n                                  \")\"}\n                              </Dropdown.Item>\n                            );\n                          })}\n                        </Dropdown.Menu>\n                      </DropdownButton>\n                    </Form.Group>\n                  </Row>\n                  <br />\n                  <Row>\n                    <Form.Group as={Col} controlId=\"teamMembers\">\n                      <Form.Label>\n                        <strong>Team Members: {membersAdded.length}</strong>\n                      </Form.Label>\n                      <ul>\n                        {membersAdded.map((m) => {\n                          return (\n                            <li key={m.id}>\n                              {m.firstname +\n                                \" \" +\n                                m.lastname +\n                                \" (Employee ID: \" +\n                                m.id +\n                                \")  \"}\n                              <Button\n                                className=\"m-0 p- border-0\"\n                                variant=\"outline-danger\"\n                                size=\"sm\"\n                                onClick={deleteMembers(m.id)}\n                                disabled={m.id === id}\n                              >\n                                <i class=\"bi bi-x-lg\"></i>\n                              </Button>\n                            </li>\n                          );\n                        })}\n                      </ul>\n                      {/* {membersAdded.map((m) => {\n                        return (\n                          <Form.Check\n                            type=\"checkbox\"\n                            label={\n                              m.firstname +\n                              \" \" +\n                              m.lastname +\n                              \" (Employee ID: \" +\n                              m.id +\n                              \")\"\n                            }\n                          />\n                        );\n                      })} */}\n                    </Form.Group>\n                  </Row>\n                </Tab>\n\n                <Tab eventKey=\"approvals\" title=\"Approvals\">\n                  <br />\n                  <Row>\n                    <Form.Group as={Col} controlId=\"timeSheetApproval\">\n                      <Form.Label>Timesheet Approval Type</Form.Label>\n                      <Form.Select defaultValue=\"Choose...\">\n                        <option key=\"TL\">Team Lead</option>\n                        {/* <option>Project Manager</option> */}\n                      </Form.Select>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"expenseApproval\">\n                      <Form.Label>Expense Approval Type</Form.Label>\n                      <Form.Select defaultValue=\"Choose...\">\n                        <option key=\"PM\">Project Manager</option>\n                        {/* <option>Team Lead</option> */}\n                      </Form.Select>\n                    </Form.Group>\n                  </Row>\n                </Tab>\n\n                <Tab eventKey=\"advanced\" title=\"Advanced\">\n                  <br />\n                  <Form.Group controlId=\"projDescription\">\n                    <Form.Label>Project Description</Form.Label>\n                    <FloatingLabel controlId=\"projDescriptionText\">\n                      <Form.Control\n                        as=\"textarea\"\n                        placeholder=\"Leave a comment here\"\n                        style={{ height: \"100px\" }}\n                        name=\"projectDescription\"\n                        value={values.projectDescription}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          touched.projectDescription &&\n                          errors.projectDescription\n                        }\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.projectDescription}\n                      </Form.Control.Feedback>\n                    </FloatingLabel>\n                  </Form.Group>\n                  <Row>\n                    <Form.Group as={Col} controlId=\"duration\">\n                      <Form.Label>Duration (Hours)</Form.Label>\n                      <Form.Control\n                        name=\"duration\"\n                        value={values.duration}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.duration && errors.duration}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.duration}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"estimatedCost\">\n                      <Form.Label>Project Estimated Cost (Rs.)</Form.Label>\n                      <Form.Control\n                        name=\"cost\"\n                        value={values.cost}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.cost && errors.cost}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.cost}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Group as={Col} controlId=\"projectStatus\">\n                      <Form.Label>Project Status</Form.Label>\n                      <Form.Select\n                        name=\"status\"\n                        value={values.status}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      >\n                        <option key=\"TD\">To-Do</option>\n                        <option key=\"IP\">In Progress</option>\n                        <option key=\"S\">Suspended</option>\n                        <option key=\"C\">Completed</option>\n                      </Form.Select>\n                    </Form.Group>\n                  </Row>\n                </Tab>\n                <Tab eventKey=\"dates\" title=\"Dates\">\n                  <br />\n                  <Row>\n                    <Form.Group as={Col} controlId=\"startDate\">\n                      <Form.Label>Start Date</Form.Label>\n                      <Form.Control\n                        type=\"date\"\n                        name=\"startDate\"\n                        value={values.startDate}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.startDate && errors.startDate}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.startDate}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"dueDate\">\n                      <Form.Label>Due Date</Form.Label>\n                      <Form.Control\n                        type=\"date\"\n                        name=\"endDate\"\n                        value={values.endDate}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.endDate && errors.endDate}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.endDate}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Row>\n                </Tab>\n                <Tab eventKey=\"attachment\" title=\"Attachment\">\n                  <br />\n                  <FileUpload />\n                  {/* <FileUpload name=\"demo[]\" url=\"./upload\" /> */}\n                  {/* https://www.primefaces.org/primereact/showcase/#/fileupload */}\n                </Tab>\n              </Tabs>\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button\n                variant=\"success\"\n                type=\"submit\"\n                onClick={handleSubmit}\n                disabled={values.projectName.length === 0 || !isValid}\n              >\n                Add Project\n              </Button>\n              <Button variant=\"secondary\" onClick={props.onHide}>\n                Close\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </Form>\n      )}\n    </Formik>\n    <ToastContainer position=\"top-center\">\n    <Toast\n    className=\"text-center\"\n    bg=\"danger\"\n    style={{ width: \"18rem\" }}\n    show={toast}\n    onClose={closeToast}\n    position=\"middle-center\"\n    delay={3000}\n    autohide\n  >\n    <Toast.Header>\n      <strong className=\"me-auto\">ERROR!</strong>\n    </Toast.Header>\n    <Toast.Body>\n      <h6>Project Could NOT Be Added!</h6>\n    </Toast.Body>\n  </Toast>\n  </ToastContainer>\n  </>\n  );\n};\n\nexport default AddProject;\n"]},"metadata":{},"sourceType":"module"}