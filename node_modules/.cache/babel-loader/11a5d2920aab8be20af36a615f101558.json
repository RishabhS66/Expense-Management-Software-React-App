{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { dequal } from 'dequal';\n\nfunction checkDeps(deps) {\n  if (!deps || !deps.length) {\n    throw new Error('useDeepCompareEffect should not be used with no dependencies. Use React.useEffect instead.');\n  }\n\n  if (deps.every(isPrimitive)) {\n    throw new Error('useDeepCompareEffect should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n  }\n}\n\nfunction isPrimitive(val) {\n  return val == null || /^[sbn]/.test(typeof val);\n}\n\nfunction useDeepCompareMemoize(value) {\n  var ref = useRef();\n  var signalRef = useRef(0);\n\n  if (!dequal(value, ref.current)) {\n    ref.current = value;\n    signalRef.current += 1;\n  }\n\n  return [signalRef.current];\n}\n\nfunction useDeepCompareEffect(callback, dependencies) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkDeps(dependencies);\n  } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n  return useEffect(callback, useDeepCompareMemoize(dependencies));\n}\n\nfunction useDeepCompareEffectNoCheck(callback, dependencies) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useEffect(callback, useDeepCompareMemoize(dependencies));\n}\n\nexport default useDeepCompareEffect;\nexport { useDeepCompareEffectNoCheck };","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/node_modules/use-deep-compare-effect/dist/use-deep-compare-effect.esm.js"],"names":["useEffect","useRef","dequal","checkDeps","deps","length","Error","every","isPrimitive","val","test","useDeepCompareMemoize","value","ref","signalRef","current","useDeepCompareEffect","callback","dependencies","process","env","NODE_ENV","useDeepCompareEffectNoCheck"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,MAAI,CAACA,IAAD,IAAS,CAACA,IAAI,CAACC,MAAnB,EAA2B;AACzB,UAAM,IAAIC,KAAJ,CAAU,4FAAV,CAAN;AACD;;AAED,MAAIF,IAAI,CAACG,KAAL,CAAWC,WAAX,CAAJ,EAA6B;AAC3B,UAAM,IAAIF,KAAJ,CAAU,uHAAV,CAAN;AACD;AACF;;AAED,SAASE,WAAT,CAAqBC,GAArB,EAA0B;AACxB,SAAOA,GAAG,IAAI,IAAP,IAAe,SAASC,IAAT,CAAc,OAAOD,GAArB,CAAtB;AACD;;AAED,SAASE,qBAAT,CAA+BC,KAA/B,EAAsC;AACpC,MAAIC,GAAG,GAAGZ,MAAM,EAAhB;AACA,MAAIa,SAAS,GAAGb,MAAM,CAAC,CAAD,CAAtB;;AAEA,MAAI,CAACC,MAAM,CAACU,KAAD,EAAQC,GAAG,CAACE,OAAZ,CAAX,EAAiC;AAC/BF,IAAAA,GAAG,CAACE,OAAJ,GAAcH,KAAd;AACAE,IAAAA,SAAS,CAACC,OAAV,IAAqB,CAArB;AACD;;AAED,SAAO,CAACD,SAAS,CAACC,OAAX,CAAP;AACD;;AAED,SAASC,oBAAT,CAA8BC,QAA9B,EAAwCC,YAAxC,EAAsD;AACpD,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzClB,IAAAA,SAAS,CAACe,YAAD,CAAT;AACD,GAHmD,CAGlD;;;AAGF,SAAOlB,SAAS,CAACiB,QAAD,EAAWN,qBAAqB,CAACO,YAAD,CAAhC,CAAhB;AACD;;AAED,SAASI,2BAAT,CAAqCL,QAArC,EAA+CC,YAA/C,EAA6D;AAC3D;AACA,SAAOlB,SAAS,CAACiB,QAAD,EAAWN,qBAAqB,CAACO,YAAD,CAAhC,CAAhB;AACD;;AAED,eAAeF,oBAAf;AACA,SAASM,2BAAT","sourcesContent":["import { useEffect, useRef } from 'react';\nimport { dequal } from 'dequal';\n\nfunction checkDeps(deps) {\n  if (!deps || !deps.length) {\n    throw new Error('useDeepCompareEffect should not be used with no dependencies. Use React.useEffect instead.');\n  }\n\n  if (deps.every(isPrimitive)) {\n    throw new Error('useDeepCompareEffect should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n  }\n}\n\nfunction isPrimitive(val) {\n  return val == null || /^[sbn]/.test(typeof val);\n}\n\nfunction useDeepCompareMemoize(value) {\n  var ref = useRef();\n  var signalRef = useRef(0);\n\n  if (!dequal(value, ref.current)) {\n    ref.current = value;\n    signalRef.current += 1;\n  }\n\n  return [signalRef.current];\n}\n\nfunction useDeepCompareEffect(callback, dependencies) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkDeps(dependencies);\n  } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n  return useEffect(callback, useDeepCompareMemoize(dependencies));\n}\n\nfunction useDeepCompareEffectNoCheck(callback, dependencies) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useEffect(callback, useDeepCompareMemoize(dependencies));\n}\n\nexport default useDeepCompareEffect;\nexport { useDeepCompareEffectNoCheck };\n"]},"metadata":{},"sourceType":"module"}