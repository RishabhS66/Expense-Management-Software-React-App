{"ast":null,"code":"var _jsxFileName = \"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Employees.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Badge, Container, Card, Col, Navbar, Row } from \"react-bootstrap\";\nimport { getEmployees } from \"../actions/employees\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Employees = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getEmployees()).then(() => {\n      console.log(\"Employees fetched successfully\");\n    }).catch(() => {\n      console.log(\"Unable to fetch employees\");\n    });\n  }, [dispatch]);\n  const {\n    employees\n  } = useSelector(state => state.employees);\n  console.log(employees);\n  const empRole = {\n    0: \"Software Developer Engineer\",\n    1: \"Project Manager\",\n    2: \"Administrator\"\n  };\n  const roleType = {\n    0: \"info\",\n    1: \"success\",\n    2: \"danger\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      expand: \"lg\",\n      bg: \"light\",\n      children: /*#__PURE__*/_jsxDEV(Navbar.Text, {\n        children: [\"\\xA0 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Dashboard : List of Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-2 px-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 3,\n        className: \"g-4 mx-md-n5 text-center justify-content-center\",\n        children: employees.map(e => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            className: \"px-md-5 align-center\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: \"18rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"bi bi-file-person\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" \" + e.firstname + \" \" + e.lastname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Email:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 23\n                  }, this), \" \", e.email]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Role:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 23\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(Badge, {\n                    pill: true,\n                    bg: roleType[e.role],\n                    children: empRole[e.role]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, e.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Employees, \"OyezGohjyedJkqOTt58iyKH3Hn8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Employees;\nexport default Employees;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Employees.js"],"names":["React","useDispatch","useEffect","useSelector","Badge","Container","Card","Col","Navbar","Row","getEmployees","Employees","dispatch","then","console","log","catch","employees","state","empRole","roleType","map","e","width","firstname","lastname","email","role","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Badge, Container, Card, Col, Navbar, Row } from \"react-bootstrap\";\nimport { getEmployees } from \"../actions/employees\";\n\nconst Employees = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getEmployees())\n      .then(() => {\n        console.log(\"Employees fetched successfully\");\n      })\n      .catch(() => {\n        console.log(\"Unable to fetch employees\");\n      });\n  }, [dispatch]);\n  const { employees } = useSelector((state) => state.employees);\n  console.log(employees);\n  const empRole = {\n    0: \"Software Developer Engineer\",\n    1: \"Project Manager\",\n    2: \"Administrator\",\n  };\n\n  const roleType = {\n    0: \"info\",\n    1: \"success\",\n    2: \"danger\",\n  };\n\n  return (\n    <>\n      <Navbar expand=\"lg\" bg=\"light\">\n        <Navbar.Text>\n          &nbsp; <strong>Dashboard : List of Employees</strong>\n        </Navbar.Text>\n      </Navbar>\n      <Container className=\"mt-2 px-5\">\n        <br />\n        <Row\n          xs={1}\n          md={3}\n          className=\"g-4 mx-md-n5 text-center justify-content-center\"\n        >\n          {employees.map((e) => {\n            return (\n              <Col key={e.id} className=\"px-md-5 align-center\">\n                <Card style={{ width: \"18rem\" }}>\n                  <Card.Header>\n                    <i class=\"bi bi-file-person\"></i>\n                    <strong>{\" \" + e.firstname + \" \" + e.lastname}</strong>\n                  </Card.Header>\n\n                  <Card.Body>\n                    <Card.Text>\n                      <strong>Email:</strong> {e.email}\n                    </Card.Text>\n                    <Card.Text>\n                      <strong>Role:</strong>{\" \"}\n                      <Badge pill bg={roleType[e.role]}>\n                        {empRole[e.role]}\n                      </Badge>\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Employees;\n"]},"metadata":{},"sourceType":"module"}