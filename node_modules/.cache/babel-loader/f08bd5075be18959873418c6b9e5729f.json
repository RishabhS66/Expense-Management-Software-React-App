{"ast":null,"code":"var _jsxFileName = \"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/ProjectDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { Card, Button, Container, Badge, Dropdown } from \"react-bootstrap\";\nimport AddProject from \"./AddProject\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectDashboard = () => {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => setShow(false);\n\n  const SortCaret = (order, column) => {\n    if (!order) return /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"float-end\",\n      children: /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"grey\",\n        children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-caret-up-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-caret-down-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this);else if (order === \"asc\") return /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"float-end\",\n      children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"bi bi-caret-up-fill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"grey\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-caret-down-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this);else if (order === \"desc\") return /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"float-end\",\n      children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"grey\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-caret-up-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"bi bi-caret-down-fill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this);\n    return null;\n  };\n\n  const {\n    projects: content\n  } = useSelector(state => state.project);\n  console.log(\"running...\");\n\n  const dropDown = id => {\n    const idUrl = \"/projectsummary/\" + id;\n    return /*#__PURE__*/_jsxDEV(Dropdown, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        id: \"options-menu\",\n        variant: \"secondary\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-gear-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), \" Options\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        variant: \"dark\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          href: idUrl,\n          children: \"View Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          href: \"\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          href: \"\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  };\n\n  const projectData = content.map(prj => {\n    const ActiveStatus = prj.active ? \"Active\" : \"Inactive\";\n    const BadgeType = ActiveStatus === \"Active\" ? \"success\" : \"danger\";\n    const statusType = {\n      IN_PROGRESS: \"In progress\",\n      STARTED: \"Started\"\n    };\n    const prjData = {\n      projectActiveStatus: /*#__PURE__*/_jsxDEV(Badge, {\n        bg: BadgeType,\n        children: ActiveStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 28\n      }, this),\n      projectDueStatus: /*#__PURE__*/_jsxDEV(Badge, {\n        bg: \"info\",\n        children: \"Soon Due\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this),\n      projectCode: prj.id,\n      pName: prj.projectName,\n      cName: prj.client.fullName,\n      projectStatus: statusType[prj.status],\n      projectTeam: prj.projectManager.firstName + \" \" + prj.projectManager.lastName,\n      projectOptions: dropDown(prj.id)\n    };\n    return prjData;\n  });\n  const columns = [{\n    dataField: \"projectActiveStatus\",\n    text: \"\",\n    sort: true,\n    sortCaret: SortCaret,\n    headerStyle: (colum, colIndex) => {\n      return {\n        width: \"80px\",\n        textAlign: \"center\"\n      };\n    }\n  }, {\n    dataField: \"projectDueStatus\",\n    text: \"\",\n    sort: true,\n    sortCaret: SortCaret,\n    headerStyle: (colum, colIndex) => {\n      return {\n        width: \"100px\",\n        textAlign: \"center\"\n      };\n    }\n  }, {\n    dataField: \"projectCode\",\n    text: \"Code\",\n    sort: true,\n    sortCaret: SortCaret,\n    headerStyle: (colum, colIndex) => {\n      return {\n        width: \"100px\",\n        textAlign: \"center\"\n      };\n    }\n  }, {\n    dataField: \"pName\",\n    text: \"Project Name\",\n    sort: true,\n    sortCaret: SortCaret\n  }, {\n    dataField: \"cName\",\n    text: \"Client Name\",\n    sort: true,\n    sortCaret: SortCaret\n  }, {\n    dataField: \"projectStatus\",\n    text: \"Status\",\n    sort: true,\n    sortCaret: SortCaret\n  }, {\n    dataField: \"projectTeam\",\n    text: \"Team\"\n  }, {\n    dataField: \"projectOptions\",\n    text: \"\",\n    headerStyle: (colum, colIndex) => {\n      return {\n        width: \"140px\",\n        textAlign: \"center\"\n      };\n    }\n  }];\n  const defaultSorted = [{\n    dataField: \"projectCode\",\n    order: \"asc\" //desc\n\n  }]; // const projectData = [\n  //   {\n  //     projectActiveStatus: <Badge bg=\"success\">Active</Badge>,\n  //     projectDueStatus: <Badge bg=\"info\">Soon Due</Badge>,\n  //     projectCode: 1,\n  //     pName: \"BI Software\",\n  //     cName: \"XYZ\",\n  //     projectStatus: \"Started\",\n  //     projectTeam: \"BP\",\n  //     projectOptions: dropDown,\n  //   },\n  //   {\n  //     projectActiveStatus: <Badge bg=\"success\">Active</Badge>,\n  //     projectDueStatus: <Badge bg=\"info\">Soon Due</Badge>,\n  //     projectCode: 2,\n  //     pName: \"BL Software\",\n  //     cName: \"ABC\",\n  //     projectStatus: \"Started\",\n  //     projectTeam: \"BP\",\n  //     projectOptions: dropDown,\n  //   },\n  // ];\n\n  const customTotal = (from, to, size) => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"react-bootstrap-table-pagination-total\",\n    children: [\"\\xA0 Showing \", from, \" to \", to, \" of \", size, \" Results\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n\n  const options = {\n    // paginationSize: 4,\n    // pageStartIndex: 0,\n    // alwaysShowAllBtns: true, // Always show next and previous button\n    // withFirstAndLast: false, // Hide the going to First and Last page button\n    // hideSizePerPage: true, // Hide the sizePerPage dropdown always\n    // hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\n    // firstPageText: 'First',\n    // prePageText: 'Back',\n    // nextPageText: 'Next',\n    // lastPageText: 'Last',\n    // nextPageTitle: 'First page',\n    // prePageTitle: 'Pre page',\n    // firstPageTitle: 'Next page',\n    // lastPageTitle: 'Last page',\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    disablePageTitle: true,\n    sizePerPageList: [{\n      text: \"5\",\n      value: 5\n    }, {\n      text: \"10\",\n      value: 10\n    }, {\n      text: \"All\",\n      value: projectData.length\n    }]\n  };\n  const {\n    SearchBar\n  } = Search;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        as: \"h4\",\n        children: [\"PROJECTS\", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          className: \"float-end\",\n          id: \"addProject\",\n          onClick: handleShow,\n          children: \"+ Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"float-end\",\n          children: \"\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          className: \"float-end\",\n          id: \"deleteProjects\",\n          disabled: true,\n          children: \"Delete Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n          keyField: \"projectCode\",\n          data: projectData,\n          columns: columns,\n          search: true,\n          children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(SearchBar, { ...props.searchProps,\n              srText: \"Search Projects :\",\n              placeholder: \"Enter text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, { ...props.baseProps,\n              hover: true,\n              selectRow: {\n                mode: \"checkbox\"\n              },\n              defaultSorted: defaultSorted,\n              pagination: paginationFactory(options),\n              noDataIndication: \"No data available in table\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddProject, {\n        show: show,\n        onHide: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProjectDashboard, \"reXDrRF04qAWxlDvpBgwIU42rMQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProjectDashboard;\nexport default ProjectDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectDashboard\");","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/ProjectDashboard.js"],"names":["React","useState","useSelector","BootstrapTable","paginationFactory","ToolkitProvider","Search","Card","Button","Container","Badge","Dropdown","AddProject","ProjectDashboard","show","setShow","handleShow","handleClose","SortCaret","order","column","projects","content","state","project","console","log","dropDown","id","idUrl","projectData","map","prj","ActiveStatus","active","BadgeType","statusType","IN_PROGRESS","STARTED","prjData","projectActiveStatus","projectDueStatus","projectCode","pName","projectName","cName","client","fullName","projectStatus","status","projectTeam","projectManager","firstName","lastName","projectOptions","columns","dataField","text","sort","sortCaret","headerStyle","colum","colIndex","width","textAlign","defaultSorted","customTotal","from","to","size","options","showTotal","paginationTotalRenderer","disablePageTitle","sizePerPageList","value","length","SearchBar","props","searchProps","baseProps","mode"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { Card, Button, Container, Badge, Dropdown } from \"react-bootstrap\";\nimport AddProject from \"./AddProject\";\n\nconst ProjectDashboard = () => {\n  const [show, setShow] = useState(false);\n  const handleShow = () => setShow(true);\n  const handleClose = () => setShow(false);\n\n  const SortCaret = (order, column) => {\n    if (!order)\n      return (\n        <span class=\"float-end\">\n          <font color=\"grey\">\n            &nbsp;&nbsp;<i class=\"bi bi-caret-up-fill\"></i>\n            <i class=\"bi bi-caret-down-fill\"></i>\n          </font>\n        </span>\n      );\n    else if (order === \"asc\")\n      return (\n        <span class=\"float-end\">\n          &nbsp;&nbsp;<i class=\"bi bi-caret-up-fill\"></i>\n          <font color=\"grey\">\n            <i class=\"bi bi-caret-down-fill\"></i>\n          </font>\n        </span>\n      );\n    else if (order === \"desc\")\n      return (\n        <span class=\"float-end\">\n          &nbsp;&nbsp;\n          <font color=\"grey\">\n            <i class=\"bi bi-caret-up-fill\"></i>\n          </font>\n          <i class=\"bi bi-caret-down-fill\"></i>\n        </span>\n      );\n    return null;\n  };\n  \n  const { projects:content } = useSelector((state) => state.project);\n  console.log(\"running...\")\n  \n  const dropDown = (id) => {\n    const idUrl = \"/projectsummary/\" + id;\n    return (\n      <Dropdown>\n        <Dropdown.Toggle id=\"options-menu\" variant=\"secondary\">\n          <i class=\"bi bi-gear-fill\"></i> Options\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu variant=\"dark\">\n          <Dropdown.Item href={idUrl}>View Summary</Dropdown.Item>\n          <Dropdown.Item href=\"\">Edit</Dropdown.Item>\n          <Dropdown.Item href=\"\">Delete</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  };\n\n  const projectData = content.map((prj) => {\n    const ActiveStatus = prj.active ? \"Active\" : \"Inactive\";\n    const BadgeType = ActiveStatus === \"Active\" ? \"success\" : \"danger\";\n    const statusType = { IN_PROGRESS: \"In progress\", STARTED: \"Started\" };\n    const prjData = {\n      projectActiveStatus: <Badge bg={BadgeType}>{ActiveStatus}</Badge>,\n      projectDueStatus: <Badge bg=\"info\">Soon Due</Badge>,\n      projectCode: prj.id,\n      pName: prj.projectName,\n      cName: prj.client.fullName,\n      projectStatus: statusType[prj.status],\n      projectTeam:\n        prj.projectManager.firstName + \" \" + prj.projectManager.lastName,\n      projectOptions: dropDown(prj.id),\n    };\n    return prjData;\n  });\n\n  const columns = [\n    {\n      dataField: \"projectActiveStatus\",\n      text: \"\",\n      sort: true,\n      sortCaret: SortCaret,\n      headerStyle: (colum, colIndex) => {\n        return { width: \"80px\", textAlign: \"center\" };\n      },\n    },\n    {\n      dataField: \"projectDueStatus\",\n      text: \"\",\n      sort: true,\n      sortCaret: SortCaret,\n      headerStyle: (colum, colIndex) => {\n        return { width: \"100px\", textAlign: \"center\" };\n      },\n    },\n    {\n      dataField: \"projectCode\",\n      text: \"Code\",\n      sort: true,\n      sortCaret: SortCaret,\n\n      headerStyle: (colum, colIndex) => {\n        return { width: \"100px\", textAlign: \"center\" };\n      },\n    },\n    {\n      dataField: \"pName\",\n      text: \"Project Name\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"cName\",\n      text: \"Client Name\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"projectStatus\",\n      text: \"Status\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"projectTeam\",\n      text: \"Team\",\n    },\n    {\n      dataField: \"projectOptions\",\n      text: \"\",\n\n      headerStyle: (colum, colIndex) => {\n        return { width: \"140px\", textAlign: \"center\" };\n      },\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"projectCode\",\n      order: \"asc\", //desc\n    },\n  ];\n\n  // const projectData = [\n  //   {\n  //     projectActiveStatus: <Badge bg=\"success\">Active</Badge>,\n  //     projectDueStatus: <Badge bg=\"info\">Soon Due</Badge>,\n  //     projectCode: 1,\n  //     pName: \"BI Software\",\n  //     cName: \"XYZ\",\n  //     projectStatus: \"Started\",\n  //     projectTeam: \"BP\",\n  //     projectOptions: dropDown,\n  //   },\n  //   {\n  //     projectActiveStatus: <Badge bg=\"success\">Active</Badge>,\n  //     projectDueStatus: <Badge bg=\"info\">Soon Due</Badge>,\n  //     projectCode: 2,\n  //     pName: \"BL Software\",\n  //     cName: \"ABC\",\n  //     projectStatus: \"Started\",\n  //     projectTeam: \"BP\",\n  //     projectOptions: dropDown,\n  //   },\n  // ];\n\n  const customTotal = (from, to, size) => (\n    <span className=\"react-bootstrap-table-pagination-total\">\n      &nbsp; Showing {from} to {to} of {size} Results\n    </span>\n  );\n\n  const options = {\n    // paginationSize: 4,\n    // pageStartIndex: 0,\n    // alwaysShowAllBtns: true, // Always show next and previous button\n    // withFirstAndLast: false, // Hide the going to First and Last page button\n    // hideSizePerPage: true, // Hide the sizePerPage dropdown always\n    // hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\n    // firstPageText: 'First',\n    // prePageText: 'Back',\n    // nextPageText: 'Next',\n    // lastPageText: 'Last',\n    // nextPageTitle: 'First page',\n    // prePageTitle: 'Pre page',\n    // firstPageTitle: 'Next page',\n    // lastPageTitle: 'Last page',\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    disablePageTitle: true,\n    sizePerPageList: [\n      {\n        text: \"5\",\n        value: 5,\n      },\n      {\n        text: \"10\",\n        value: 10,\n      },\n      {\n        text: \"All\",\n        value: projectData.length,\n      },\n    ],\n  };\n\n  const { SearchBar } = Search;\n\n  return (\n    <Container>\n      <Card style={{ width: \"100%\" }}>\n        <Card.Header as=\"h4\">\n          PROJECTS\n          <Button\n            variant=\"success\"\n            className=\"float-end\"\n            id=\"addProject\"\n            onClick={handleShow}\n          >\n            + Add Project\n          </Button>\n          <Card.Text className=\"float-end\">&nbsp;</Card.Text>\n          <Button\n            variant=\"danger\"\n            className=\"float-end\"\n            id=\"deleteProjects\"\n            disabled={true}\n          >\n            Delete Selected\n          </Button>\n        </Card.Header>\n        <Card.Body>\n          <ToolkitProvider\n            keyField=\"projectCode\"\n            data={projectData}\n            columns={columns}\n            search\n          >\n            {(props) => (\n              <div>\n                <SearchBar\n                  {...props.searchProps}\n                  srText=\"Search Projects :\"\n                  placeholder=\"Enter text\"\n                />\n                <br />\n                <BootstrapTable\n                  {...props.baseProps}\n                  hover\n                  selectRow={{ mode: \"checkbox\" }}\n                  defaultSorted={defaultSorted}\n                  pagination={paginationFactory(options)}\n                  noDataIndication=\"No data available in table\"\n                />\n              </div>\n            )}\n          </ToolkitProvider>\n        </Card.Body>\n        <AddProject show={show} onHide={handleClose} />\n      </Card>\n    </Container>\n  );\n};\n\nexport default ProjectDashboard;\n"]},"metadata":{},"sourceType":"module"}