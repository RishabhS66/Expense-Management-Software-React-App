{"ast":null,"code":"var _jsxFileName = \"/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/AddEmployee.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Container, Card, Row, Toast, Col } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddEmployee = () => {\n  _s();\n\n  const [showA, setShowA] = useState(false);\n\n  const closeA = () => setShowA(false);\n\n  const openA = () => setShowA(true);\n\n  const [showB, setShowB] = useState(false);\n\n  const closeB = () => setShowB(false);\n\n  const openB = () => setShowB(true);\n\n  const [loading, setLoading] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"Sorry!\");\n  const schema = yup.object().shape({\n    firstName: yup.string().required(\"First Name is required\"),\n    lastName: yup.string().required(\"Last Name is required\"),\n    email: yup.string().email(\"Invalid Email\").required(),\n    pwd: yup.string().max(16, \"Password length should not exceed 16 characters\").required(\"Enter to set Password\"),\n    confirmedPwd: yup.string().oneOf([yup.ref(\"pwd\"), null], \"Does not match with the Password set above\").required(\"Confirm Password is a required field\"),\n    role: yup.string().required(\"Please select a Role\")\n  });\n  const dispatch = useDispatch();\n\n  const onSuccess = values => {\n    setLoading(true); // dispatch(changePwd(values.oldPwd, values.newPwd, values.confirmedPwd))\n    //   .then((response) => {\n    //     if (response.isPasswordTemp) {\n    //       openA();\n    //     } else {\n    //       openB();\n    //     }\n    //   })\n    //   .catch((msg) => {\n    //     setErrMsg(msg);\n    //     setLoading(false);\n    //     openA();\n    //   });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 4,\n        md: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 4,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Add an Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Formik, {\n              validationSchema: schema,\n              validateOnChange: true,\n              onSubmit: onSuccess,\n              initialValues: {\n                firstName: \"\",\n                lastName: \"\",\n                email: \"\",\n                pwd: \"\",\n                confirmedPwd: \"\",\n                role: \"0\"\n              },\n              children: ({\n                handleSubmit,\n                handleChange,\n                handleBlur,\n                resetForm,\n                values,\n                touched,\n                isValid,\n                errors\n              }) => /*#__PURE__*/_jsxDEV(Form, {\n                noValidate: true,\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  size: \"lg\",\n                  controlId: \"firstName\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"First Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    name: \"firstName\",\n                    value: values.firstName,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.firstName && errors.firstName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.firstName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  size: \"lg\",\n                  controlId: \"lastName\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Last Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    name: \"lastName\",\n                    value: values.lastName,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.lastName && errors.lastName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.lastName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  size: \"lg\",\n                  controlId: \"email\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"email\",\n                    name: \"email\",\n                    value: values.email,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.email && errors.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  size: \"lg\",\n                  controlId: \"pwd\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Set Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    name: \"pwd\",\n                    value: values.pwd,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.pwd && errors.pwd\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.pwd\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  size: \"lg\",\n                  controlId: \"confirmedPwd\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Confirm Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    name: \"confirmedPwd\",\n                    value: values.confirmedPwd,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.confirmedPwd && errors.confirmedPwd\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.confirmedPwd\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  size: \"lg\",\n                  controlId: \"role\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Project Manager\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    name: \"role\",\n                    value: values.role,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.role && errors.role,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"0\",\n                      children: \"Software Development Engineer\"\n                    }, \"0R\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"1\",\n                      children: \"Project Manager\"\n                    }, \"1R\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"2\",\n                      children: \"Administrator\"\n                    }, \"2R\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-grid\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    type: \"submit\",\n                    disabled: values.firstName.length === 0 || !isValid,\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"secondary\",\n                    type: \"reset\",\n                    onClick: resetForm,\n                    children: \"Reset\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 4,\n        md: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Toast, {\n        className: \"text-center\",\n        bg: \"danger\",\n        style: {\n          width: \"18rem\"\n        },\n        show: showA,\n        onClose: closeA,\n        position: \"middle-center\",\n        delay: 3000,\n        autohide: true,\n        children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"me-auto\",\n            children: \"ERROR!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"Employee could not be added: \", errMsg]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Toast, {\n        className: \"text-center\",\n        bg: \"success\",\n        style: {\n          width: \"18rem\"\n        },\n        show: showB,\n        onClose: closeB,\n        position: \"middle-center\",\n        delay: 3000,\n        autohide: true,\n        children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"me-auto\",\n            children: \"SUCCESS!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Employee Added Successfully!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEmployee, \"DcSpXpJY8L2FYG4hl03kJAIdfYM=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddEmployee;\nexport default AddEmployee;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEmployee\");","map":{"version":3,"sources":["/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/components/AddEmployee.js"],"names":["React","useState","useDispatch","Form","Button","Container","Card","Row","Toast","Col","Formik","yup","AddEmployee","showA","setShowA","closeA","openA","showB","setShowB","closeB","openB","loading","setLoading","errMsg","setErrMsg","schema","object","shape","firstName","string","required","lastName","email","pwd","max","confirmedPwd","oneOf","ref","role","dispatch","onSuccess","values","handleSubmit","handleChange","handleBlur","resetForm","touched","isValid","errors","length","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Container, Card, Row, Toast, Col } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\n\nconst AddEmployee = () => {\n  const [showA, setShowA] = useState(false);\n  const closeA = () => setShowA(false);\n  const openA = () => setShowA(true);\n  const [showB, setShowB] = useState(false);\n  const closeB = () => setShowB(false);\n  const openB = () => setShowB(true);\n  const [loading, setLoading] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"Sorry!\");\n\n  const schema = yup.object().shape({\n    firstName: yup.string().required(\"First Name is required\"),\n    lastName: yup.string().required(\"Last Name is required\"),\n    email: yup.string().email(\"Invalid Email\").required(),\n    pwd: yup\n      .string()\n      .max(16, \"Password length should not exceed 16 characters\")\n      .required(\"Enter to set Password\"),\n    confirmedPwd: yup\n      .string()\n      .oneOf(\n        [yup.ref(\"pwd\"), null],\n        \"Does not match with the Password set above\"\n      )\n      .required(\"Confirm Password is a required field\"),\n    role: yup.string().required(\"Please select a Role\"),\n  });\n\n  const dispatch = useDispatch();\n\n  const onSuccess = (values) => {\n    setLoading(true);\n\n    // dispatch(changePwd(values.oldPwd, values.newPwd, values.confirmedPwd))\n    //   .then((response) => {\n    //     if (response.isPasswordTemp) {\n    //       openA();\n    //     } else {\n    //       openB();\n    //     }\n    //   })\n    //   .catch((msg) => {\n    //     setErrMsg(msg);\n    //     setLoading(false);\n    //     openA();\n    //   });\n  };\n\n  return (\n    <Container className=\"mt-5\">\n      <Row>\n        <Col lg={4} md={6} />\n        <Col lg={4} md={6}>\n          <Card>\n            <Card.Header className=\"text-center\">\n              <h4>Add an Employee</h4>\n            </Card.Header>\n            <Card.Body>\n              <Formik\n                validationSchema={schema}\n                validateOnChange={true}\n                onSubmit={onSuccess}\n                initialValues={{\n                  firstName: \"\",\n                  lastName: \"\",\n                  email: \"\",\n                  pwd: \"\",\n                  confirmedPwd: \"\",\n                  role: \"0\",\n                }}\n              >\n                {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  resetForm,\n                  values,\n                  touched,\n                  isValid,\n                  errors,\n                }) => (\n                  <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group\n                      className=\"mb-3\"\n                      size=\"lg\"\n                      controlId=\"firstName\"\n                    >\n                      <Form.Label>First Name</Form.Label>\n                      <Form.Control\n                        name=\"firstName\"\n                        value={values.firstName}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.firstName && errors.firstName}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.firstName}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" size=\"lg\" controlId=\"lastName\">\n                      <Form.Label>Last Name</Form.Label>\n                      <Form.Control\n                        name=\"lastName\"\n                        value={values.lastName}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.lastName && errors.lastName}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.lastName}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" size=\"lg\" controlId=\"email\">\n                      <Form.Label>Email</Form.Label>\n                      <Form.Control\n                        type=\"email\"\n                        name=\"email\"\n                        value={values.email}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.email && errors.email}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.email}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" size=\"lg\" controlId=\"pwd\">\n                      <Form.Label>Set Password</Form.Label>\n                      <Form.Control\n                        type=\"password\"\n                        name=\"pwd\"\n                        value={values.pwd}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.pwd && errors.pwd}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.pwd}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group\n                      className=\"mb-3\"\n                      size=\"lg\"\n                      controlId=\"confirmedPwd\"\n                    >\n                      <Form.Label>Confirm Password</Form.Label>\n                      <Form.Control\n                        type=\"password\"\n                        name=\"confirmedPwd\"\n                        value={values.confirmedPwd}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.confirmedPwd && errors.confirmedPwd}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.confirmedPwd}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" size=\"lg\" controlId=\"role\">\n                      <Form.Label>Project Manager</Form.Label>\n                      <Form.Select\n                        name=\"role\"\n                        value={values.role}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.role && errors.role}\n                      >\n                        <option key=\"0R\" value=\"0\">\n                          Software Development Engineer\n                        </option>\n                        <option key=\"1R\" value=\"1\">\n                          Project Manager\n                        </option>\n                        <option key=\"2R\" value=\"2\">\n                          Administrator\n                        </option>\n                      </Form.Select>\n                    </Form.Group>\n\n                    <br />\n                    <div className=\"d-grid\">\n                      <Button\n                        variant=\"primary\"\n                        type=\"submit\"\n                        disabled={values.firstName.length === 0 || !isValid}\n                      >\n                        Submit\n                      </Button>\n                      <br />\n                      <Button\n                        variant=\"secondary\"\n                        type=\"reset\"\n                        onClick={resetForm}\n                      >\n                        Reset\n                      </Button>\n                    </div>\n                  </Form>\n                )}\n              </Formik>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={4} md={6} />\n      </Row>\n      <br />\n      <Row className=\"justify-content-center\">\n        <Toast\n          className=\"text-center\"\n          bg=\"danger\"\n          style={{ width: \"18rem\" }}\n          show={showA}\n          onClose={closeA}\n          position=\"middle-center\"\n          delay={3000}\n          autohide\n        >\n          <Toast.Header>\n            <strong className=\"me-auto\">ERROR!</strong>\n          </Toast.Header>\n          <Toast.Body>\n            <h6>Employee could not be added: {errMsg}</h6>\n          </Toast.Body>\n        </Toast>\n      </Row>\n      <br />\n      <Row className=\"justify-content-center\">\n        <Toast\n          className=\"text-center\"\n          bg=\"success\"\n          style={{ width: \"18rem\" }}\n          show={showB}\n          onClose={closeB}\n          position=\"middle-center\"\n          delay={3000}\n          autohide\n        >\n          <Toast.Header>\n            <strong className=\"me-auto\">SUCCESS!</strong>\n          </Toast.Header>\n          <Toast.Body>\n            <h6>Employee Added Successfully!</h6>\n          </Toast.Body>\n        </Toast>\n      </Row>\n    </Container>\n  );\n};\n\nexport default AddEmployee;\n"]},"metadata":{},"sourceType":"module"}