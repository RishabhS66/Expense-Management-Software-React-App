{"ast":null,"code":"import { ADD_PROJECTS, ADD_PROJECTS_FAIL, FETCH_PROJECTS, FETCH_PROJECTS_FAIL, SET_MESSAGE } from \"./types\";\nimport projectService from \"../services/project.service\";\nexport const getProjects = () => dispatch => {\n  return projectService.getProjects().then(data => {\n    dispatch({\n      type: FETCH_PROJECTS,\n      payload: {\n        projects: data\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    dispatch({\n      type: FETCH_PROJECTS_FAIL\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: message\n    });\n    return Promise.reject();\n  });\n};\nexport const addProjects = payload => dispatch => {\n  return projectService.addProjects(payload).then(data => {\n    dispatch({\n      type: ADD_PROJECTS,\n      payload: {\n        project: data\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    const message = \"Project Could NOT Be Added\"; // (error.response &&\n    //   error.response.data &&\n    //   error.response.data.message) ||\n    // error.message ||\n    // error.toString();\n\n    console.log(message);\n    dispatch({\n      type: ADD_PROJECTS_FAIL\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: message\n    });\n    return Promise.reject();\n  });\n};","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/actions/project.js"],"names":["ADD_PROJECTS","ADD_PROJECTS_FAIL","FETCH_PROJECTS","FETCH_PROJECTS_FAIL","SET_MESSAGE","projectService","getProjects","dispatch","then","data","type","payload","projects","Promise","resolve","error","message","response","toString","reject","addProjects","project","console","log"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,iBAAvB,EAA0CC,cAA1C,EAA0DC,mBAA1D,EAA+EC,WAA/E,QAAkG,SAAlG;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAOC,QAAD,IAAc;AAC7C,SAAOF,cAAc,CAACC,WAAf,GAA6BE,IAA7B,CACJC,IAAD,IAAU;AACRF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,cADC;AAEPS,MAAAA,OAAO,EAAE;AAAEC,QAAAA,QAAQ,EAAEH;AAAZ;AAFF,KAAD,CAAR;AAIA,WAAOI,OAAO,CAACC,OAAR,EAAP;AACD,GAPI,EAQJC,KAAD,IAAW;AACT,UAAMC,OAAO,GACVD,KAAK,CAACE,QAAN,IACCF,KAAK,CAACE,QAAN,CAAeR,IADhB,IAECM,KAAK,CAACE,QAAN,CAAeR,IAAf,CAAoBO,OAFtB,IAGAD,KAAK,CAACC,OAHN,IAIAD,KAAK,CAACG,QAAN,EALF;AAOAX,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP;AADC,KAAD,CAAR;AAIAI,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,WADC;AAEPO,MAAAA,OAAO,EAAEK;AAFF,KAAD,CAAR;AAKA,WAAOH,OAAO,CAACM,MAAR,EAAP;AACD,GA1BI,CAAP;AA4BD,CA7BM;AA+BP,OAAO,MAAMC,WAAW,GAAIT,OAAD,IAAcJ,QAAD,IAAc;AACpD,SAAOF,cAAc,CAACe,WAAf,CAA2BT,OAA3B,EAAoCH,IAApC,CACJC,IAAD,IAAU;AACRF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEV,YADC;AAEPW,MAAAA,OAAO,EAAE;AAAEU,QAAAA,OAAO,EAAEZ;AAAX;AAFF,KAAD,CAAR;AAKA,WAAOI,OAAO,CAACC,OAAR,EAAP;AACD,GARI,EASJC,KAAD,IAAW;AACT,UAAMC,OAAO,GAAG,4BAAhB,CADS,CAEP;AACA;AACA;AACA;AACA;;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AAEFT,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAET;AADC,KAAD,CAAR;AAIAM,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,WADC;AAEPO,MAAAA,OAAO,EAAEK;AAFF,KAAD,CAAR;AAKA,WAAOH,OAAO,CAACM,MAAR,EAAP;AACD,GA5BI,CAAP;AA8BD,CA/BM","sourcesContent":["import { ADD_PROJECTS, ADD_PROJECTS_FAIL, FETCH_PROJECTS, FETCH_PROJECTS_FAIL, SET_MESSAGE } from \"./types\";\nimport projectService from \"../services/project.service\";\n\nexport const getProjects = () => (dispatch) => {\n  return projectService.getProjects().then(\n    (data) => {\n      dispatch({\n        type: FETCH_PROJECTS,\n        payload: { projects: data },\n      });\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: FETCH_PROJECTS_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const addProjects = (payload) => (dispatch) => {\n  return projectService.addProjects(payload).then(\n    (data) => {\n      dispatch({\n        type: ADD_PROJECTS,\n        payload: { project: data },\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message = \"Project Could NOT Be Added\";\n        // (error.response &&\n        //   error.response.data &&\n        //   error.response.data.message) ||\n        // error.message ||\n        // error.toString();\n        console.log(message);\n\n      dispatch({\n        type: ADD_PROJECTS_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n"]},"metadata":{},"sourceType":"module"}