{"ast":null,"code":"var _jsxFileName = \"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Expense/AddExpenseEntry.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport ReactDOM from \"react-dom\"; // import { useFormik } from \"formik\";\n\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Formik } from \"formik\";\nimport * as yup from 'yup';\nimport \"./Expense.css\"; // import AddExpenseSheet from \"./AddExpenseSheet\";\n\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addEntry } from \"../../actions/expense.actions\";\nimport { date } from \"yup/lib/locale\";\nimport { useEffect } from \"react\";\nimport { getExpenseSheets } from \"../../actions/expense.actions\";\nimport { getProjects } from \"../../actions/project\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddExpenseEntry = props => {\n  _s();\n\n  console.log(\"aaaaaaa\");\n  console.log(props.data);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getProjects()).then(() => {\n      console.log(\"Projects fetched successfully\");\n    }).catch(() => {\n      console.log(\"Unable to fetch projects\");\n    });\n  }, [dispatch]);\n\n  const todayDate = () => {\n    const date = new Date();\n    var d = new Date(date),\n        month = \"\" + (d.getMonth() + 1),\n        day = \"\" + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    return [year, month, day].join(\"-\");\n  };\n\n  const schema = yup.object().shape({\n    projectName: yup.string().required(\"Required!!\"),\n    name: yup.string().required(\"Required!!\"),\n    paymentMethod: yup.string().required(\"Required!!\"),\n    currency: yup.string().required(\"Required!!\"),\n    // date: yup\n    // .date()\n    // .max(new Date() , \"Date cannot be in the future\")\n    // .min(new Date(Date.now() -86400000) , \"Date cannot be in the past\")\n    // .required(\"Required!!\"),\n    billable: yup.bool().required(\"Required!!\"),\n    reimburseable: yup.bool().required(\"Required!!\"),\n    amount: yup.number().min(0, \"Minumim value must be 0\").typeError(\"Cost must be a numerical value\").required(\"Required!!\"),\n    taxZone: yup.string().required(\"Required!!\"),\n    tax: yup.number().min(0, \"Minumim value must be 0\").typeError(\"Cost must be a numerical value\").required(\"Required!!\"),\n    description: yup.string().required(\"Required!!\") // file: yup.mixed().required(\"Required!!\"),\n    //   terms: yup.bool().required().oneOf([true], 'terms must be accepted'),\n\n  });\n  const [loading, setLoading] = useState(false);\n  const {\n    projects\n  } = useSelector(state => state.project);\n  const {\n    user: currentUser\n  } = useSelector(state => state.auth); // const { id } = currentUser;\n\n  const onSuccess = values => {\n    // console.log(\"12121212\");\n    // console.log(values);\n    const payload = {};\n    payload[\"project\"] = {\n      id: Number(values.projectName)\n    };\n    payload[\"name\"] = values.name;\n    payload[\"currency\"] = values.currency;\n    payload[\"date\"] = todayDate;\n    payload[\"billable\"] = values.billable;\n    payload[\"reimburseable\"] = values.reimburseable;\n    payload[\"amount\"] = values.amount;\n    payload[\"taxZone\"] = values.taxZone;\n    payload[\"tax\"] = values.tax; // payload[\"status\"] = values.status;\n\n    payload[\"paymentMethod\"] = values.paymentMethod;\n    payload[\"status\"] = \"SUBMITTED\";\n    payload[\"description\"] = values.description;\n    payload[\"attachments\"] = [];\n    props.onHide();\n    setLoading(true); // console.log(\"bbbbbbb\")\n    // console.log(payload);\n\n    dispatch(addEntry(payload)).then(() => {\n      //history.push(\"/home\");\n      console.log(\"Works\"); // dispatch(getExpenseSheets())\n      // .then(() => {\n      //   console.log(\"Expenses fetched successfully\");\n      // })\n      // .catch(() => {\n      //   console.log(\"Unable to fetch Expenses\");\n      // });\n    }).catch(() => {\n      console.log(\"nah!\");\n      setLoading(false);\n    });\n  };\n\n  const handleSubmit = () => {\n    if (formRef.current) {\n      formRef.current.handleSubmit();\n    }\n  };\n\n  const formRef = useRef();\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    backdrop: \"static\",\n    size: \"lg\",\n    id: \"entry-modal\",\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Add Expense Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      validationSchema: schema,\n      validateOnChange: true,\n      onSubmit: onSuccess,\n      initialValues: props.data,\n      innerRef: formRef,\n      children: ({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Tabs, {\n            defaultActiveKey: \"basic\",\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              eventKey: \"basic\",\n              title: \"Basic\",\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"projectName\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Project name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    defaultValue: \"Choose...\",\n                    name: \"projectName\",\n                    value: values.projectName,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.projectName && errors.projectName,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      disabled: true,\n                      children: \"Select Project\"\n                    }, \"SP\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 25\n                    }, this), projects.map(project => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: project.id,\n                        children: project.projectName\n                      }, project.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 185,\n                        columnNumber: 29\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"name\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Expense Name \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    // as=\"textarea\"\n                    name: \"name\",\n                    value: values.name,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.name && errors.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"paymentMethod\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Payment Method\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    \"aria-label\": \"Default select example\",\n                    name: \"paymentMethod\",\n                    value: values.paymentMethod,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.paymentMethod && errors.paymentMethod,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 3\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"CASH\",\n                      children: \"CASH\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 3\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"CARD\",\n                      children: \"CARD\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 3\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"ONLINE TRANSACTION\",\n                      children: \"ONLINE TRANSACTION\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 3\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.paymentMethod\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 1\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"currency\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Currency\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    \"aria-label\": \"Default select example\",\n                    name: \"currency\",\n                    value: values.currency,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.currency && errors.currency,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 3\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"INR\",\n                      children: \"INR\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 3\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"USD\",\n                      children: \"USD\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 3\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.currency\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 1\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"date\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Expense Entry Date \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    // as=\"textarea\"\n                    type: \"date\",\n                    name: \"date\",\n                    value: todayDate(),\n                    readOnly: true // onChange={handleChange}\n                    // onBlur={handleBlur}\n                    // isInvalid={\n                    //   touched.date &&\n                    //   errors.date\n                    // }\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"billable\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Billable\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    \"aria-label\": \"Default select example\",\n                    name: \"billable\",\n                    value: values.billable,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.billable && errors.billable,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 3\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"true\",\n                      children: \"Yes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 3\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"false\",\n                      children: \"No\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 3\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.billable\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 24\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"reimburseable\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Reimburse\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    \"aria-label\": \"Default select example\",\n                    name: \"reimburseable\",\n                    value: values.reimburseable,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.reimburseable && errors.reimburseable,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 3\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"true\",\n                      children: \"Yes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 302,\n                      columnNumber: 3\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"false\",\n                      children: \"No\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 3\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.reimburseable\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 3\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"amount\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Net Amount\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    // as=\"textarea\"\n                    name: \"amount\",\n                    value: values.amount,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.amount && errors.amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 23\n                  }, this), \"                \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"taxZone\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Tax Zone\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    \"aria-label\": \"Default select example\",\n                    name: \"taxZone\",\n                    value: values.taxZone,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.taxZone && errors.taxZone,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 3\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"IND\",\n                      children: \"IND\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 3\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"USA\",\n                      children: \"USA\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 3\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.taxZone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 1\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"tax\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Tax\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 352,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    // as=\"textarea\"\n                    name: \"tax\",\n                    value: values.tax,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.tax && errors.tax\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.tax\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 23\n                  }, this), \"                \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"netAmount\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Amount\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    // as=\"textarea\"\n                    name: \"netAmount\",\n                    value: String(Number(values.amount) + Number(values.tax)),\n                    readOnly: true // onChange={handleChange}\n                    // onBlur={handleBlur}\n                    // isInvalid={\n                    //   touched.netAmount &&\n                    //   errors.netAmount\n                    // }\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              eventKey: \"description\",\n              title: \"Description\",\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"description\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  type: \"long-description\",\n                  name: \"description\",\n                  value: values.description,\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  isInvalid: touched.description && errors.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 23\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              eventKey: \"attachment\",\n              title: \"Attachment\",\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"file\",\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"position-relative mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"File\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"file\" // required\n                    ,\n                    name: \"file\" // onBlur={handleBlur}\n                    // onChange={handleChange}\n                    // isInvalid={!!errors.file}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            type: \"submit\",\n            onClick: handleSubmit // onClick = {console.log(values)}\n            ,\n            disabled: values.amount === 0 || !isValid,\n            children: \"Add Expense Entry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: props.onHide,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, \"Formik\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddExpenseEntry, \"PJgs5WGj3c9IoGMv8jMdC/hM+PA=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = AddExpenseEntry;\nexport default AddExpenseEntry;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddExpenseEntry\");","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Expense/AddExpenseEntry.js"],"names":["React","useRef","ReactDOM","Tabs","Tab","Form","Button","Row","Col","FloatingLabel","Modal","Formik","yup","useSelector","useState","useDispatch","addEntry","date","useEffect","getExpenseSheets","getProjects","AddExpenseEntry","props","console","log","data","dispatch","then","catch","todayDate","Date","d","month","getMonth","day","getDate","year","getFullYear","length","join","schema","object","shape","projectName","string","required","name","paymentMethod","currency","billable","bool","reimburseable","amount","number","min","typeError","taxZone","tax","description","loading","setLoading","projects","state","project","user","currentUser","auth","onSuccess","values","payload","id","Number","onHide","handleSubmit","formRef","current","handleChange","handleBlur","touched","isValid","errors","map","String"],"mappings":"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","sourcesContent":["import React,{useRef} from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { useFormik } from \"formik\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Formik } from \"formik\";\nimport * as yup from 'yup';\nimport \"./Expense.css\";\n// import AddExpenseSheet from \"./AddExpenseSheet\";\n\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addEntry } from \"../../actions/expense.actions\";\nimport { date } from \"yup/lib/locale\";\nimport { useEffect } from \"react\";\n\nimport { getExpenseSheets } from \"../../actions/expense.actions\";\nimport { getProjects } from \"../../actions/project\";\n\nconst AddExpenseEntry= (props)=> {\n  console.log(\"aaaaaaa\")\n  console.log(props.data);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getProjects())\n      .then(() => {\n        console.log(\"Projects fetched successfully\");\n      })\n      .catch(() => {\n        console.log(\"Unable to fetch projects\");\n      });\n  }, [dispatch]);\n\n  const todayDate = () => {\n    const date = new Date();\n    var d = new Date(date),\n      month = \"\" + (d.getMonth() + 1),\n      day = \"\" + d.getDate(),\n      year = d.getFullYear();\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    return [year, month, day].join(\"-\");\n  };\n\n  const schema = yup.object().shape({\n      projectName: yup.string().required(\"Required!!\"),\n      name: yup.string().required(\"Required!!\"),\n      paymentMethod: yup.string().required(\"Required!!\"),\n      currency: yup.string().required(\"Required!!\"),\n      // date: yup\n      // .date()\n      // .max(new Date() , \"Date cannot be in the future\")\n      // .min(new Date(Date.now() -86400000) , \"Date cannot be in the past\")\n      // .required(\"Required!!\"),\n      billable: yup.bool().required(\"Required!!\"),\n      reimburseable: yup.bool().required(\"Required!!\"),\n      amount: yup.number()\n      .min(0, \"Minumim value must be 0\")\n      .typeError(\"Cost must be a numerical value\")\n      .required(\"Required!!\"),\n      taxZone: yup.string().required(\"Required!!\"),\n      tax: yup.number()\n      .min(0, \"Minumim value must be 0\")\n      .typeError(\"Cost must be a numerical value\")\n      .required(\"Required!!\"),\n      description: yup.string().required(\"Required!!\"),\n      // file: yup.mixed().required(\"Required!!\"),\n    //   terms: yup.bool().required().oneOf([true], 'terms must be accepted'),\n    });\n\n  const [loading, setLoading] = useState(false);\n  const { projects } = useSelector((state) => state.project);\n  const { user: currentUser } = useSelector((state) => state.auth);\n  // const { id } = currentUser;\n\n  const onSuccess = (values) => {\n    // console.log(\"12121212\");\n    // console.log(values);\n    const payload ={};\n    payload[\"project\"] = {id : Number(values.projectName)};\n    payload[\"name\"] = values.name;\n    payload[\"currency\"]= values.currency;\n    payload[\"date\"] = todayDate;\n    payload[\"billable\"]= values.billable;\n    payload[\"reimburseable\"]= values.reimburseable;\n    payload[\"amount\"] = values.amount;\n    payload[\"taxZone\"] = values.taxZone;\n    payload[\"tax\"]= values.tax;\n    // payload[\"status\"] = values.status;\n    payload[\"paymentMethod\"]= values.paymentMethod;\n    payload[\"status\"]= \"SUBMITTED\";\n    payload[\"description\"]=values.description;\n    payload[\"attachments\"]=[];\n\n    props.onHide();\n\n    setLoading(true);\n    // console.log(\"bbbbbbb\")\n    // console.log(payload);\n\n    dispatch(addEntry(payload))\n      .then(() => {\n        //history.push(\"/home\");\n        console.log(\"Works\");\n      // dispatch(getExpenseSheets())\n      // .then(() => {\n      //   console.log(\"Expenses fetched successfully\");\n      // })\n      // .catch(() => {\n      //   console.log(\"Unable to fetch Expenses\");\n      // });\n      })\n      .catch(() => {\n        console.log(\"nah!\")\n        setLoading(false);\n      });\n  };\n  const handleSubmit = () => {\n    if (formRef.current) {\n      formRef.current.handleSubmit()\n    }\n  }\n  const formRef = useRef();\n\n  return (\n    <Modal {...props} backdrop=\"static\" size=\"lg\" id= \"entry-modal\">\n      <Modal.Header closeButton>\n        <Modal.Title>Add Expense Entry</Modal.Title>\n      </Modal.Header>\n\n    <Formik\n      key=\"Formik\"\n      validationSchema={schema}\n      validateOnChange={true}\n      onSubmit={onSuccess}\n      initialValues={props.data}\n      innerRef={formRef}\n    >\n     {({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit} >\n        {/* <Form noValidate onSubmit={console.log(\"sfsd\")} > */}\n    \n      <Modal.Body>\n        {/* <Form> */}\n          {/* <Row>\n            <Form.Group as={Col} controlId=\"clientName\">\n              <Form.Label>Project Name</Form.Label>\n              <Form.Control />\n            </Form.Group>\n          </Row> */}\n          <Tabs defaultActiveKey=\"basic\">\n            <Tab eventKey=\"basic\" title=\"Basic\">\n              <Row>\n                <Form.Group as={Col} controlId=\"projectName\">\n                  <Form.Label><small>Project name</small></Form.Label>\n                  <Form.Select\n                        defaultValue=\"Choose...\"\n                        name=\"projectName\"\n                        value={values.projectName}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.projectName && errors.projectName}\n                      >\n                        <option key=\"SP\" value=\"\" disabled>\n                          Select Project\n                        </option>\n                        {projects.map((project) => {\n                          return (\n                            <option key={project.id} value={project.id}>\n                              {project.projectName}\n                            </option>\n                          );\n                        })}\n                      </Form.Select>\n                </Form.Group>\n                \n              </Row>\n              <Row>\n              <Form.Group as={Col} controlId=\"name\">\n                  <Form.Label><small>Expense Name </small></Form.Label>\n                  <Form.Control\n                        // as=\"textarea\"\n                        name=\"name\"\n                        value={values.name}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          touched.name &&\n                          errors.name\n                        }\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.name}\n                      </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"paymentMethod\">\n                  <Form.Label><small>Payment Method</small></Form.Label>\n                  <Form.Select aria-label=\"Default select example\" name=\"paymentMethod\"\n                        value={values.paymentMethod}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          touched.paymentMethod &&\n                          errors.paymentMethod\n                        }>\n  <option></option>\n  <option value=\"CASH\">CASH</option>\n  <option value=\"CARD\">CARD</option>\n  <option value=\"ONLINE TRANSACTION\">ONLINE TRANSACTION</option>\n</Form.Select>\n<Form.Control.Feedback type=\"invalid\">\n                        {errors.paymentMethod}\n                      </Form.Control.Feedback>  \n                </Form.Group>\n                <Form.Group as={Col} controlId=\"currency\">\n                  <Form.Label><small>Currency</small></Form.Label>\n                  <Form.Select aria-label=\"Default select example\" name=\"currency\"\n                        value={values.currency}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          touched.currency &&\n                          errors.currency\n                        }>\n  <option></option>\n  <option value=\"INR\">INR</option>\n  <option value=\"USD\">USD</option>\n  {/* <option value=\"3\">Three</option> */}\n</Form.Select>\n<Form.Control.Feedback type=\"invalid\">\n                        {errors.currency}\n                      </Form.Control.Feedback>  \n                </Form.Group>\n              </Row>\n\n              <Row>\n              <Form.Group as={Col} controlId=\"date\">\n                  <Form.Label><small>Expense Entry Date </small></Form.Label>\n                  <Form.Control\n                        // as=\"textarea\"\n                        type=\"date\"\n                        name=\"date\"\n                        value={todayDate()}\n                        readOnly\n                        // onChange={handleChange}\n                        // onBlur={handleBlur}\n                        // isInvalid={\n                        //   touched.date &&\n                        //   errors.date\n                        // }\n                      />\n                      {/* <Form.Control.Feedback type=\"invalid\">\n                        {errors.date}\n                      </Form.Control.Feedback> */}\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"billable\">\n                  <Form.Label><small>Billable</small></Form.Label>\n                  <Form.Select aria-label=\"Default select example\" name=\"billable\"\n                        value={values.billable}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          touched.billable &&\n                          errors.billable\n                        }>\n  <option></option>\n  <option value=\"true\">Yes</option>\n  <option value=\"false\">No</option>\n  {/* <option value=\"3\">Three</option> */}\n</Form.Select>\n                       <Form.Control.Feedback type=\"invalid\">\n                        {errors.billable}\n                      </Form.Control.Feedback>\n              </Form.Group>\n                <Form.Group as={Col} controlId=\"reimburseable\">\n                  <Form.Label><small>Reimburse</small></Form.Label>\n                  <Form.Select aria-label=\"Default select example\" name=\"reimburseable\"\n                        value={values.reimburseable}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          touched.reimburseable &&\n                          errors.reimburseable\n                        }>\n  <option></option>\n  <option value=\"true\">Yes</option>\n  <option value=\"false\">No</option>\n  {/* <option value=\"3\">Three</option> */}\n</Form.Select>\n  <Form.Control.Feedback type=\"invalid\">\n                        {errors.reimburseable}\n                      </Form.Control.Feedback>\n                </Form.Group>\n              </Row>\n              <Row>\n              <Form.Group as={Col} controlId=\"amount\">\n                  <Form.Label><small>Net Amount</small></Form.Label>\n                  <Form.Control\n                        // as=\"textarea\"\n                        name=\"amount\"\n                        value={values.amount}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          touched.amount &&\n                          errors.amount\n                        }\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.amount}\n                      </Form.Control.Feedback>                </Form.Group>\n                <Form.Group as={Col} controlId=\"taxZone\">\n                  <Form.Label><small>Tax Zone</small></Form.Label>\n                 \n                  <Form.Select aria-label=\"Default select example\" name=\"taxZone\"\n                        value={values.taxZone}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          touched.taxZone &&\n                          errors.taxZone\n                        }>\n  <option></option>\n  <option value=\"IND\">IND</option>\n  <option value=\"USA\">USA</option>\n  {/* <option value=\"3\">Three</option> */}\n</Form.Select>\n<Form.Control.Feedback type=\"invalid\">\n                        {errors.taxZone}\n                      </Form.Control.Feedback> \n                </Form.Group>\n                \n              </Row>\n              <Row>\n              <Form.Group as={Col} controlId=\"tax\">\n                  <Form.Label><small>Tax</small></Form.Label>\n                  <Form.Control\n                        // as=\"textarea\"\n                        name=\"tax\"\n                        value={values.tax}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          touched.tax &&\n                          errors.tax\n                        }\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.tax}\n                      </Form.Control.Feedback>                </Form.Group>\n                <Form.Group as={Col} controlId=\"netAmount\">\n                  <Form.Label><small>Amount</small></Form.Label>\n                  <Form.Control\n                        // as=\"textarea\"\n                        name=\"netAmount\"\n                        value = {String(Number(values.amount) + Number(values.tax))}\n                        readOnly\n                        // onChange={handleChange}\n                        // onBlur={handleBlur}\n                        // isInvalid={\n                        //   touched.netAmount &&\n                        //   errors.netAmount\n                        // }\n                      /> \n                      {/* <Form.Control.Feedback type=\"invalid\">\n                        {errors.netAmount}\n                      </Form.Control.Feedback> */}\n                </Form.Group>\n                \n              </Row>\n            </Tab>\n\n          \n            <Tab eventKey=\"description\" title=\"Description\">\n              <Form.Group className=\"mb-3\" controlId=\"description\">\n              \n                  <Form.Control\n                        as=\"textarea\"\n                        type=\"long-description\"\n                        name=\"description\"\n                        value={values.description}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={\n                          touched.description &&\n                          errors.description\n                        }\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.description}\n                      </Form.Control.Feedback>{\" \"}\n              </Form.Group>\n            </Tab>\n            <Tab eventKey=\"attachment\" title=\"Attachment\">\n            \n            \n              <Form.Group className=\"mb-3\" controlId=\"file\">\n              <Form.Group className=\"position-relative mb-3\">\n            <Form.Label>File</Form.Label>\n            <Form.Control\n              type=\"file\"\n              // required\n              name=\"file\"\n              // onBlur={handleBlur}\n              // onChange={handleChange}\n              // isInvalid={!!errors.file}\n            />\n            {/* <Form.Control.Feedback type=\"invalid\" tooltip>\n              {errors.file}\n            </Form.Control.Feedback> */}\n          </Form.Group>\n              </Form.Group>\n            \n         \n      \n      </Tab>\n       </Tabs>\n        {/* </Form> */}\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button variant=\"success\" type=\"submit\" \n        onClick={handleSubmit}\n        // onClick = {console.log(values)}\n        disabled={ values.amount === 0 || !isValid }\n        >\n        Add Expense Entry</Button>\n        <Button variant=\"secondary\" onClick={props.onHide}>\n          Close\n        </Button>\n      </Modal.Footer>\n    \n    </Form>\n    )}\n    </Formik>\n    </Modal>\n  );\n};\n\nexport default AddExpenseEntry;\n\n"]},"metadata":{},"sourceType":"module"}