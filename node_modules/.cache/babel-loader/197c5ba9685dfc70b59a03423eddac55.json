{"ast":null,"code":"var _jsxFileName = \"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { Card, Badge } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getProjects } from \"../actions/project\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getProjects()).then(() => {\n      console.log(\"Projects fetched successfully\");\n    }).catch(() => {\n      console.log(\"Unable to fetch projects\");\n    });\n  }, [dispatch]);\n\n  const SortCaret = (order, column) => {\n    if (!order) return /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"float-end\",\n      children: /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"grey\",\n        children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-caret-up-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-caret-down-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this);else if (order === \"asc\") return /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"float-end\",\n      children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"bi bi-caret-up-fill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"grey\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-caret-down-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this);else if (order === \"desc\") return /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"float-end\",\n      children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"grey\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-caret-up-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"bi bi-caret-down-fill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this);\n    return null;\n  };\n\n  const {\n    projects: content\n  } = useSelector(state => state.project);\n  const projectData = content.map(prj => {\n    const ActiveStatus = prj.active ? \"Active\" : \"Inactive\";\n    const BadgeType = ActiveStatus === \"Active\" ? \"success\" : \"danger\";\n    const statusType = {\n      TO_DO: \"To-Do\",\n      IN_PROGRESS: \"In Progress\",\n      COMPLETED: \"Completed\",\n      SUSPENDED: \"Suspended\"\n    };\n    const soonDue = prj.soonDue ? /*#__PURE__*/_jsxDEV(Badge, {\n      bg: \"info\",\n      children: \"Soon Due\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 35\n    }, this) : \"\";\n    const prjData = {\n      projectActiveStatus: /*#__PURE__*/_jsxDEV(Badge, {\n        bg: BadgeType,\n        children: ActiveStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 28\n      }, this),\n      projectDueStatus: soonDue,\n      pName: prj.projectName,\n      projectStatus: statusType[prj.status]\n    };\n    return prjData;\n  });\n  const columns = [{\n    dataField: \"projectActiveStatus\",\n    text: \"\",\n    headerStyle: (colum, colIndex) => {\n      return {\n        width: \"80px\",\n        textAlign: \"center\"\n      };\n    }\n  }, {\n    dataField: \"projectDueStatus\",\n    text: \"\",\n    headerStyle: (colum, colIndex) => {\n      return {\n        width: \"100px\",\n        textAlign: \"center\"\n      };\n    }\n  }, {\n    dataField: \"pName\",\n    text: \"Project Name\",\n    sort: true,\n    sortCaret: SortCaret\n  }, {\n    dataField: \"projectStatus\",\n    text: \"Status\",\n    sort: true,\n    sortCaret: SortCaret\n  }];\n  const defaultSorted = [{\n    dataField: \"projectCode\",\n    order: \"asc\" //desc\n\n  }];\n\n  const customTotal = (from, to, size) => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"react-bootstrap-table-pagination-total\",\n    children: [\"\\xA0 Showing \", from, \" to \", to, \" of \", size, \" Results\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n\n  const options = {\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    disablePageTitle: true,\n    sizePerPageList: [{\n      text: \"5\",\n      value: 5\n    }, {\n      text: \"10\",\n      value: 10\n    }, {\n      text: \"All\",\n      value: projectData.length\n    }]\n  };\n  const {\n    SearchBar\n  } = Search;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"ms-5\",\n    style: {\n      width: \"95%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      as: \"h4\",\n      children: \"MY PROJECTS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n        keyField: \"projectCode\",\n        data: projectData,\n        columns: columns,\n        search: true,\n        children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(SearchBar, { ...props.searchProps,\n            srText: \"Search Projects :\",\n            placeholder: \"Enter text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, { ...props.baseProps,\n            hover: true,\n            defaultSorted: defaultSorted,\n            pagination: paginationFactory(options),\n            noDataIndication: \"No data available in table\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"YY8sXwn/DkmRci+AETybQmJeGJ8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Home.js"],"names":["React","useSelector","BootstrapTable","paginationFactory","ToolkitProvider","Search","Card","Badge","useDispatch","useEffect","getProjects","Home","dispatch","then","console","log","catch","SortCaret","order","column","projects","content","state","project","projectData","map","prj","ActiveStatus","active","BadgeType","statusType","TO_DO","IN_PROGRESS","COMPLETED","SUSPENDED","soonDue","prjData","projectActiveStatus","projectDueStatus","pName","projectName","projectStatus","status","columns","dataField","text","headerStyle","colum","colIndex","width","textAlign","sort","sortCaret","defaultSorted","customTotal","from","to","size","options","showTotal","paginationTotalRenderer","disablePageTitle","sizePerPageList","value","length","SearchBar","props","searchProps","baseProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { Card, Badge, } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getProjects } from \"../actions/project\";\n\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getProjects())\n      .then(() => {\n        console.log(\"Projects fetched successfully\");\n      })\n      .catch(() => {\n        console.log(\"Unable to fetch projects\");\n      });\n  }, [dispatch]);\n\n  const SortCaret = (order, column) => {\n    if (!order)\n      return (\n        <span class=\"float-end\">\n          <font color=\"grey\">\n            &nbsp;&nbsp;<i class=\"bi bi-caret-up-fill\"></i>\n            <i class=\"bi bi-caret-down-fill\"></i>\n          </font>\n        </span>\n      );\n    else if (order === \"asc\")\n      return (\n        <span class=\"float-end\">\n          &nbsp;&nbsp;<i class=\"bi bi-caret-up-fill\"></i>\n          <font color=\"grey\">\n            <i class=\"bi bi-caret-down-fill\"></i>\n          </font>\n        </span>\n      );\n    else if (order === \"desc\")\n      return (\n        <span class=\"float-end\">\n          &nbsp;&nbsp;\n          <font color=\"grey\">\n            <i class=\"bi bi-caret-up-fill\"></i>\n          </font>\n          <i class=\"bi bi-caret-down-fill\"></i>\n        </span>\n      );\n    return null;\n  };\n  const { projects: content } = useSelector((state) => state.project);\n  const projectData = content.map((prj) => {\n    const ActiveStatus = prj.active ? \"Active\" : \"Inactive\";\n    const BadgeType = ActiveStatus === \"Active\" ? \"success\" : \"danger\";\n    const statusType = {\n      TO_DO: \"To-Do\",\n      IN_PROGRESS: \"In Progress\",\n      COMPLETED: \"Completed\",\n      SUSPENDED: \"Suspended\",\n    };\n    const soonDue = prj.soonDue ? <Badge bg=\"info\">Soon Due</Badge> : \"\";\n    const prjData = {\n      projectActiveStatus: <Badge bg={BadgeType}>{ActiveStatus}</Badge>,\n      projectDueStatus: soonDue,\n      pName: prj.projectName,\n      projectStatus: statusType[prj.status],\n    };\n    return prjData;\n  });\n\n  const columns = [\n    {\n      dataField: \"projectActiveStatus\",\n      text: \"\",\n      headerStyle: (colum, colIndex) => {\n        return { width: \"80px\", textAlign: \"center\" };\n      },\n    },\n    {\n      dataField: \"projectDueStatus\",\n      text: \"\",\n      headerStyle: (colum, colIndex) => {\n        return { width: \"100px\", textAlign: \"center\" };\n      },\n    },\n    {\n      dataField: \"pName\",\n      text: \"Project Name\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"projectStatus\",\n      text: \"Status\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"projectCode\",\n      order: \"asc\", //desc\n    },\n  ];\n\n  const customTotal = (from, to, size) => (\n    <span className=\"react-bootstrap-table-pagination-total\">\n      &nbsp; Showing {from} to {to} of {size} Results\n    </span>\n  );\n\n  const options = {\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    disablePageTitle: true,\n    sizePerPageList: [\n      {\n        text: \"5\",\n        value: 5,\n      },\n      {\n        text: \"10\",\n        value: 10,\n      },\n      {\n        text: \"All\",\n        value: projectData.length,\n      },\n    ],\n  };\n\n  const { SearchBar } = Search;\n\n  return (\n    <Card className=\"ms-5\" style={{ width: \"95%\" }}>\n      <Card.Header as=\"h4\">\n        MY PROJECTS\n      </Card.Header>\n      <Card.Body>\n        <ToolkitProvider\n          keyField=\"projectCode\"\n          data={projectData}\n          columns={columns}\n          search\n        >\n          {(props) => (\n            <div>\n              <SearchBar\n                {...props.searchProps}\n                srText=\"Search Projects :\"\n                placeholder=\"Enter text\"\n              />\n              <br />\n              <BootstrapTable\n                {...props.baseProps}\n                hover\n                defaultSorted={defaultSorted}\n                pagination={paginationFactory(options)}\n                noDataIndication=\"No data available in table\"\n              />\n            </div>\n          )}\n        </ToolkitProvider>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}