{"ast":null,"code":"var _jsxFileName = \"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/FileUpload.js\";\nimport React from 'react';\nimport 'react-dropzone-uploader/dist/styles.css';\nimport Dropzone from 'react-dropzone-uploader';\nimport { getDroppedOrSelectedFiles } from 'html5-file-selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileUpload = () => {\n  const fileParams = ({\n    meta\n  }) => {\n    return {\n      url: 'https://httpbin.org/post'\n    };\n  };\n\n  const onFileChange = ({\n    meta,\n    file\n  }, status) => {\n    console.log(status, meta, file);\n  };\n\n  const onSubmit = (files, allFiles) => {\n    allFiles.forEach(f => f.remove());\n  };\n\n  const getFilesFromEvent = e => {\n    return new Promise(resolve => {\n      getDroppedOrSelectedFiles(e).then(chosenFiles => {\n        resolve(chosenFiles.map(f => f.fileObject));\n      });\n    });\n  };\n\n  const selectFileInput = ({\n    accept,\n    onFiles,\n    files,\n    getFilesFromEvent\n  }) => {\n    const textMsg = files.length > 0 ? 'Upload Again' : 'Select Files';\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"btn btn-danger mt-4\",\n      children: [textMsg, /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          display: 'none'\n        },\n        type: \"file\",\n        accept: accept,\n        multiple: true,\n        onChange: e => {\n          getFilesFromEvent(e).then(chosenFiles => {\n            onFiles(chosenFiles);\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dropzone, {\n    onSubmit: onSubmit,\n    onChangeStatus: onFileChange,\n    InputComponent: selectFileInput,\n    getUploadParams: fileParams,\n    getFilesFromEvent: getFilesFromEvent,\n    accept: \"image/*,*.pdf\",\n    maxFiles: 5,\n    inputContent: \"Drop A File\",\n    styles: {\n      dropzone: {\n        width: 600,\n        height: 400\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/FileUpload.js"],"names":["React","Dropzone","getDroppedOrSelectedFiles","FileUpload","fileParams","meta","url","onFileChange","file","status","console","log","onSubmit","files","allFiles","forEach","f","remove","getFilesFromEvent","e","Promise","resolve","then","chosenFiles","map","fileObject","selectFileInput","accept","onFiles","textMsg","length","display","dropzone","width","height","dropzoneActive","borderColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yCAAP;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,yBAAT,QAA0C,qBAA1C;;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAErB,QAAMC,UAAU,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAc;AAC7B,WAAO;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAAP;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAG,CAAC;AAAEF,IAAAA,IAAF;AAAQG,IAAAA;AAAR,GAAD,EAAiBC,MAAjB,KAA4B;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoBJ,IAApB,EAA0BG,IAA1B;AACH,GAFD;;AAIA,QAAMI,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAClCA,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,CAAC,IAAIA,CAAC,CAACC,MAAF,EAAtB;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAGC,CAAC,IAAI;AAC3B,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC1BnB,MAAAA,yBAAyB,CAACiB,CAAD,CAAzB,CAA6BG,IAA7B,CAAkCC,WAAW,IAAI;AAC7CF,QAAAA,OAAO,CAACE,WAAW,CAACC,GAAZ,CAAgBR,CAAC,IAAIA,CAAC,CAACS,UAAvB,CAAD,CAAP;AACH,OAFD;AAGH,KAJM,CAAP;AAKH,GAND;;AAQA,QAAMC,eAAe,GAAG,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBf,IAAAA,KAAnB;AAA0BK,IAAAA;AAA1B,GAAD,KAAmD;AACvE,UAAMW,OAAO,GAAGhB,KAAK,CAACiB,MAAN,GAAe,CAAf,GAAmB,cAAnB,GAAoC,cAApD;AAEA,wBACI;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAA,iBACKD,OADL,eAEI;AACI,QAAA,KAAK,EAAE;AAAEE,UAAAA,OAAO,EAAE;AAAX,SADX;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,MAAM,EAAEJ,MAHZ;AAII,QAAA,QAAQ,MAJZ;AAKI,QAAA,QAAQ,EAAER,CAAC,IAAI;AACXD,UAAAA,iBAAiB,CAACC,CAAD,CAAjB,CAAqBG,IAArB,CAA0BC,WAAW,IAAI;AACrCK,YAAAA,OAAO,CAACL,WAAD,CAAP;AACH,WAFD;AAGH;AATL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH,GAnBD;;AAqBA,sBACI,QAAC,QAAD;AACI,IAAA,QAAQ,EAAEX,QADd;AAEI,IAAA,cAAc,EAAEL,YAFpB;AAGI,IAAA,cAAc,EAAEmB,eAHpB;AAII,IAAA,eAAe,EAAEtB,UAJrB;AAKI,IAAA,iBAAiB,EAAEc,iBALvB;AAMI,IAAA,MAAM,EAAC,eANX;AAOI,IAAA,QAAQ,EAAE,CAPd;AAQI,IAAA,YAAY,EAAC,aARjB;AASI,IAAA,MAAM,EAAE;AACJc,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OADN;AAEJC,MAAAA,cAAc,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf;AAFZ;AATZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA3DD;;KAAMjC,U;AA6DN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport 'react-dropzone-uploader/dist/styles.css'\nimport Dropzone from 'react-dropzone-uploader'\nimport { getDroppedOrSelectedFiles } from 'html5-file-selector'\n\n\nconst FileUpload = () => {\n\n    const fileParams = ({ meta }) => {\n        return { url: 'https://httpbin.org/post' }\n    }\n\n    const onFileChange = ({ meta, file }, status) => { \n        console.log(status, meta, file) \n    }\n\n    const onSubmit = (files, allFiles) => {\n        allFiles.forEach(f => f.remove())\n    }\n\n    const getFilesFromEvent = e => {\n        return new Promise(resolve => {\n            getDroppedOrSelectedFiles(e).then(chosenFiles => {\n                resolve(chosenFiles.map(f => f.fileObject))\n            })\n        })\n    }\n\n    const selectFileInput = ({ accept, onFiles, files, getFilesFromEvent }) => {\n        const textMsg = files.length > 0 ? 'Upload Again' : 'Select Files'\n\n        return (\n            <label className=\"btn btn-danger mt-4\">\n                {textMsg}\n                <input\n                    style={{ display: 'none' }}\n                    type=\"file\"\n                    accept={accept}\n                    multiple\n                    onChange={e => {\n                        getFilesFromEvent(e).then(chosenFiles => {\n                            onFiles(chosenFiles)\n                        })\n                    }}\n                />\n            </label>\n        )\n    }\n\n    return (\n        <Dropzone\n            onSubmit={onSubmit}\n            onChangeStatus={onFileChange}\n            InputComponent={selectFileInput}\n            getUploadParams={fileParams}\n            getFilesFromEvent={getFilesFromEvent}\n            accept=\"image/*,*.pdf\"\n            maxFiles={5}\n            inputContent=\"Drop A File\"\n            styles={{\n                dropzone: { width: 600, height: 400 },\n                dropzoneActive: { borderColor: 'green' },\n            }}            \n        />\n    );\n};\n\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}