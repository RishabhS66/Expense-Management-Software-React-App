{"ast":null,"code":"import { createStyleFunction, createParser } from '@styled-system/core'; // v4 api shims\n\nimport layout from '@styled-system/layout';\nimport color from '@styled-system/color';\nimport typography from '@styled-system/typography';\nimport flexbox from '@styled-system/flexbox';\nimport grid from '@styled-system/grid';\nimport border from '@styled-system/border';\nimport background from '@styled-system/background';\nimport position from '@styled-system/position';\nexport { get, createParser, createStyleFunction, compose, system } from '@styled-system/core';\nexport { margin, padding, space } from '@styled-system/space';\nexport { color } from '@styled-system/color';\nexport { layout } from '@styled-system/layout';\nexport { typography } from '@styled-system/typography';\nexport { flexbox } from '@styled-system/flexbox';\nexport { border } from '@styled-system/border';\nexport { background } from '@styled-system/background';\nexport { position } from '@styled-system/position';\nexport { grid } from '@styled-system/grid';\nexport { shadow } from '@styled-system/shadow';\nexport { default as boxShadow, default as textShadow } from '@styled-system/shadow';\nexport { variant, buttonStyle, textStyle, colorStyle } from '@styled-system/variant';\nvar width = layout.width,\n    height = layout.height,\n    minWidth = layout.minWidth,\n    minHeight = layout.minHeight,\n    maxWidth = layout.maxWidth,\n    maxHeight = layout.maxHeight,\n    size = layout.size,\n    verticalAlign = layout.verticalAlign,\n    display = layout.display,\n    overflow = layout.overflow,\n    overflowX = layout.overflowX,\n    overflowY = layout.overflowY;\nvar opacity = color.opacity;\nvar fontSize = typography.fontSize,\n    fontFamily = typography.fontFamily,\n    fontWeight = typography.fontWeight,\n    lineHeight = typography.lineHeight,\n    textAlign = typography.textAlign,\n    fontStyle = typography.fontStyle,\n    letterSpacing = typography.letterSpacing;\nvar alignItems = flexbox.alignItems,\n    alignContent = flexbox.alignContent,\n    justifyItems = flexbox.justifyItems,\n    justifyContent = flexbox.justifyContent,\n    flexWrap = flexbox.flexWrap,\n    flexDirection = flexbox.flexDirection,\n    flex = flexbox.flex,\n    flexGrow = flexbox.flexGrow,\n    flexShrink = flexbox.flexShrink,\n    flexBasis = flexbox.flexBasis,\n    justifySelf = flexbox.justifySelf,\n    alignSelf = flexbox.alignSelf,\n    order = flexbox.order;\nvar gridGap = grid.gridGap,\n    gridColumnGap = grid.gridColumnGap,\n    gridRowGap = grid.gridRowGap,\n    gridColumn = grid.gridColumn,\n    gridRow = grid.gridRow,\n    gridAutoFlow = grid.gridAutoFlow,\n    gridAutoColumns = grid.gridAutoColumns,\n    gridAutoRows = grid.gridAutoRows,\n    gridTemplateColumns = grid.gridTemplateColumns,\n    gridTemplateRows = grid.gridTemplateRows,\n    gridTemplateAreas = grid.gridTemplateAreas,\n    gridArea = grid.gridArea;\nvar borderWidth = border.borderWidth,\n    borderStyle = border.borderStyle,\n    borderColor = border.borderColor,\n    borderTop = border.borderTop,\n    borderRight = border.borderRight,\n    borderBottom = border.borderBottom,\n    borderLeft = border.borderLeft,\n    borderRadius = border.borderRadius;\nvar backgroundImage = background.backgroundImage,\n    backgroundSize = background.backgroundSize,\n    backgroundPosition = background.backgroundPosition,\n    backgroundRepeat = background.backgroundRepeat;\nvar zIndex = position.zIndex,\n    top = position.top,\n    right = position.right,\n    bottom = position.bottom,\n    left = position.left;\nexport { default as borders } from '@styled-system/border';\nexport { width, height, minWidth, minHeight, maxWidth, maxHeight, size, verticalAlign, display, overflow, overflowX, overflowY // color\n, opacity // typography\n, fontSize, fontFamily, fontWeight, lineHeight, textAlign, fontStyle, letterSpacing // flexbox\n, alignItems, alignContent, justifyItems, justifyContent, flexWrap, flexDirection, flex, flexGrow, flexShrink, flexBasis, justifySelf, alignSelf, order // grid\n, gridGap, gridColumnGap, gridRowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea // border\n, borderWidth, borderStyle, borderColor, borderTop, borderRight, borderBottom, borderLeft, borderRadius // background\n, backgroundImage, backgroundSize, backgroundPosition, backgroundRepeat // position\n, zIndex, top, right, bottom, left }; // v4 style API shim\n\nexport var style = function style(_ref) {\n  var prop = _ref.prop,\n      cssProperty = _ref.cssProperty,\n      alias = _ref.alias,\n      key = _ref.key,\n      transformValue = _ref.transformValue,\n      scale = _ref.scale,\n      properties = _ref.properties;\n  var config = {};\n  config[prop] = createStyleFunction({\n    properties: properties,\n    property: cssProperty || prop,\n    scale: key,\n    defaultScale: scale,\n    transform: transformValue\n  });\n  if (alias) config[alias] = config[prop];\n  var parse = createParser(config);\n  return parse;\n};","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/node_modules/styled-system/dist/index.esm.js"],"names":["createStyleFunction","createParser","layout","color","typography","flexbox","grid","border","background","position","get","compose","system","margin","padding","space","shadow","default","boxShadow","textShadow","variant","buttonStyle","textStyle","colorStyle","width","height","minWidth","minHeight","maxWidth","maxHeight","size","verticalAlign","display","overflow","overflowX","overflowY","opacity","fontSize","fontFamily","fontWeight","lineHeight","textAlign","fontStyle","letterSpacing","alignItems","alignContent","justifyItems","justifyContent","flexWrap","flexDirection","flex","flexGrow","flexShrink","flexBasis","justifySelf","alignSelf","order","gridGap","gridColumnGap","gridRowGap","gridColumn","gridRow","gridAutoFlow","gridAutoColumns","gridAutoRows","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","gridArea","borderWidth","borderStyle","borderColor","borderTop","borderRight","borderBottom","borderLeft","borderRadius","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","zIndex","top","right","bottom","left","borders","style","_ref","prop","cssProperty","alias","key","transformValue","scale","properties","config","property","defaultScale","transform","parse"],"mappings":"AAAA,SAASA,mBAAT,EAA8BC,YAA9B,QAAkD,qBAAlD,C,CAAyE;;AAEzE,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,GAAT,EAAcT,YAAd,EAA4BD,mBAA5B,EAAiDW,OAAjD,EAA0DC,MAA1D,QAAwE,qBAAxE;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,KAA1B,QAAuC,sBAAvC;AACA,SAASZ,KAAT,QAAsB,sBAAtB;AACA,SAASD,MAAT,QAAuB,uBAAvB;AACA,SAASE,UAAT,QAA2B,2BAA3B;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASE,MAAT,QAAuB,uBAAvB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASH,IAAT,QAAqB,qBAArB;AACA,SAASU,MAAT,QAAuB,uBAAvB;AACA,SAASC,OAAO,IAAIC,SAApB,EAA+BD,OAAO,IAAIE,UAA1C,QAA4D,uBAA5D;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,SAA/B,EAA0CC,UAA1C,QAA4D,wBAA5D;AACA,IAAIC,KAAK,GAAGtB,MAAM,CAACsB,KAAnB;AAAA,IACIC,MAAM,GAAGvB,MAAM,CAACuB,MADpB;AAAA,IAEIC,QAAQ,GAAGxB,MAAM,CAACwB,QAFtB;AAAA,IAGIC,SAAS,GAAGzB,MAAM,CAACyB,SAHvB;AAAA,IAIIC,QAAQ,GAAG1B,MAAM,CAAC0B,QAJtB;AAAA,IAKIC,SAAS,GAAG3B,MAAM,CAAC2B,SALvB;AAAA,IAMIC,IAAI,GAAG5B,MAAM,CAAC4B,IANlB;AAAA,IAOIC,aAAa,GAAG7B,MAAM,CAAC6B,aAP3B;AAAA,IAQIC,OAAO,GAAG9B,MAAM,CAAC8B,OARrB;AAAA,IASIC,QAAQ,GAAG/B,MAAM,CAAC+B,QATtB;AAAA,IAUIC,SAAS,GAAGhC,MAAM,CAACgC,SAVvB;AAAA,IAWIC,SAAS,GAAGjC,MAAM,CAACiC,SAXvB;AAYA,IAAIC,OAAO,GAAGjC,KAAK,CAACiC,OAApB;AACA,IAAIC,QAAQ,GAAGjC,UAAU,CAACiC,QAA1B;AAAA,IACIC,UAAU,GAAGlC,UAAU,CAACkC,UAD5B;AAAA,IAEIC,UAAU,GAAGnC,UAAU,CAACmC,UAF5B;AAAA,IAGIC,UAAU,GAAGpC,UAAU,CAACoC,UAH5B;AAAA,IAIIC,SAAS,GAAGrC,UAAU,CAACqC,SAJ3B;AAAA,IAKIC,SAAS,GAAGtC,UAAU,CAACsC,SAL3B;AAAA,IAMIC,aAAa,GAAGvC,UAAU,CAACuC,aAN/B;AAOA,IAAIC,UAAU,GAAGvC,OAAO,CAACuC,UAAzB;AAAA,IACIC,YAAY,GAAGxC,OAAO,CAACwC,YAD3B;AAAA,IAEIC,YAAY,GAAGzC,OAAO,CAACyC,YAF3B;AAAA,IAGIC,cAAc,GAAG1C,OAAO,CAAC0C,cAH7B;AAAA,IAIIC,QAAQ,GAAG3C,OAAO,CAAC2C,QAJvB;AAAA,IAKIC,aAAa,GAAG5C,OAAO,CAAC4C,aAL5B;AAAA,IAMIC,IAAI,GAAG7C,OAAO,CAAC6C,IANnB;AAAA,IAOIC,QAAQ,GAAG9C,OAAO,CAAC8C,QAPvB;AAAA,IAQIC,UAAU,GAAG/C,OAAO,CAAC+C,UARzB;AAAA,IASIC,SAAS,GAAGhD,OAAO,CAACgD,SATxB;AAAA,IAUIC,WAAW,GAAGjD,OAAO,CAACiD,WAV1B;AAAA,IAWIC,SAAS,GAAGlD,OAAO,CAACkD,SAXxB;AAAA,IAYIC,KAAK,GAAGnD,OAAO,CAACmD,KAZpB;AAaA,IAAIC,OAAO,GAAGnD,IAAI,CAACmD,OAAnB;AAAA,IACIC,aAAa,GAAGpD,IAAI,CAACoD,aADzB;AAAA,IAEIC,UAAU,GAAGrD,IAAI,CAACqD,UAFtB;AAAA,IAGIC,UAAU,GAAGtD,IAAI,CAACsD,UAHtB;AAAA,IAIIC,OAAO,GAAGvD,IAAI,CAACuD,OAJnB;AAAA,IAKIC,YAAY,GAAGxD,IAAI,CAACwD,YALxB;AAAA,IAMIC,eAAe,GAAGzD,IAAI,CAACyD,eAN3B;AAAA,IAOIC,YAAY,GAAG1D,IAAI,CAAC0D,YAPxB;AAAA,IAQIC,mBAAmB,GAAG3D,IAAI,CAAC2D,mBAR/B;AAAA,IASIC,gBAAgB,GAAG5D,IAAI,CAAC4D,gBAT5B;AAAA,IAUIC,iBAAiB,GAAG7D,IAAI,CAAC6D,iBAV7B;AAAA,IAWIC,QAAQ,GAAG9D,IAAI,CAAC8D,QAXpB;AAYA,IAAIC,WAAW,GAAG9D,MAAM,CAAC8D,WAAzB;AAAA,IACIC,WAAW,GAAG/D,MAAM,CAAC+D,WADzB;AAAA,IAEIC,WAAW,GAAGhE,MAAM,CAACgE,WAFzB;AAAA,IAGIC,SAAS,GAAGjE,MAAM,CAACiE,SAHvB;AAAA,IAIIC,WAAW,GAAGlE,MAAM,CAACkE,WAJzB;AAAA,IAKIC,YAAY,GAAGnE,MAAM,CAACmE,YAL1B;AAAA,IAMIC,UAAU,GAAGpE,MAAM,CAACoE,UANxB;AAAA,IAOIC,YAAY,GAAGrE,MAAM,CAACqE,YAP1B;AAQA,IAAIC,eAAe,GAAGrE,UAAU,CAACqE,eAAjC;AAAA,IACIC,cAAc,GAAGtE,UAAU,CAACsE,cADhC;AAAA,IAEIC,kBAAkB,GAAGvE,UAAU,CAACuE,kBAFpC;AAAA,IAGIC,gBAAgB,GAAGxE,UAAU,CAACwE,gBAHlC;AAIA,IAAIC,MAAM,GAAGxE,QAAQ,CAACwE,MAAtB;AAAA,IACIC,GAAG,GAAGzE,QAAQ,CAACyE,GADnB;AAAA,IAEIC,KAAK,GAAG1E,QAAQ,CAAC0E,KAFrB;AAAA,IAGIC,MAAM,GAAG3E,QAAQ,CAAC2E,MAHtB;AAAA,IAIIC,IAAI,GAAG5E,QAAQ,CAAC4E,IAJpB;AAKA,SAASpE,OAAO,IAAIqE,OAApB,QAAmC,uBAAnC;AACA,SAAS9D,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,EAA6CC,QAA7C,EAAuDC,SAAvD,EAAkEC,IAAlE,EAAwEC,aAAxE,EAAuFC,OAAvF,EAAgGC,QAAhG,EAA0GC,SAA1G,EAAqHC,SAArH,CAA+H;AAA/H,EACEC,OADF,CACU;AADV,EAEEC,QAFF,EAEYC,UAFZ,EAEwBC,UAFxB,EAEoCC,UAFpC,EAEgDC,SAFhD,EAE2DC,SAF3D,EAEsEC,aAFtE,CAEoF;AAFpF,EAGEC,UAHF,EAGcC,YAHd,EAG4BC,YAH5B,EAG0CC,cAH1C,EAG0DC,QAH1D,EAGoEC,aAHpE,EAGmFC,IAHnF,EAGyFC,QAHzF,EAGmGC,UAHnG,EAG+GC,SAH/G,EAG0HC,WAH1H,EAGuIC,SAHvI,EAGkJC,KAHlJ,CAGwJ;AAHxJ,EAIEC,OAJF,EAIWC,aAJX,EAI0BC,UAJ1B,EAIsCC,UAJtC,EAIkDC,OAJlD,EAI2DC,YAJ3D,EAIyEC,eAJzE,EAI0FC,YAJ1F,EAIwGC,mBAJxG,EAI6HC,gBAJ7H,EAI+IC,iBAJ/I,EAIkKC,QAJlK,CAI2K;AAJ3K,EAKEC,WALF,EAKeC,WALf,EAK4BC,WAL5B,EAKyCC,SALzC,EAKoDC,WALpD,EAKiEC,YALjE,EAK+EC,UAL/E,EAK2FC,YAL3F,CAKwG;AALxG,EAMEC,eANF,EAMmBC,cANnB,EAMmCC,kBANnC,EAMuDC,gBANvD,CAMwE;AANxE,EAOEC,MAPF,EAOUC,GAPV,EAOeC,KAPf,EAOsBC,MAPtB,EAO8BC,IAP9B,G,CAOsC;;AAEtC,OAAO,IAAIE,KAAK,GAAG,SAASA,KAAT,CAAeC,IAAf,EAAqB;AACtC,MAAIC,IAAI,GAAGD,IAAI,CAACC,IAAhB;AAAA,MACIC,WAAW,GAAGF,IAAI,CAACE,WADvB;AAAA,MAEIC,KAAK,GAAGH,IAAI,CAACG,KAFjB;AAAA,MAGIC,GAAG,GAAGJ,IAAI,CAACI,GAHf;AAAA,MAIIC,cAAc,GAAGL,IAAI,CAACK,cAJ1B;AAAA,MAKIC,KAAK,GAAGN,IAAI,CAACM,KALjB;AAAA,MAMIC,UAAU,GAAGP,IAAI,CAACO,UANtB;AAOA,MAAIC,MAAM,GAAG,EAAb;AACAA,EAAAA,MAAM,CAACP,IAAD,CAAN,GAAezF,mBAAmB,CAAC;AACjC+F,IAAAA,UAAU,EAAEA,UADqB;AAEjCE,IAAAA,QAAQ,EAAEP,WAAW,IAAID,IAFQ;AAGjCK,IAAAA,KAAK,EAAEF,GAH0B;AAIjCM,IAAAA,YAAY,EAAEJ,KAJmB;AAKjCK,IAAAA,SAAS,EAAEN;AALsB,GAAD,CAAlC;AAOA,MAAIF,KAAJ,EAAWK,MAAM,CAACL,KAAD,CAAN,GAAgBK,MAAM,CAACP,IAAD,CAAtB;AACX,MAAIW,KAAK,GAAGnG,YAAY,CAAC+F,MAAD,CAAxB;AACA,SAAOI,KAAP;AACD,CAnBM","sourcesContent":["import { createStyleFunction, createParser } from '@styled-system/core'; // v4 api shims\n\nimport layout from '@styled-system/layout';\nimport color from '@styled-system/color';\nimport typography from '@styled-system/typography';\nimport flexbox from '@styled-system/flexbox';\nimport grid from '@styled-system/grid';\nimport border from '@styled-system/border';\nimport background from '@styled-system/background';\nimport position from '@styled-system/position';\nexport { get, createParser, createStyleFunction, compose, system } from '@styled-system/core';\nexport { margin, padding, space } from '@styled-system/space';\nexport { color } from '@styled-system/color';\nexport { layout } from '@styled-system/layout';\nexport { typography } from '@styled-system/typography';\nexport { flexbox } from '@styled-system/flexbox';\nexport { border } from '@styled-system/border';\nexport { background } from '@styled-system/background';\nexport { position } from '@styled-system/position';\nexport { grid } from '@styled-system/grid';\nexport { shadow } from '@styled-system/shadow';\nexport { default as boxShadow, default as textShadow } from '@styled-system/shadow';\nexport { variant, buttonStyle, textStyle, colorStyle } from '@styled-system/variant';\nvar width = layout.width,\n    height = layout.height,\n    minWidth = layout.minWidth,\n    minHeight = layout.minHeight,\n    maxWidth = layout.maxWidth,\n    maxHeight = layout.maxHeight,\n    size = layout.size,\n    verticalAlign = layout.verticalAlign,\n    display = layout.display,\n    overflow = layout.overflow,\n    overflowX = layout.overflowX,\n    overflowY = layout.overflowY;\nvar opacity = color.opacity;\nvar fontSize = typography.fontSize,\n    fontFamily = typography.fontFamily,\n    fontWeight = typography.fontWeight,\n    lineHeight = typography.lineHeight,\n    textAlign = typography.textAlign,\n    fontStyle = typography.fontStyle,\n    letterSpacing = typography.letterSpacing;\nvar alignItems = flexbox.alignItems,\n    alignContent = flexbox.alignContent,\n    justifyItems = flexbox.justifyItems,\n    justifyContent = flexbox.justifyContent,\n    flexWrap = flexbox.flexWrap,\n    flexDirection = flexbox.flexDirection,\n    flex = flexbox.flex,\n    flexGrow = flexbox.flexGrow,\n    flexShrink = flexbox.flexShrink,\n    flexBasis = flexbox.flexBasis,\n    justifySelf = flexbox.justifySelf,\n    alignSelf = flexbox.alignSelf,\n    order = flexbox.order;\nvar gridGap = grid.gridGap,\n    gridColumnGap = grid.gridColumnGap,\n    gridRowGap = grid.gridRowGap,\n    gridColumn = grid.gridColumn,\n    gridRow = grid.gridRow,\n    gridAutoFlow = grid.gridAutoFlow,\n    gridAutoColumns = grid.gridAutoColumns,\n    gridAutoRows = grid.gridAutoRows,\n    gridTemplateColumns = grid.gridTemplateColumns,\n    gridTemplateRows = grid.gridTemplateRows,\n    gridTemplateAreas = grid.gridTemplateAreas,\n    gridArea = grid.gridArea;\nvar borderWidth = border.borderWidth,\n    borderStyle = border.borderStyle,\n    borderColor = border.borderColor,\n    borderTop = border.borderTop,\n    borderRight = border.borderRight,\n    borderBottom = border.borderBottom,\n    borderLeft = border.borderLeft,\n    borderRadius = border.borderRadius;\nvar backgroundImage = background.backgroundImage,\n    backgroundSize = background.backgroundSize,\n    backgroundPosition = background.backgroundPosition,\n    backgroundRepeat = background.backgroundRepeat;\nvar zIndex = position.zIndex,\n    top = position.top,\n    right = position.right,\n    bottom = position.bottom,\n    left = position.left;\nexport { default as borders } from '@styled-system/border';\nexport { width, height, minWidth, minHeight, maxWidth, maxHeight, size, verticalAlign, display, overflow, overflowX, overflowY // color\n, opacity // typography\n, fontSize, fontFamily, fontWeight, lineHeight, textAlign, fontStyle, letterSpacing // flexbox\n, alignItems, alignContent, justifyItems, justifyContent, flexWrap, flexDirection, flex, flexGrow, flexShrink, flexBasis, justifySelf, alignSelf, order // grid\n, gridGap, gridColumnGap, gridRowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea // border\n, borderWidth, borderStyle, borderColor, borderTop, borderRight, borderBottom, borderLeft, borderRadius // background\n, backgroundImage, backgroundSize, backgroundPosition, backgroundRepeat // position\n, zIndex, top, right, bottom, left }; // v4 style API shim\n\nexport var style = function style(_ref) {\n  var prop = _ref.prop,\n      cssProperty = _ref.cssProperty,\n      alias = _ref.alias,\n      key = _ref.key,\n      transformValue = _ref.transformValue,\n      scale = _ref.scale,\n      properties = _ref.properties;\n  var config = {};\n  config[prop] = createStyleFunction({\n    properties: properties,\n    property: cssProperty || prop,\n    scale: key,\n    defaultScale: scale,\n    transform: transformValue\n  });\n  if (alias) config[alias] = config[prop];\n  var parse = createParser(config);\n  return parse;\n};\n"]},"metadata":{},"sourceType":"module"}