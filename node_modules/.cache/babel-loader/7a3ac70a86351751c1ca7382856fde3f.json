{"ast":null,"code":"var tabbable = require('tabbable');\n\nvar xtend = require('xtend');\n\nvar activeFocusDelay;\n\nvar activeFocusTraps = function () {\n  var trapQueue = [];\n  return {\n    activateTrap: function (trap) {\n      if (trapQueue.length > 0) {\n        var activeTrap = trapQueue[trapQueue.length - 1];\n\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n\n      var trapIndex = trapQueue.indexOf(trap);\n\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        // move this existing trap to the front of the queue\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n    deactivateTrap: function (trap) {\n      var trapIndex = trapQueue.indexOf(trap);\n\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    }\n  };\n}();\n\nfunction focusTrap(element, userOptions) {\n  var doc = document;\n  var container = typeof element === 'string' ? doc.querySelector(element) : element;\n  var config = xtend({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true\n  }, userOptions);\n  var state = {\n    firstTabbableNode: null,\n    lastTabbableNode: null,\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false\n  };\n  var trap = {\n    activate: activate,\n    deactivate: deactivate,\n    pause: pause,\n    unpause: unpause\n  };\n  return trap;\n\n  function activate(activateOptions) {\n    if (state.active) return;\n    updateTabbableNodes();\n    state.active = true;\n    state.paused = false;\n    state.nodeFocusedBeforeActivation = doc.activeElement;\n    var onActivate = activateOptions && activateOptions.onActivate ? activateOptions.onActivate : config.onActivate;\n\n    if (onActivate) {\n      onActivate();\n    }\n\n    addListeners();\n    return trap;\n  }\n\n  function deactivate(deactivateOptions) {\n    if (!state.active) return;\n    clearTimeout(activeFocusDelay);\n    removeListeners();\n    state.active = false;\n    state.paused = false;\n    activeFocusTraps.deactivateTrap(trap);\n    var onDeactivate = deactivateOptions && deactivateOptions.onDeactivate !== undefined ? deactivateOptions.onDeactivate : config.onDeactivate;\n\n    if (onDeactivate) {\n      onDeactivate();\n    }\n\n    var returnFocus = deactivateOptions && deactivateOptions.returnFocus !== undefined ? deactivateOptions.returnFocus : config.returnFocusOnDeactivate;\n\n    if (returnFocus) {\n      delay(function () {\n        tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n      });\n    }\n\n    return trap;\n  }\n\n  function pause() {\n    if (state.paused || !state.active) return;\n    state.paused = true;\n    removeListeners();\n  }\n\n  function unpause() {\n    if (!state.paused || !state.active) return;\n    state.paused = false;\n    updateTabbableNodes();\n    addListeners();\n  }\n\n  function addListeners() {\n    if (!state.active) return; // There can be only one listening focus trap at a time\n\n    activeFocusTraps.activateTrap(trap); // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n\n    activeFocusDelay = delay(function () {\n      tryFocus(getInitialFocusNode());\n    });\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false\n    });\n    return trap;\n  }\n\n  function removeListeners() {\n    if (!state.active) return;\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n    return trap;\n  }\n\n  function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    var node = optionValue;\n\n    if (!optionValue) {\n      return null;\n    }\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue);\n\n      if (!node) {\n        throw new Error('`' + optionName + '` refers to no known node');\n      }\n    }\n\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n\n      if (!node) {\n        throw new Error('`' + optionName + '` did not return a node');\n      }\n    }\n\n    return node;\n  }\n\n  function getInitialFocusNode() {\n    var node;\n\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (container.contains(doc.activeElement)) {\n      node = doc.activeElement;\n    } else {\n      node = state.firstTabbableNode || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error('Your focus-trap needs to have at least one focusable element');\n    }\n\n    return node;\n  }\n\n  function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus');\n    return node ? node : previousActiveElement;\n  } // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n\n\n  function checkPointerDown(e) {\n    if (container.contains(e.target)) return;\n\n    if (config.clickOutsideDeactivates) {\n      deactivate({\n        returnFocus: !tabbable.isFocusable(e.target)\n      });\n      return;\n    } // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n\n\n    if (config.allowOutsideClick && config.allowOutsideClick(e)) {\n      return;\n    }\n\n    e.preventDefault();\n  } // In case focus escapes the trap for some strange reason, pull it back in.\n\n\n  function checkFocusIn(e) {\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (container.contains(e.target) || e.target instanceof Document) {\n      return;\n    }\n\n    e.stopImmediatePropagation();\n    tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n  }\n\n  function checkKey(e) {\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      e.preventDefault();\n      deactivate();\n      return;\n    }\n\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  } // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n\n\n  function checkTab(e) {\n    updateTabbableNodes();\n\n    if (e.shiftKey && e.target === state.firstTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.lastTabbableNode);\n      return;\n    }\n\n    if (!e.shiftKey && e.target === state.lastTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.firstTabbableNode);\n      return;\n    }\n  }\n\n  function checkClick(e) {\n    if (config.clickOutsideDeactivates) return;\n    if (container.contains(e.target)) return;\n\n    if (config.allowOutsideClick && config.allowOutsideClick(e)) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function updateTabbableNodes() {\n    var tabbableNodes = tabbable(container);\n    state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();\n    state.lastTabbableNode = tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();\n  }\n\n  function tryFocus(node) {\n    if (node === doc.activeElement) return;\n\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus();\n    state.mostRecentlyFocusedNode = node;\n\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  }\n}\n\nfunction isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n}\n\nfunction isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n}\n\nfunction isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n}\n\nfunction delay(fn) {\n  return setTimeout(fn, 0);\n}\n\nmodule.exports = focusTrap;","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/node_modules/focus-trap/index.js"],"names":["tabbable","require","xtend","activeFocusDelay","activeFocusTraps","trapQueue","activateTrap","trap","length","activeTrap","pause","trapIndex","indexOf","push","splice","deactivateTrap","unpause","focusTrap","element","userOptions","doc","document","container","querySelector","config","returnFocusOnDeactivate","escapeDeactivates","state","firstTabbableNode","lastTabbableNode","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","active","paused","activate","deactivate","activateOptions","updateTabbableNodes","activeElement","onActivate","addListeners","deactivateOptions","clearTimeout","removeListeners","onDeactivate","undefined","returnFocus","delay","tryFocus","getReturnFocusNode","getInitialFocusNode","addEventListener","checkFocusIn","checkPointerDown","capture","passive","checkClick","checkKey","removeEventListener","getNodeForOption","optionName","optionValue","node","Error","contains","previousActiveElement","e","target","clickOutsideDeactivates","isFocusable","allowOutsideClick","preventDefault","Document","stopImmediatePropagation","isEscapeEvent","isTabEvent","checkTab","shiftKey","tabbableNodes","focus","isSelectableInput","select","tagName","toLowerCase","key","keyCode","fn","setTimeout","module","exports"],"mappings":"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","sourcesContent":["var tabbable = require('tabbable');\nvar xtend = require('xtend');\n\nvar activeFocusDelay;\n\nvar activeFocusTraps = (function() {\n  var trapQueue = [];\n  return {\n    activateTrap: function(trap) {\n      if (trapQueue.length > 0) {\n        var activeTrap = trapQueue[trapQueue.length - 1];\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n\n      var trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        // move this existing trap to the front of the queue\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n\n    deactivateTrap: function(trap) {\n      var trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    }\n  };\n})();\n\nfunction focusTrap(element, userOptions) {\n  var doc = document;\n  var container =\n    typeof element === 'string' ? doc.querySelector(element) : element;\n\n  var config = xtend(\n    {\n      returnFocusOnDeactivate: true,\n      escapeDeactivates: true\n    },\n    userOptions\n  );\n\n  var state = {\n    firstTabbableNode: null,\n    lastTabbableNode: null,\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false\n  };\n\n  var trap = {\n    activate: activate,\n    deactivate: deactivate,\n    pause: pause,\n    unpause: unpause\n  };\n\n  return trap;\n\n  function activate(activateOptions) {\n    if (state.active) return;\n\n    updateTabbableNodes();\n\n    state.active = true;\n    state.paused = false;\n    state.nodeFocusedBeforeActivation = doc.activeElement;\n\n    var onActivate =\n      activateOptions && activateOptions.onActivate\n        ? activateOptions.onActivate\n        : config.onActivate;\n    if (onActivate) {\n      onActivate();\n    }\n\n    addListeners();\n    return trap;\n  }\n\n  function deactivate(deactivateOptions) {\n    if (!state.active) return;\n\n    clearTimeout(activeFocusDelay);\n\n    removeListeners();\n    state.active = false;\n    state.paused = false;\n\n    activeFocusTraps.deactivateTrap(trap);\n\n    var onDeactivate =\n      deactivateOptions && deactivateOptions.onDeactivate !== undefined\n        ? deactivateOptions.onDeactivate\n        : config.onDeactivate;\n    if (onDeactivate) {\n      onDeactivate();\n    }\n\n    var returnFocus =\n      deactivateOptions && deactivateOptions.returnFocus !== undefined\n        ? deactivateOptions.returnFocus\n        : config.returnFocusOnDeactivate;\n    if (returnFocus) {\n      delay(function() {\n        tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n      });\n    }\n\n    return trap;\n  }\n\n  function pause() {\n    if (state.paused || !state.active) return;\n    state.paused = true;\n    removeListeners();\n  }\n\n  function unpause() {\n    if (!state.paused || !state.active) return;\n    state.paused = false;\n    updateTabbableNodes();\n    addListeners();\n  }\n\n  function addListeners() {\n    if (!state.active) return;\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    activeFocusDelay = delay(function() {\n      tryFocus(getInitialFocusNode());\n    });\n\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false\n    });\n\n    return trap;\n  }\n\n  function removeListeners() {\n    if (!state.active) return;\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    var node = optionValue;\n    if (!optionValue) {\n      return null;\n    }\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue);\n      if (!node) {\n        throw new Error('`' + optionName + '` refers to no known node');\n      }\n    }\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n      if (!node) {\n        throw new Error('`' + optionName + '` did not return a node');\n      }\n    }\n    return node;\n  }\n\n  function getInitialFocusNode() {\n    var node;\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (container.contains(doc.activeElement)) {\n      node = doc.activeElement;\n    } else {\n      node = state.firstTabbableNode || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error(\n        'Your focus-trap needs to have at least one focusable element'\n      );\n    }\n\n    return node;\n  }\n\n  function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus');\n    return node ? node : previousActiveElement;\n  }\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  function checkPointerDown(e) {\n    if (container.contains(e.target)) return;\n    if (config.clickOutsideDeactivates) {\n      deactivate({\n        returnFocus: !tabbable.isFocusable(e.target)\n      });\n      return;\n    }\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (config.allowOutsideClick && config.allowOutsideClick(e)) {\n      return;\n    }\n    e.preventDefault();\n  }\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  function checkFocusIn(e) {\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (container.contains(e.target) || e.target instanceof Document) {\n      return;\n    }\n    e.stopImmediatePropagation();\n    tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n  }\n\n  function checkKey(e) {\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      e.preventDefault();\n      deactivate();\n      return;\n    }\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  }\n\n  // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  function checkTab(e) {\n    updateTabbableNodes();\n    if (e.shiftKey && e.target === state.firstTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.lastTabbableNode);\n      return;\n    }\n    if (!e.shiftKey && e.target === state.lastTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.firstTabbableNode);\n      return;\n    }\n  }\n\n  function checkClick(e) {\n    if (config.clickOutsideDeactivates) return;\n    if (container.contains(e.target)) return;\n    if (config.allowOutsideClick && config.allowOutsideClick(e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function updateTabbableNodes() {\n    var tabbableNodes = tabbable(container);\n    state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();\n    state.lastTabbableNode =\n      tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();\n  }\n\n  function tryFocus(node) {\n    if (node === doc.activeElement) return;\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n    node.focus();\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  }\n}\n\nfunction isSelectableInput(node) {\n  return (\n    node.tagName &&\n    node.tagName.toLowerCase() === 'input' &&\n    typeof node.select === 'function'\n  );\n}\n\nfunction isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n}\n\nfunction isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n}\n\nfunction delay(fn) {\n  return setTimeout(fn, 0);\n}\n\nmodule.exports = focusTrap;\n"]},"metadata":{},"sourceType":"script"}