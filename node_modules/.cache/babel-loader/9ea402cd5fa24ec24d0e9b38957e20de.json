{"ast":null,"code":"var _jsxFileName = \"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { login } from \"../../actions/auth\";\nimport { Container, Card, Row } from \"react-bootstrap\";\nimport ErrorPopup from \"../ErrorPopups/ErrorPopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(props) {\n  _s();\n\n  let history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const {\n    isLoggedIn\n  } = useSelector(state => state.auth);\n  const {\n    message\n  } = useSelector(state => state.message);\n  const dispatch = useDispatch();\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    dispatch(login(email, password)).then(() => {\n      history.push(\"/home\");\n    }).catch(() => {\n      setLoading(false);\n\n      /*#__PURE__*/\n      _jsxDEV(ErrorPopup, {\n        show: isLoggedIn,\n        msg: \"Invalid Credentials!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"text-center\",\n        bg: \"warning\",\n        style: {\n          width: \"20rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Login Portal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              size: \"lg\",\n              controlId: \"email\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                autoFocus: true,\n                type: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              size: \"lg\",\n              controlId: \"password\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              block: true,\n              size: \"lg\",\n              type: \"submit\",\n              disabled: !validateForm(),\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"3UlM/7hEGZCrJ9/nTwFoWZqJEyQ=\", false, function () {\n  return [useHistory, useSelector, useSelector, useDispatch];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Login/Login.js"],"names":["React","useState","useDispatch","useSelector","Form","Button","Redirect","useHistory","login","Container","Card","Row","ErrorPopup","Login","props","history","email","setEmail","password","setPassword","loading","setLoading","isLoggedIn","state","auth","message","dispatch","validateForm","length","handleSubmit","e","preventDefault","then","push","catch","width","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { login } from \"../../actions/auth\";\nimport { Container, Card, Row } from \"react-bootstrap\";\nimport ErrorPopup from \"../ErrorPopups/ErrorPopup\";\n\nexport default function Login(props) {\n  let history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  const { message } = useSelector((state) => state.message);\n\n  const dispatch = useDispatch();\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setLoading(true);\n\n    dispatch(login(email, password))\n      .then(() => {\n        history.push(\"/home\");\n      })\n      .catch(() => {\n        setLoading(false);\n        <ErrorPopup show = {isLoggedIn} msg={\"Invalid Credentials!\"}/>\n      });\n  };\n\n  if (isLoggedIn) {\n    return <Redirect to=\"/home\" />;\n  }\n\n  return (\n    <Container>\n      <br />\n      <Row className=\"justify-content-center\">\n        <Card className=\"text-center\" bg=\"warning\" style={{ width: \"20rem\" }}>\n          <Form onSubmit={handleSubmit}>\n            <Card.Header>\n              <h4>Login Portal</h4>\n            </Card.Header>\n            <Card.Body>\n              <Form.Group size=\"lg\" controlId=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  autoFocus\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </Form.Group>\n              <br />\n              <Form.Group size=\"lg\" controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </Form.Group>\n              <br />\n              <Button\n                variant=\"danger\"\n                block\n                size=\"lg\"\n                type=\"submit\"\n                disabled={!validateForm()}\n              >\n                Login\n              </Button>\n            </Card.Body>\n          </Form>\n        </Card>\n      </Row>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}