{"ast":null,"code":"import { FETCH_CLIENTS, FETCH_CLIENTS_FAIL, ADD_CLIENT, ADD_CLIENT_FAIL, UPDATE_CLIENT, UPDATE_CLIENT_FAIL, DELETE_CLIENT, DELETE_CLIENT_FAIL } from \"../actions/types\";\nconst initialState = {\n  clients: []\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case FETCH_CLIENTS:\n      return { ...state,\n        clients: payload.clients\n      };\n\n    case FETCH_CLIENTS_FAIL:\n      return { ...state,\n        clients: []\n      };\n\n    case ADD_CLIENT:\n      return { ...state,\n        clients: [...state.clients, payload.clients]\n      };\n\n    case ADD_CLIENT_FAIL:\n      return { ...state\n      };\n\n    case UPDATE_CLIENT:\n      return { ...state\n      };\n\n    case UPDATE_CLIENT_FAIL:\n      return { ...state\n      };\n\n    case DELETE_CLIENT:\n      return { ...state // clients: state.clients.filter((i) => i.id !== payload.id),\n        // // clients: [...state.clients,payload.clients]\n\n      };\n\n    case DELETE_CLIENT_FAIL:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/rissriva/Documents/GitHub/Expense-Management-Software-React-App/src/reducers/client.js"],"names":["FETCH_CLIENTS","FETCH_CLIENTS_FAIL","ADD_CLIENT","ADD_CLIENT_FAIL","UPDATE_CLIENT","UPDATE_CLIENT_FAIL","DELETE_CLIENT","DELETE_CLIENT_FAIL","initialState","clients","state","action","type","payload"],"mappings":"AAAA,SACEA,aADF,EAEEC,kBAFF,EAGEC,UAHF,EAIEC,eAJF,EAKEC,aALF,EAMEC,kBANF,EAOEC,aAPF,EAQEC,kBARF,QASO,kBATP;AAWA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAArB;AAEA,eAAe,UAAUC,KAAK,GAAGF,YAAlB,EAAgCG,MAAhC,EAAwC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKZ,aAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELD,QAAAA,OAAO,EAAEI,OAAO,CAACJ;AAFZ,OAAP;;AAIF,SAAKR,kBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKP,UAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELD,QAAAA,OAAO,EAAE,CAAC,GAAGC,KAAK,CAACD,OAAV,EAAmBI,OAAO,CAACJ,OAA3B;AAFJ,OAAP;;AAIF,SAAKN,eAAL;AACE,aAAO,EACL,GAAGO;AADE,OAAP;;AAGF,SAAKN,aAAL;AACE,aAAO,EACL,GAAGM;AADE,OAAP;;AAGF,SAAKL,kBAAL;AACE,aAAO,EACL,GAAGK;AADE,OAAP;;AAIF,SAAKJ,aAAL;AACE,aAAO,EACL,GAAGI,KADE,CAEL;AACA;;AAHK,OAAP;;AAKF,SAAKH,kBAAL;AACE,aAAO,EACL,GAAGG;AADE,OAAP;;AAIF;AACE,aAAOA,KAAP;AAzCJ;AA2CD","sourcesContent":["import {\n  FETCH_CLIENTS,\n  FETCH_CLIENTS_FAIL,\n  ADD_CLIENT,\n  ADD_CLIENT_FAIL,\n  UPDATE_CLIENT,\n  UPDATE_CLIENT_FAIL,\n  DELETE_CLIENT,\n  DELETE_CLIENT_FAIL,\n} from \"../actions/types\";\n\nconst initialState = { clients: [] };\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case FETCH_CLIENTS:\n      return {\n        ...state,\n        clients: payload.clients,\n      };\n    case FETCH_CLIENTS_FAIL:\n      return {\n        ...state,\n        clients: [],\n      };\n    case ADD_CLIENT:\n      return {\n        ...state,\n        clients: [...state.clients, payload.clients],\n      };\n    case ADD_CLIENT_FAIL:\n      return {\n        ...state,\n      };\n    case UPDATE_CLIENT:\n      return {\n        ...state,\n      };\n    case UPDATE_CLIENT_FAIL:\n      return {\n        ...state,\n      };\n\n    case DELETE_CLIENT:\n      return {\n        ...state,\n        // clients: state.clients.filter((i) => i.id !== payload.id),\n        // // clients: [...state.clients,payload.clients]\n      };\n    case DELETE_CLIENT_FAIL:\n      return {\n        ...state,\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}