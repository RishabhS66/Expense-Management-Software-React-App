{"ast":null,"code":"var _jsxFileName = \"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Client/ClientDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { Card, Button, Container, Badge, Dropdown } from \"react-bootstrap\";\nimport AddClient from \"./AddClient\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getClients, deleteClient } from \"../../actions/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ClientDashboard = () => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [method, setMethod] = useState(\"Add\");\n\n  const showModal = () => {\n    setShow(true);\n  };\n\n  const hideModal = () => {\n    setShow(false);\n    setCurrClient(initialClient);\n    setMethod(\"Add\");\n  };\n\n  const initialClient = {\n    fullName: \"\",\n    nickName: \"\",\n    email: \"\",\n    address: {\n      addressLine1: \"\",\n      addressLine2: \"\",\n      city: \"\",\n      state: \"\",\n      country: \"\",\n      zipcode: \"\",\n      telephone1: \"\",\n      telephone2: \"\",\n      fax: \"\"\n    },\n    website: \"\",\n    billDetails: \"\"\n  };\n  const [currClient, setCurrClient] = useState(initialClient);\n  const [currIndex, setCurrIndex] = useState(-1);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getClients()).then(() => {\n      // console.log(\"Clients fetched successfully\");\n      return;\n    }).catch(() => {\n      alert(\"Unable to fetch clients\");\n    });\n  }, [dispatch, currClient]);\n\n  const SortCaret = (order, column) => {\n    if (!order) return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"float-end\",\n      children: /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"grey\",\n        children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-caret-up-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-caret-down-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this);else if (order === \"asc\") return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"float-end\",\n      children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-caret-up-fill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"grey\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-caret-down-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this);else if (order === \"desc\") return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"float-end\",\n      children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"grey\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-caret-up-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-caret-down-fill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this);\n    return null;\n  };\n\n  const {\n    clients: content\n  } = useSelector(state => state.client); // var index=-1;\n\n  const handleSelect = e => {\n    showModal();\n    const index = content.findIndex(o => o.id.toString() === e.target.id.toString());\n    setCurrClient(content[index]);\n    setCurrIndex(e.target.id);\n    setMethod(\"Update\");\n  };\n\n  const handleDelete = e => {\n    const index = content.findIndex(o => o.id.toString() === e.target.id.toString());\n    setCurrClient(content[index]);\n    dispatch(deleteClient(e.target.id)).then(() => {\n      // history.push(\"/home\");\n      // console.log(\"Successfully deleted\");\n      setCurrClient(initialClient);\n    }).catch(() => {\n      // setLoading(false);\n      alert(\"Could Not Delete Client!\");\n      setCurrClient(initialClient);\n    });\n  };\n\n  const dropDown = id => {\n    return /*#__PURE__*/_jsxDEV(Dropdown, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        id: \"options-menu\",\n        variant: \"secondary\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-gear-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), \" Options\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        variant: \"dark\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          onClick: handleSelect,\n          id: id,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          onClick: handleDelete,\n          id: id,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  };\n\n  const clientData = content.map(client => {\n    // const ActiveStatus = client.active ? \"Active\" : \"Inactive\";\n    // const BadgeType = ActiveStatus === \"Active\" ? \"success\" : \"danger\";\n    const Data = {\n      // clientActiveStatus: <Badge bg={BadgeType}>{ActiveStatus}</Badge>,\n      cFullName: client.fullName,\n      cNickName: client.nickName,\n      clientEmail: client.email,\n      clientCountry: client.address.country,\n      clientTelephone1: client.address.telephone1,\n      clientOptions: dropDown(client.id)\n    };\n    return Data;\n  });\n  const columns = [// {\n  //   dataField: \"clientActiveStatus\",\n  //   text: \"\",\n  //   sort: true,\n  //   sortCaret: SortCaret,\n  //   headerStyle: (colum, colIndex) => {\n  //     return { width: \"80px\", textAlign: \"center\" };\n  //   },\n  // },\n  {\n    dataField: \"cNickName\",\n    text: \"Client Nick\",\n    sort: true,\n    sortCaret: SortCaret\n  }, {\n    dataField: \"cFullName\",\n    text: \"Client Name\",\n    sort: true,\n    sortCaret: SortCaret\n  }, {\n    dataField: \"clientEmail\",\n    text: \"Email Address\",\n    sort: true,\n    sortCaret: SortCaret\n  }, {\n    dataField: \"clientCountry\",\n    text: \"Country\",\n    sort: true,\n    sortCaret: SortCaret\n  }, {\n    dataField: \"clientTelephone1\",\n    text: \"Telephone 1\",\n    sort: true,\n    sortCaret: SortCaret\n  }, {\n    dataField: \"clientOptions\",\n    text: \"\",\n    headerStyle: (colum, colIndex) => {\n      return {\n        width: \"140px\",\n        textAlign: \"center\"\n      };\n    }\n  }];\n  const defaultSorted = [{\n    dataField: \"cNickName\",\n    order: \"asc\" //desc\n\n  }];\n\n  const customTotal = (from, to, size) => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"react-bootstrap-table-pagination-total\",\n    children: [\"\\xA0 Showing \", from, \" to \", to, \" of \", size, \" Results\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n\n  const options = {\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    disablePageTitle: true,\n    sizePerPageList: [{\n      text: \"5\",\n      value: 5\n    }, {\n      text: \"10\",\n      value: 10\n    }, {\n      text: \"All\",\n      value: clientData.length\n    }]\n  };\n  const {\n    SearchBar\n  } = Search;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: \"95%\"\n    },\n    className: \"ms-5\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      as: \"h4\",\n      children: [\"CLIENTS\", /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        className: \"float-end\",\n        id: \"addClient\",\n        onClick: showModal,\n        children: \"+ Add Client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n        keyField: \"cNickName\",\n        data: clientData,\n        columns: columns,\n        search: true,\n        children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(SearchBar, { ...props.searchProps,\n            srText: \"Search Clients :\",\n            placeholder: \"Enter text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, { ...props.baseProps,\n            hover: true // selectRow={{ mode: \"checkbox\" }}\n            ,\n            defaultSorted: defaultSorted,\n            pagination: paginationFactory(options),\n            noDataIndication: \"No data available in table\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddClient, {\n      show: show,\n      onHide: hideModal,\n      index: currIndex,\n      data: currClient,\n      method: method\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ClientDashboard, \"8O2L3qa4J3uQ4TuoTvO38bnXsAE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ClientDashboard;\nexport default ClientDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientDashboard\");","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Client/ClientDashboard.js"],"names":["React","useState","useSelector","BootstrapTable","paginationFactory","ToolkitProvider","Search","Card","Button","Container","Badge","Dropdown","AddClient","useDispatch","useEffect","getClients","deleteClient","ClientDashboard","show","setShow","method","setMethod","showModal","hideModal","setCurrClient","initialClient","fullName","nickName","email","address","addressLine1","addressLine2","city","state","country","zipcode","telephone1","telephone2","fax","website","billDetails","currClient","currIndex","setCurrIndex","dispatch","then","catch","alert","SortCaret","order","column","clients","content","client","handleSelect","e","index","findIndex","o","id","toString","target","handleDelete","dropDown","clientData","map","Data","cFullName","cNickName","clientEmail","clientCountry","clientTelephone1","clientOptions","columns","dataField","text","sort","sortCaret","headerStyle","colum","colIndex","width","textAlign","defaultSorted","customTotal","from","to","size","options","showTotal","paginationTotalRenderer","disablePageTitle","sizePerPageList","value","length","SearchBar","props","searchProps","baseProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,eAAP,IAA0BC,MAA1B,QAAwC,gCAAxC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,QAAzC,QAAyD,iBAAzD;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,sBAAzC;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMqB,SAAS,GAAG,MAAM;AACtBH,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAGA,QAAMI,SAAS,GAAG,MAAM;AACtBJ,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAK,IAAAA,aAAa,CAACC,aAAD,CAAb;AACAJ,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAJD;;AAMA,QAAMI,aAAa,GAAG;AACpBC,IAAAA,QAAQ,EAAE,EADU;AAEpBC,IAAAA,QAAQ,EAAE,EAFU;AAGpBC,IAAAA,KAAK,EAAE,EAHa;AAIpBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,YAAY,EAAE,EADP;AAEPC,MAAAA,YAAY,EAAE,EAFP;AAGPC,MAAAA,IAAI,EAAE,EAHC;AAIPC,MAAAA,KAAK,EAAE,EAJA;AAKPC,MAAAA,OAAO,EAAE,EALF;AAMPC,MAAAA,OAAO,EAAE,EANF;AAOPC,MAAAA,UAAU,EAAE,EAPL;AAQPC,MAAAA,UAAU,EAAE,EARL;AASPC,MAAAA,GAAG,EAAE;AATE,KAJW;AAepBC,IAAAA,OAAO,EAAE,EAfW;AAgBpBC,IAAAA,WAAW,EAAE;AAhBO,GAAtB;AAmBA,QAAM,CAACC,UAAD,EAAajB,aAAb,IAA8BvB,QAAQ,CAACwB,aAAD,CAA5C;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4B1C,QAAQ,CAAC,CAAC,CAAF,CAA1C;AAEA,QAAM2C,QAAQ,GAAG/B,WAAW,EAA5B;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,QAAQ,CAAC7B,UAAU,EAAX,CAAR,CACG8B,IADH,CACQ,MAAM;AACV;AACA;AACD,KAJH,EAKGC,KALH,CAKS,MAAM;AACXC,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACD,KAPH;AAQD,GATQ,EASN,CAACH,QAAD,EAAWH,UAAX,CATM,CAAT;;AAWA,QAAMO,SAAS,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,QAAI,CAACD,KAAL,EACE,oBACE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,6BACE;AAAM,QAAA,KAAK,EAAC,MAAZ;AAAA,4CACc;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADd,eAEE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,CADF,KASK,IAAIA,KAAK,KAAK,KAAd,EACH,oBACE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,0CACc;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADd,eAEE;AAAM,QAAA,KAAK,EAAC,MAAZ;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADG,KASA,IAAIA,KAAK,KAAK,MAAd,EACH,oBACE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,0CAEE;AAAM,QAAA,KAAK,EAAC,MAAZ;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASF,WAAO,IAAP;AACD,GA9BD;;AA+BA,QAAM;AAAEE,IAAAA,OAAO,EAAEC;AAAX,MAAuBlD,WAAW,CAAE+B,KAAD,IAAWA,KAAK,CAACoB,MAAlB,CAAxC,CA7E4B,CA8E5B;;AACA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BjC,IAAAA,SAAS;AAET,UAAMkC,KAAK,GAAGJ,OAAO,CAACK,SAAR,CACXC,CAAD,IAAOA,CAAC,CAACC,EAAF,CAAKC,QAAL,OAAoBL,CAAC,CAACM,MAAF,CAASF,EAAT,CAAYC,QAAZ,EADf,CAAd;AAIApC,IAAAA,aAAa,CAAC4B,OAAO,CAACI,KAAD,CAAR,CAAb;AACAb,IAAAA,YAAY,CAACY,CAAC,CAACM,MAAF,CAASF,EAAV,CAAZ;AACAtC,IAAAA,SAAS,CAAC,QAAD,CAAT;AACD,GAVD;;AAWA,QAAMyC,YAAY,GAAIP,CAAD,IAAO;AAC1B,UAAMC,KAAK,GAAGJ,OAAO,CAACK,SAAR,CACXC,CAAD,IAAOA,CAAC,CAACC,EAAF,CAAKC,QAAL,OAAoBL,CAAC,CAACM,MAAF,CAASF,EAAT,CAAYC,QAAZ,EADf,CAAd;AAIApC,IAAAA,aAAa,CAAC4B,OAAO,CAACI,KAAD,CAAR,CAAb;AACAZ,IAAAA,QAAQ,CAAC5B,YAAY,CAACuC,CAAC,CAACM,MAAF,CAASF,EAAV,CAAb,CAAR,CACGd,IADH,CACQ,MAAM;AACV;AACA;AACArB,MAAAA,aAAa,CAACC,aAAD,CAAb;AACD,KALH,EAMGqB,KANH,CAMS,MAAM;AACX;AACAC,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACAvB,MAAAA,aAAa,CAACC,aAAD,CAAb;AACD,KAVH;AAWD,GAjBD;;AAkBA,QAAMsC,QAAQ,GAAIJ,EAAD,IAAQ;AACvB,wBACE,QAAC,QAAD;AAAA,8BACE,QAAC,QAAD,CAAU,MAAV;AAAiB,QAAA,EAAE,EAAC,cAApB;AAAmC,QAAA,OAAO,EAAC,WAA3C;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,QAAD,CAAU,IAAV;AAAe,QAAA,OAAO,EAAC,MAAvB;AAAA,gCACE,QAAC,QAAD,CAAU,IAAV;AAAe,UAAA,OAAO,EAAEL,YAAxB;AAAsC,UAAA,EAAE,EAAEK,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,QAAD,CAAU,IAAV;AAAe,UAAA,OAAO,EAAEG,YAAxB;AAAsC,UAAA,EAAE,EAAEH,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD,GAjBD;;AAkBA,QAAMK,UAAU,GAAGZ,OAAO,CAACa,GAAR,CAAaZ,MAAD,IAAY;AACzC;AACA;AACA,UAAMa,IAAI,GAAG;AACX;AACAC,MAAAA,SAAS,EAAEd,MAAM,CAAC3B,QAFP;AAGX0C,MAAAA,SAAS,EAAEf,MAAM,CAAC1B,QAHP;AAIX0C,MAAAA,WAAW,EAAEhB,MAAM,CAACzB,KAJT;AAKX0C,MAAAA,aAAa,EAAEjB,MAAM,CAACxB,OAAP,CAAeK,OALnB;AAMXqC,MAAAA,gBAAgB,EAAElB,MAAM,CAACxB,OAAP,CAAeO,UANtB;AAOXoC,MAAAA,aAAa,EAAET,QAAQ,CAACV,MAAM,CAACM,EAAR;AAPZ,KAAb;AASA,WAAOO,IAAP;AACD,GAbkB,CAAnB;AAeA,QAAMO,OAAO,GAAG,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,SAAS,EAAE,WADb;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,IAAI,EAAE,IAHR;AAIEC,IAAAA,SAAS,EAAE7B;AAJb,GAVc,EAgBd;AACE0B,IAAAA,SAAS,EAAE,WADb;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,IAAI,EAAE,IAHR;AAIEC,IAAAA,SAAS,EAAE7B;AAJb,GAhBc,EAsBd;AACE0B,IAAAA,SAAS,EAAE,aADb;AAEEC,IAAAA,IAAI,EAAE,eAFR;AAGEC,IAAAA,IAAI,EAAE,IAHR;AAIEC,IAAAA,SAAS,EAAE7B;AAJb,GAtBc,EA4Bd;AACE0B,IAAAA,SAAS,EAAE,eADb;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,IAAI,EAAE,IAHR;AAIEC,IAAAA,SAAS,EAAE7B;AAJb,GA5Bc,EAkCd;AACE0B,IAAAA,SAAS,EAAE,kBADb;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,IAAI,EAAE,IAHR;AAIEC,IAAAA,SAAS,EAAE7B;AAJb,GAlCc,EAwCd;AACE0B,IAAAA,SAAS,EAAE,eADb;AAEEC,IAAAA,IAAI,EAAE,EAFR;AAIEG,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAChC,aAAO;AAAEC,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,SAAS,EAAE;AAA7B,OAAP;AACD;AANH,GAxCc,CAAhB;AAkDA,QAAMC,aAAa,GAAG,CACpB;AACET,IAAAA,SAAS,EAAE,WADb;AAEEzB,IAAAA,KAAK,EAAE,KAFT,CAEgB;;AAFhB,GADoB,CAAtB;;AAOA,QAAMmC,WAAW,GAAG,CAACC,IAAD,EAAOC,EAAP,EAAWC,IAAX,kBAClB;AAAM,IAAA,SAAS,EAAC,wCAAhB;AAAA,gCACkBF,IADlB,UAC4BC,EAD5B,UACoCC,IADpC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAMA,QAAMC,OAAO,GAAG;AACdC,IAAAA,SAAS,EAAE,IADG;AAEdC,IAAAA,uBAAuB,EAAEN,WAFX;AAGdO,IAAAA,gBAAgB,EAAE,IAHJ;AAIdC,IAAAA,eAAe,EAAE,CACf;AACEjB,MAAAA,IAAI,EAAE,GADR;AAEEkB,MAAAA,KAAK,EAAE;AAFT,KADe,EAKf;AACElB,MAAAA,IAAI,EAAE,IADR;AAEEkB,MAAAA,KAAK,EAAE;AAFT,KALe,EASf;AACElB,MAAAA,IAAI,EAAE,KADR;AAEEkB,MAAAA,KAAK,EAAE7B,UAAU,CAAC8B;AAFpB,KATe;AAJH,GAAhB;AAoBA,QAAM;AAAEC,IAAAA;AAAF,MAAgBzF,MAAtB;AAEA,sBACI,QAAC,IAAD;AAAO,IAAA,KAAK,EAAE;AAAE2E,MAAAA,KAAK,EAAE;AAAT,KAAd;AAAgC,IAAA,SAAS,EAAC,MAA1C;AAAA,4BACE,QAAC,IAAD,CAAM,MAAN;AAAa,MAAA,EAAE,EAAC,IAAhB;AAAA,yCAEE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,SADV;AAEE,QAAA,SAAS,EAAC,WAFZ;AAGE,QAAA,EAAE,EAAC,WAHL;AAIE,QAAA,OAAO,EAAE3D,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,IAAD,CAAM,IAAN;AAAA,6BACE,QAAC,eAAD;AACE,QAAA,QAAQ,EAAC,WADX;AAEE,QAAA,IAAI,EAAE0C,UAFR;AAGE,QAAA,OAAO,EAAES,OAHX;AAIE,QAAA,MAAM,MAJR;AAAA,kBAMIuB,KAAD,iBACC;AAAA,kCACE,QAAC,SAAD,OACMA,KAAK,CAACC,WADZ;AAEE,YAAA,MAAM,EAAC,kBAFT;AAGE,YAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE,QAAC,cAAD,OACMD,KAAK,CAACE,SADZ;AAEE,YAAA,KAAK,MAFP,CAGE;AAHF;AAIE,YAAA,aAAa,EAAEf,aAJjB;AAKE,YAAA,UAAU,EAAE/E,iBAAiB,CAACoF,OAAD,CAL/B;AAME,YAAA,gBAAgB,EAAC;AANnB;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF,eAuCE,QAAC,SAAD;AACE,MAAA,IAAI,EAAEtE,IADR;AAEE,MAAA,MAAM,EAAEK,SAFV;AAGE,MAAA,KAAK,EAAEmB,SAHT;AAIE,MAAA,IAAI,EAAED,UAJR;AAKE,MAAA,MAAM,EAAErB;AALV;AAAA;AAAA;AAAA;AAAA,YAvCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiDD,CAnRD;;GAAMH,e;UAkCaJ,W,EA2CYX,W;;;KA7EzBe,e;AAqRN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { Card, Button, Container, Badge, Dropdown } from \"react-bootstrap\";\nimport AddClient from \"./AddClient\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getClients, deleteClient } from \"../../actions/client\";\n\nconst ClientDashboard = () => {\n  const [show, setShow] = useState(false);\n  const [method, setMethod] = useState(\"Add\");\n  const showModal = () => {\n    setShow(true);\n  };\n  const hideModal = () => {\n    setShow(false);\n    setCurrClient(initialClient);\n    setMethod(\"Add\");\n  };\n\n  const initialClient = {\n    fullName: \"\",\n    nickName: \"\",\n    email: \"\",\n    address: {\n      addressLine1: \"\",\n      addressLine2: \"\",\n      city: \"\",\n      state: \"\",\n      country: \"\",\n      zipcode: \"\",\n      telephone1: \"\",\n      telephone2: \"\",\n      fax: \"\",\n    },\n    website: \"\",\n    billDetails: \"\",\n  };\n\n  const [currClient, setCurrClient] = useState(initialClient);\n  const [currIndex, setCurrIndex] = useState(-1);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getClients())\n      .then(() => {\n        // console.log(\"Clients fetched successfully\");\n        return;\n      })\n      .catch(() => {\n        alert(\"Unable to fetch clients\");\n      });\n  }, [dispatch, currClient]);\n\n  const SortCaret = (order, column) => {\n    if (!order)\n      return (\n        <span className=\"float-end\">\n          <font color=\"grey\">\n            &nbsp;&nbsp;<i className=\"bi bi-caret-up-fill\"></i>\n            <i className=\"bi bi-caret-down-fill\"></i>\n          </font>\n        </span>\n      );\n    else if (order === \"asc\")\n      return (\n        <span className=\"float-end\">\n          &nbsp;&nbsp;<i className=\"bi bi-caret-up-fill\"></i>\n          <font color=\"grey\">\n            <i className=\"bi bi-caret-down-fill\"></i>\n          </font>\n        </span>\n      );\n    else if (order === \"desc\")\n      return (\n        <span className=\"float-end\">\n          &nbsp;&nbsp;\n          <font color=\"grey\">\n            <i className=\"bi bi-caret-up-fill\"></i>\n          </font>\n          <i className=\"bi bi-caret-down-fill\"></i>\n        </span>\n      );\n    return null;\n  };\n  const { clients: content } = useSelector((state) => state.client);\n  // var index=-1;\n  const handleSelect = (e) => {\n    showModal();\n\n    const index = content.findIndex(\n      (o) => o.id.toString() === e.target.id.toString()\n    );\n\n    setCurrClient(content[index]);\n    setCurrIndex(e.target.id);\n    setMethod(\"Update\");\n  };\n  const handleDelete = (e) => {\n    const index = content.findIndex(\n      (o) => o.id.toString() === e.target.id.toString()\n    );\n\n    setCurrClient(content[index]);\n    dispatch(deleteClient(e.target.id))\n      .then(() => {\n        // history.push(\"/home\");\n        // console.log(\"Successfully deleted\");\n        setCurrClient(initialClient);\n      })\n      .catch(() => {\n        // setLoading(false);\n        alert(\"Could Not Delete Client!\");\n        setCurrClient(initialClient);\n      });\n  };\n  const dropDown = (id) => {\n    return (\n      <Dropdown>\n        <Dropdown.Toggle id=\"options-menu\" variant=\"secondary\">\n          <i className=\"bi bi-gear-fill\"></i> Options\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu variant=\"dark\">\n          <Dropdown.Item onClick={handleSelect} id={id}>\n            Edit\n          </Dropdown.Item>\n          <Dropdown.Item onClick={handleDelete} id={id}>\n            Delete\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  };\n  const clientData = content.map((client) => {\n    // const ActiveStatus = client.active ? \"Active\" : \"Inactive\";\n    // const BadgeType = ActiveStatus === \"Active\" ? \"success\" : \"danger\";\n    const Data = {\n      // clientActiveStatus: <Badge bg={BadgeType}>{ActiveStatus}</Badge>,\n      cFullName: client.fullName,\n      cNickName: client.nickName,\n      clientEmail: client.email,\n      clientCountry: client.address.country,\n      clientTelephone1: client.address.telephone1,\n      clientOptions: dropDown(client.id),\n    };\n    return Data;\n  });\n\n  const columns = [\n    // {\n    //   dataField: \"clientActiveStatus\",\n    //   text: \"\",\n    //   sort: true,\n    //   sortCaret: SortCaret,\n    //   headerStyle: (colum, colIndex) => {\n    //     return { width: \"80px\", textAlign: \"center\" };\n    //   },\n    // },\n    {\n      dataField: \"cNickName\",\n      text: \"Client Nick\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"cFullName\",\n      text: \"Client Name\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"clientEmail\",\n      text: \"Email Address\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"clientCountry\",\n      text: \"Country\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"clientTelephone1\",\n      text: \"Telephone 1\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"clientOptions\",\n      text: \"\",\n\n      headerStyle: (colum, colIndex) => {\n        return { width: \"140px\", textAlign: \"center\" };\n      },\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"cNickName\",\n      order: \"asc\", //desc\n    },\n  ];\n\n  const customTotal = (from, to, size) => (\n    <span className=\"react-bootstrap-table-pagination-total\">\n      &nbsp; Showing {from} to {to} of {size} Results\n    </span>\n  );\n\n  const options = {\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    disablePageTitle: true,\n    sizePerPageList: [\n      {\n        text: \"5\",\n        value: 5,\n      },\n      {\n        text: \"10\",\n        value: 10,\n      },\n      {\n        text: \"All\",\n        value: clientData.length,\n      },\n    ],\n  };\n\n  const { SearchBar } = Search;\n\n  return (\n      <Card  style={{ width: \"95%\" }} className=\"ms-5\">\n        <Card.Header as=\"h4\">\n          CLIENTS\n          <Button\n            variant=\"success\"\n            className=\"float-end\"\n            id=\"addClient\"\n            onClick={showModal}\n          >\n            + Add Client\n          </Button>\n        </Card.Header>\n        <Card.Body>\n          <ToolkitProvider\n            keyField=\"cNickName\"\n            data={clientData}\n            columns={columns}\n            search\n          >\n            {(props) => (\n              <div>\n                <SearchBar\n                  {...props.searchProps}\n                  srText=\"Search Clients :\"\n                  placeholder=\"Enter text\"\n                />\n                <br />\n                <BootstrapTable\n                  {...props.baseProps}\n                  hover\n                  // selectRow={{ mode: \"checkbox\" }}\n                  defaultSorted={defaultSorted}\n                  pagination={paginationFactory(options)}\n                  noDataIndication=\"No data available in table\"\n                />\n              </div>\n            )}\n          </ToolkitProvider>\n        </Card.Body>\n        <AddClient\n          show={show}\n          onHide={hideModal}\n          index={currIndex}\n          data={currClient}\n          method={method}\n        />\n      </Card>\n  );\n};\n\nexport default ClientDashboard;\n"]},"metadata":{},"sourceType":"module"}