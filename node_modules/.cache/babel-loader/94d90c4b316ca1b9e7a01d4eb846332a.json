{"ast":null,"code":"var _jsxFileName = \"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { login } from \"../../actions/auth\";\nimport { Container, Card, Row, Toast, Col } from \"react-bootstrap\";\nimport { Formik, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const schema = yup.object().shape({\n    email: yup.string().email().required(),\n    password: yup.string().required()\n  });\n  let history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const {\n    isLoggedIn,\n    user\n  } = useSelector(state => state.auth);\n  const {\n    message\n  } = useSelector(state => state.message);\n  const [showA, setShowA] = useState(false);\n\n  const closeA = () => setShowA(false);\n\n  const openA = () => setShowA(true);\n\n  const dispatch = useDispatch(); // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   setLoading(true);\n  //   dispatch(login(email, password))\n  //     .then(() => {\n  //       history.push(\"/home\");\n  //     })\n  //     .catch(() => {\n  //       setLoading(false);\n  //       openA();\n  //     });\n  // };\n\n  const onSuccess = values => {\n    setLoading(true);\n    dispatch(login(values.email, values.password)).then(response => {\n      if (response.isPasswordTemp) {\n        history.push(\"/changpepwd\");\n      } else {\n        history.push(\"/home\");\n      }\n    }).catch(() => {\n      setLoading(false);\n      openA();\n    });\n  };\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isLoggedIn && user.isPasswordTemp) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/changepwd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 4,\n        md: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 4,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Login Portal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Formik, {\n              validationSchema: schema,\n              validateOnChange: true,\n              onSubmit: onSuccess,\n              initialValues: {\n                email: \"\",\n                password: \"\"\n              },\n              children: ({\n                handleSubmit,\n                handleChange,\n                handleBlur,\n                values,\n                touched,\n                isValid,\n                errors\n              }) => /*#__PURE__*/_jsxDEV(Form, {\n                noValidate: true,\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  size: \"lg\",\n                  controlId: \"email\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    autoFocus: true,\n                    type: \"email\",\n                    name: \"email\",\n                    value: values.email,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.email && errors.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  size: \"lg\",\n                  controlId: \"password\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    name: \"password\",\n                    value: values.password,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.password && errors.password\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-grid\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    type: \"submit\",\n                    disabled: !isValid,\n                    children: \"Login\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 4,\n        md: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Toast, {\n        className: \"text-center\",\n        bg: \"danger\",\n        style: {\n          width: \"18rem\"\n        },\n        show: showA,\n        onClose: closeA,\n        position: \"middle-center\",\n        delay: 3000,\n        autohide: true,\n        children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"me-auto\",\n            children: \"ERROR!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Invalid Login Credentials!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"CzW5huQ1Z9Q5O8iOLezM8rset20=\", false, function () {\n  return [useHistory, useSelector, useSelector, useDispatch];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Login/Login.js"],"names":["React","useState","useDispatch","useSelector","Form","Button","Redirect","useHistory","login","Container","Card","Row","Toast","Col","Formik","ErrorMessage","yup","Login","schema","object","shape","email","string","required","password","history","loading","setLoading","isLoggedIn","user","state","auth","message","showA","setShowA","closeA","openA","dispatch","onSuccess","values","then","response","isPasswordTemp","push","catch","handleSubmit","handleChange","handleBlur","touched","isValid","errors","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,KAA/B,EAAsCC,GAAtC,QAAiD,iBAAjD;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,QAArC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAMC,MAAM,GAAGF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,IAAAA,KAAK,EAAEL,GAAG,CAACM,MAAJ,GAAaD,KAAb,GAAqBE,QAArB,EADyB;AAEhCC,IAAAA,QAAQ,EAAER,GAAG,CAACM,MAAJ,GAAaC,QAAb;AAFsB,GAAnB,CAAf;AAKA,MAAIE,OAAO,GAAGlB,UAAU,EAAxB;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwB1B,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM;AAAE2B,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAuB1B,WAAW,CAAE2B,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAxC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAc7B,WAAW,CAAE2B,KAAD,IAAWA,KAAK,CAACE,OAAlB,CAA/B;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjC,QAAQ,CAAC,KAAD,CAAlC;;AACA,QAAMkC,MAAM,GAAG,MAAMD,QAAQ,CAAC,KAAD,CAA7B;;AACA,QAAME,KAAK,GAAG,MAAMF,QAAQ,CAAC,IAAD,CAA5B;;AAEA,QAAMG,QAAQ,GAAGnC,WAAW,EAA5B,CAhB8B,CAiB9B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMoC,SAAS,GAAIC,MAAD,IAAY;AAC5BZ,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEAU,IAAAA,QAAQ,CAAC7B,KAAK,CAAC+B,MAAM,CAAClB,KAAR,EAAekB,MAAM,CAACf,QAAtB,CAAN,CAAR,CACGgB,IADH,CACSC,QAAD,IAAc;AAClB,UAAGA,QAAQ,CAACC,cAAZ,EAA2B;AACzBjB,QAAAA,OAAO,CAACkB,IAAR,CAAa,aAAb;AACD,OAFD,MAGI;AACFlB,QAAAA,OAAO,CAACkB,IAAR,CAAa,OAAb;AACD;AACF,KARH,EASGC,KATH,CASS,MAAM;AACXjB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAS,MAAAA,KAAK;AACN,KAZH;AAaD,GAhBD;;AAkBA,MAAIR,UAAJ,EAAgB;AACd,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIA,UAAU,IAAIC,IAAI,CAACa,cAAvB,EAAsC;AACpC,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA,4BACE,QAAC,GAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAA,+BAEE,QAAC,IAAD;AAAA,kCACE,QAAC,IAAD,CAAM,MAAN;AAAa,YAAA,SAAS,EAAC,aAAvB;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,IAAD,CAAM,IAAN;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,gBAAgB,EAAExB,MADpB;AAEE,cAAA,gBAAgB,EAAE,IAFpB;AAGE,cAAA,QAAQ,EAAEoB,SAHZ;AAIE,cAAA,aAAa,EAAE;AACbjB,gBAAAA,KAAK,EAAE,EADM;AAEbG,gBAAAA,QAAQ,EAAE;AAFG,eAJjB;AAAA,wBASG,CAAC;AACAqB,gBAAAA,YADA;AAEAC,gBAAAA,YAFA;AAGAC,gBAAAA,UAHA;AAIAR,gBAAAA,MAJA;AAKAS,gBAAAA,OALA;AAMAC,gBAAAA,OANA;AAOAC,gBAAAA;AAPA,eAAD,kBASC,QAAC,IAAD;AAAM,gBAAA,UAAU,MAAhB;AAAiB,gBAAA,QAAQ,EAAEL,YAA3B;AAAA,wCACE,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,MAAtB;AAA6B,kBAAA,IAAI,EAAC,IAAlC;AAAuC,kBAAA,SAAS,EAAC,OAAjD;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,oBAAA,SAAS,MADX;AAEE,oBAAA,IAAI,EAAC,OAFP;AAGE,oBAAA,IAAI,EAAC,OAHP;AAIE,oBAAA,KAAK,EAAEN,MAAM,CAAClB,KAJhB;AAKE,oBAAA,QAAQ,EAAEyB,YALZ;AAME,oBAAA,MAAM,EAAEC,UANV;AAOE,oBAAA,SAAS,EAAEC,OAAO,CAAC3B,KAAR,IAAiB6B,MAAM,CAAC7B;AAPrC;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAcE,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,IAAI,EAAC,IAAjB;AAAsB,kBAAA,SAAS,EAAC,UAAhC;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,oBAAA,IAAI,EAAC,UADP;AAEE,oBAAA,IAAI,EAAC,UAFP;AAGE,oBAAA,KAAK,EAAEkB,MAAM,CAACf,QAHhB;AAIE,oBAAA,QAAQ,EAAEsB,YAJZ;AAKE,oBAAA,MAAM,EAAEC,UALV;AAME,oBAAA,SAAS,EAAEC,OAAO,CAACxB,QAAR,IAAoB0B,MAAM,CAAC1B;AANxC;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAdF,eAyBE;AAAA;AAAA;AAAA;AAAA,wBAzBF,eA0BE;AAAK,kBAAA,SAAS,EAAC,QAAf;AAAA,yCACE,QAAC,MAAD;AACE,oBAAA,OAAO,EAAC,SADV;AAEE,oBAAA,IAAI,EAAC,QAFP;AAGE,oBAAA,QAAQ,EAAE,CAACyB,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cAFF,eAoEE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,cApEF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAuEE;AAAA;AAAA;AAAA;AAAA,YAvEF,eAwEE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,EAAE,EAAC,QAFL;AAGE,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAE;AAAT,SAHT;AAIE,QAAA,IAAI,EAAElB,KAJR;AAKE,QAAA,OAAO,EAAEE,MALX;AAME,QAAA,QAAQ,EAAC,eANX;AAOE,QAAA,KAAK,EAAE,IAPT;AAQE,QAAA,QAAQ,MARV;AAAA,gCAUE,QAAC,KAAD,CAAO,MAAP;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF,eAaE,QAAC,KAAD,CAAO,IAAP;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAxEF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8FD;;GAtJuBlB,K;UAMRV,U,EAGeJ,W,EACTA,W,EAMHD,W;;;KAhBKe,K","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { login } from \"../../actions/auth\";\nimport { Container, Card, Row, Toast, Col } from \"react-bootstrap\";\nimport { Formik, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\n\nexport default function Login() {\n  const schema = yup.object().shape({\n    email: yup.string().email().required(),\n    password: yup.string().required(),\n  });\n\n  let history = useHistory();\n  const [loading, setLoading] = useState(false);\n\n  const { isLoggedIn, user } = useSelector((state) => state.auth);\n  const { message } = useSelector((state) => state.message);\n\n  const [showA, setShowA] = useState(false);\n  const closeA = () => setShowA(false);\n  const openA = () => setShowA(true);\n\n  const dispatch = useDispatch();\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n\n  //   setLoading(true);\n  //   dispatch(login(email, password))\n  //     .then(() => {\n  //       history.push(\"/home\");\n  //     })\n  //     .catch(() => {\n  //       setLoading(false);\n  //       openA();\n  //     });\n  // };\n\n  const onSuccess = (values) => {\n    setLoading(true);\n\n    dispatch(login(values.email, values.password))\n      .then((response) => {\n        if(response.isPasswordTemp){\n          history.push(\"/changpepwd\");\n        }\n        else{\n          history.push(\"/home\");\n        }\n      })\n      .catch(() => {\n        setLoading(false);\n        openA();\n      });\n  };\n\n  if (isLoggedIn) {\n    return <Redirect to=\"/home\" />;\n  }\n  if (isLoggedIn && user.isPasswordTemp){\n    return <Redirect to=\"/changepwd\" />;\n  }\n\n  return (\n    <Container className=\"mt-5\">\n      <Row>\n        <Col lg={4} md={6} />\n        <Col lg={4} md={6}>\n          {/* <p>{message}</p> */}\n          <Card>\n            <Card.Header className=\"text-center\">\n              <h4>Login Portal</h4>\n            </Card.Header>\n            <Card.Body>\n              <Formik\n                validationSchema={schema}\n                validateOnChange={true}\n                onSubmit={onSuccess}\n                initialValues={{\n                  email: \"\",\n                  password: \"\",\n                }}\n              >\n                {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  touched,\n                  isValid,\n                  errors,\n                }) => (\n                  <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group className=\"mb-3\" size=\"lg\" controlId=\"email\">\n                      <Form.Label>Email</Form.Label>\n                      <Form.Control\n                        autoFocus\n                        type=\"email\"\n                        name=\"email\"\n                        value={values.email}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.email && errors.email}\n                      />\n                    </Form.Group>\n\n                    <Form.Group size=\"lg\" controlId=\"password\">\n                      <Form.Label>Password</Form.Label>\n                      <Form.Control\n                        type=\"password\"\n                        name=\"password\"\n                        value={values.password}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.password && errors.password}\n                      />\n                    </Form.Group>\n                    <br />\n                    <div className=\"d-grid\">\n                      <Button\n                        variant=\"primary\"\n                        type=\"submit\"\n                        disabled={!isValid}\n                      >\n                        Login\n                      </Button>\n                    </div>\n                  </Form>\n                )}\n              </Formik>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={4} md={6} />\n      </Row>\n      <br />\n      <Row className=\"justify-content-center\">\n        <Toast\n          className=\"text-center\"\n          bg=\"danger\"\n          style={{ width: \"18rem\" }}\n          show={showA}\n          onClose={closeA}\n          position=\"middle-center\"\n          delay={3000}\n          autohide\n        >\n          <Toast.Header>\n            <strong className=\"me-auto\">ERROR!</strong>\n          </Toast.Header>\n          <Toast.Body>\n            <h6>Invalid Login Credentials!</h6>\n          </Toast.Body>\n        </Toast>\n      </Row>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}