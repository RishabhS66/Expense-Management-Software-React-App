{"ast":null,"code":"var _jsxFileName = \"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Client/Client.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { Card, Button, Container, Badge, Dropdown, Navbar } from \"react-bootstrap\";\nimport AddClient from \"./AddClient\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getClients } from \"../../actions/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ClientDashboard = () => {\n  _s();\n\n  // console.log(\"rendering\");â€‹\n  const [show, setShow] = useState(false);\n  const [method, setMethod] = useState(\"Add\");\n\n  const showModal = () => {\n    // console.log(\"working\");\n    setShow(true);\n  };\n\n  const hideModal = () => {\n    setShow(false);\n    setClient(initialClient);\n    setMethod(\"Add\");\n  };\n\n  const initialClient = {\n    fullName: \"\",\n    nickName: \"\",\n    email: \"\",\n    address: {\n      addressLine1: \"\",\n      addressLine2: \"\",\n      city: \"\",\n      state: \"\",\n      country: \"\",\n      zipcode: \"\",\n      telephone1: \"\",\n      telephone2: \"\",\n      fax: \"\"\n    },\n    website: \"\",\n    billDetails: \"\"\n  };\n  const [client, setClient] = useState(initialClient);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getClients()).then(() => {\n      console.log(\"Clients fetched successfully\");\n    }).catch(() => {\n      console.log(\"Unable to fetch clients\");\n    });\n  }, [dispatch, client]); // var clientIndex=-1;\n\n  const SortCaret = (order, column) => {\n    if (!order) return /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"float-end\",\n      children: /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"grey\",\n        children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-caret-up-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-caret-down-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this);else if (order === \"asc\") return /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"float-end\",\n      children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"bi bi-caret-up-fill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"grey\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-caret-down-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this);else if (order === \"desc\") return /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"float-end\",\n      children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"grey\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-caret-up-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"bi bi-caret-down-fill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this);\n    return null;\n  }; // const { isLoggedIn } = useSelector((state) => state.auth);\n\n\n  const {\n    clients: content\n  } = useSelector(state => state.client);\n\n  const handleSelect = e => {\n    showModal();\n    const index = content.findIndex(o => o.id.toString() === e.target.id.toString());\n    console.log(\"entering \"); // console.log(content[index]);\n\n    setClient(content[index]);\n    setMethod(\"Update\");\n  };\n\n  const dropDown = id => {\n    // const idUrl = \"/projectsummary/\" + id;\n    return /*#__PURE__*/_jsxDEV(Dropdown, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        id: \"options-menu\",\n        variant: \"secondary\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-gear-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), \" Options\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), \"\\u200B\", /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        variant: \"dark\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          onClick: handleSelect,\n          id: id,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          as: Link,\n          to: \"\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  };\n\n  const clientData = content.map(client => {\n    const ActiveStatus = client.active ? \"Active\" : \"Inactive\";\n    const BadgeType = ActiveStatus === \"Active\" ? \"success\" : \"danger\";\n    const clientData = {\n      clientActiveStatus: /*#__PURE__*/_jsxDEV(Badge, {\n        bg: BadgeType,\n        children: ActiveStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 27\n      }, this),\n      cFullName: client.fullName,\n      cNickName: client.nickName,\n      clientEmail: client.email,\n      clientCountry: client.address.country,\n      clientTelephone1: client.address.telephone1,\n      clientOptions: dropDown(client.id)\n    };\n    return clientData;\n  });\n  const columns = [{\n    dataField: \"clientActiveStatus\",\n    text: \"\",\n    sort: true,\n    sortCaret: SortCaret,\n    headerStyle: (colum, colIndex) => {\n      return {\n        width: \"80px\",\n        textAlign: \"center\"\n      };\n    }\n  }, {\n    dataField: \"cNickName\",\n    text: \"Client Nick\",\n    sort: true,\n    sortCaret: SortCaret\n  }, {\n    dataField: \"cFullName\",\n    text: \"Client Name\",\n    sort: true,\n    sortCaret: SortCaret\n  }, {\n    dataField: \"clientEmail\",\n    text: \"Email Address\",\n    sort: true,\n    sortCaret: SortCaret\n  }, {\n    dataField: \"clientCountry\",\n    text: \"Country\",\n    sort: true,\n    sortCaret: SortCaret\n  }, {\n    dataField: \"clientTelephone1\",\n    text: \"Telephone 1\",\n    sort: true,\n    sortCaret: SortCaret\n  }, {\n    dataField: \"clientOptions\",\n    text: \"\",\n    headerStyle: (colum, colIndex) => {\n      return {\n        width: \"140px\",\n        textAlign: \"center\"\n      };\n    }\n  }];\n  const defaultSorted = [{\n    dataField: \"cNickName\",\n    order: \"asc\" //desc\n\n  }];\n\n  const customTotal = (from, to, size) => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"react-bootstrap-table-pagination-total\",\n    children: [\"\\xA0 Showing \", from, \" to \", to, \" of \", size, \" Results\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n\n  const options = {\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    disablePageTitle: true,\n    sizePerPageList: [{\n      text: \"5\",\n      value: 5\n    }, {\n      text: \"10\",\n      value: 10\n    }, {\n      text: \"All\",\n      value: clientData.length\n    }]\n  };\n  const {\n    SearchBar\n  } = Search;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      expand: \"lg\",\n      bg: \"light\",\n      children: /*#__PURE__*/_jsxDEV(Navbar.Text, {\n        children: [\"\\xA0 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Dashboard : Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          as: \"h4\",\n          children: [\"CLIENTS\", /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            className: \"float-end\",\n            id: \"addClient\",\n            onClick: showModal,\n            children: \"+ Add Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            className: \"float-end\",\n            children: \"\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            className: \"float-end\",\n            id: \"deleteClient\",\n            disabled: true,\n            children: \"Delete Selected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n            keyField: \"cNickName\",\n            data: clientData,\n            columns: columns,\n            search: true,\n            children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(SearchBar, { ...props.searchProps,\n                srText: \"Search Clients :\",\n                placeholder: \"Enter text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, { ...props.baseProps,\n                hover: true,\n                selectRow: {\n                  mode: \"checkbox\"\n                },\n                defaultSorted: defaultSorted,\n                pagination: paginationFactory(options),\n                noDataIndication: \"No data available in table\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddClient, {\n          show: show,\n          onHide: hideModal,\n          data: client,\n          method: method\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ClientDashboard, \"fuAP9ShGq/RaiUZF48kNCVmoaHY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ClientDashboard;\nexport default ClientDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientDashboard\");","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Client/Client.js"],"names":["React","useState","useSelector","BootstrapTable","paginationFactory","ToolkitProvider","Search","Card","Button","Container","Badge","Dropdown","Navbar","AddClient","Link","useDispatch","useEffect","getClients","ClientDashboard","show","setShow","method","setMethod","showModal","hideModal","setClient","initialClient","fullName","nickName","email","address","addressLine1","addressLine2","city","state","country","zipcode","telephone1","telephone2","fax","website","billDetails","client","dispatch","then","console","log","catch","SortCaret","order","column","clients","content","handleSelect","e","index","findIndex","o","id","toString","target","dropDown","clientData","map","ActiveStatus","active","BadgeType","clientActiveStatus","cFullName","cNickName","clientEmail","clientCountry","clientTelephone1","clientOptions","columns","dataField","text","sort","sortCaret","headerStyle","colum","colIndex","width","textAlign","defaultSorted","customTotal","from","to","size","options","showTotal","paginationTotalRenderer","disablePageTitle","sizePerPageList","value","length","SearchBar","props","searchProps","baseProps","mode"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport {\n  Card,\n  Button,\n  Container,\n  Badge,\n  Dropdown,\n  Navbar,\n} from \"react-bootstrap\";\nimport AddClient from \"./AddClient\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getClients } from \"../../actions/client\";\n\nconst ClientDashboard = () => {\n  // console.log(\"rendering\");â€‹\n  const [show, setShow] = useState(false);\n  const [method, setMethod] = useState(\"Add\");\n  const showModal = () => {\n    // console.log(\"working\");\n    setShow(true);\n  };\n  const hideModal = () => {\n    setShow(false);\n    setClient(initialClient);\n    setMethod(\"Add\");\n  };\n\n  const initialClient = {\n    fullName: \"\",\n    nickName: \"\",\n    email: \"\",\n    address: {\n      addressLine1: \"\",\n      addressLine2: \"\",\n      city: \"\",\n      state: \"\",\n      country: \"\",\n      zipcode: \"\",\n      telephone1: \"\",\n      telephone2: \"\",\n      fax: \"\",\n    },\n    website: \"\",\n    billDetails: \"\",\n  };\n\n  const [client, setClient] = useState(initialClient);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getClients())\n      .then(() => {\n        console.log(\"Clients fetched successfully\");\n      })\n      .catch(() => {\n        console.log(\"Unable to fetch clients\");\n      });\n  }, [dispatch, client]);\n  // var clientIndex=-1;\n\n  const SortCaret = (order, column) => {\n    if (!order)\n      return (\n        <span class=\"float-end\">\n          <font color=\"grey\">\n            &nbsp;&nbsp;<i class=\"bi bi-caret-up-fill\"></i>\n            <i class=\"bi bi-caret-down-fill\"></i>\n          </font>\n        </span>\n      );\n    else if (order === \"asc\")\n      return (\n        <span class=\"float-end\">\n          &nbsp;&nbsp;<i class=\"bi bi-caret-up-fill\"></i>\n          <font color=\"grey\">\n            <i class=\"bi bi-caret-down-fill\"></i>\n          </font>\n        </span>\n      );\n    else if (order === \"desc\")\n      return (\n        <span class=\"float-end\">\n          &nbsp;&nbsp;\n          <font color=\"grey\">\n            <i class=\"bi bi-caret-up-fill\"></i>\n          </font>\n          <i class=\"bi bi-caret-down-fill\"></i>\n        </span>\n      );\n    return null;\n  };\n  // const { isLoggedIn } = useSelector((state) => state.auth);\n  const { clients: content } = useSelector((state) => state.client);\n  const handleSelect = (e) => {\n    showModal();\n\n    const index = content.findIndex(\n      (o) => o.id.toString() === e.target.id.toString()\n    );\n\n    console.log(\"entering \");\n    // console.log(content[index]);\n    setClient(content[index]);\n    setMethod(\"Update\");\n  };\n  const dropDown = (id) => {\n    // const idUrl = \"/projectsummary/\" + id;\n    return (\n      <Dropdown>\n        <Dropdown.Toggle id=\"options-menu\" variant=\"secondary\">\n          <i class=\"bi bi-gear-fill\"></i> Options\n        </Dropdown.Toggle>\n        â€‹\n        <Dropdown.Menu variant=\"dark\">\n          {/* <Dropdown.Item as={Link} to={idUrl}>View Summary</Dropdown.Item> */}\n          <Dropdown.Item onClick={handleSelect} id={id}>\n            Edit\n          </Dropdown.Item>\n          <Dropdown.Item as={Link} to=\"\">\n            Delete\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  };\n  const clientData = content.map((client) => {\n    const ActiveStatus = client.active ? \"Active\" : \"Inactive\";\n    const BadgeType = ActiveStatus === \"Active\" ? \"success\" : \"danger\";\n    const clientData = {\n      clientActiveStatus: <Badge bg={BadgeType}>{ActiveStatus}</Badge>,\n      cFullName: client.fullName,\n      cNickName: client.nickName,\n      clientEmail: client.email,\n      clientCountry: client.address.country,\n      clientTelephone1: client.address.telephone1,\n      clientOptions: dropDown(client.id),\n    };\n    return clientData;\n  });\n\n  const columns = [\n    {\n      dataField: \"clientActiveStatus\",\n      text: \"\",\n      sort: true,\n      sortCaret: SortCaret,\n      headerStyle: (colum, colIndex) => {\n        return { width: \"80px\", textAlign: \"center\" };\n      },\n    },\n    {\n      dataField: \"cNickName\",\n      text: \"Client Nick\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"cFullName\",\n      text: \"Client Name\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"clientEmail\",\n      text: \"Email Address\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"clientCountry\",\n      text: \"Country\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"clientTelephone1\",\n      text: \"Telephone 1\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"clientOptions\",\n      text: \"\",\n\n      headerStyle: (colum, colIndex) => {\n        return { width: \"140px\", textAlign: \"center\" };\n      },\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"cNickName\",\n      order: \"asc\", //desc\n    },\n  ];\n\n  const customTotal = (from, to, size) => (\n    <span className=\"react-bootstrap-table-pagination-total\">\n      &nbsp; Showing {from} to {to} of {size} Results\n    </span>\n  );\n\n  const options = {\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    disablePageTitle: true,\n    sizePerPageList: [\n      {\n        text: \"5\",\n        value: 5,\n      },\n      {\n        text: \"10\",\n        value: 10,\n      },\n      {\n        text: \"All\",\n        value: clientData.length,\n      },\n    ],\n  };\n\n  const { SearchBar } = Search;\n\n  return (\n    <>\n      <Navbar expand=\"lg\" bg=\"light\">\n        <Navbar.Text>\n          &nbsp; <strong>Dashboard : Clients</strong>\n        </Navbar.Text>\n      </Navbar>\n      <br />\n      <Container>\n        <Card style={{ width: \"100%\" }}>\n          <Card.Header as=\"h4\">\n            CLIENTS\n            <Button\n              variant=\"success\"\n              className=\"float-end\"\n              id=\"addClient\"\n              onClick={showModal}\n            >\n              + Add Client\n            </Button>\n            <Card.Text className=\"float-end\">&nbsp;</Card.Text>\n            <Button\n              variant=\"danger\"\n              className=\"float-end\"\n              id=\"deleteClient\"\n              disabled={true}\n            >\n              Delete Selected\n            </Button>\n          </Card.Header>\n          <Card.Body>\n            <ToolkitProvider\n              keyField=\"cNickName\"\n              data={clientData}\n              columns={columns}\n              search\n            >\n              {(props) => (\n                <div>\n                  <SearchBar\n                    {...props.searchProps}\n                    srText=\"Search Clients :\"\n                    placeholder=\"Enter text\"\n                  />\n                  <br />\n                  <BootstrapTable\n                    {...props.baseProps}\n                    hover\n                    selectRow={{ mode: \"checkbox\" }}\n                    defaultSorted={defaultSorted}\n                    pagination={paginationFactory(options)}\n                    noDataIndication=\"No data available in table\"\n                  />\n                </div>\n              )}\n            </ToolkitProvider>\n          </Card.Body>\n          <AddClient\n            show={show}\n            onHide={hideModal}\n            data={client}\n            method={method}\n          />\n        </Card>\n      </Container>\n    </>\n  );\n};\n\nexport default ClientDashboard;\n"]},"metadata":{},"sourceType":"module"}