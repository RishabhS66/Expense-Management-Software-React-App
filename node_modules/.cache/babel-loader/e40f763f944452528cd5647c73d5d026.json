{"ast":null,"code":"var _jsxFileName = \"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Login/ChangePassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Redirect } from \"react-router-dom\";\nimport { Container, Card, Row, Toast, Col } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChangePassword = () => {\n  _s();\n\n  // console.log(props);\n  const {\n    isLoggedIn\n  } = useSelector(state => state.auth);\n  const [showA, setShowA] = useState(false);\n\n  const closeA = () => setShowA(false);\n\n  const openA = () => setShowA(true);\n\n  const [loading, setLoading] = useState(false);\n  const schema = yup.object().shape({\n    oldPwd: yup.string().required(\"Enter Old Password\"),\n    newPwd: yup.string().notOneOf([yup.ref(\"oldPwd\")], \"New Password matches Old Password\").required(\"Enter New Password\"),\n    confirmedPwd: yup.string().oneOf([yup.ref(\"newPwd\"), null], \"Does not match with the New Password\").required(\"Confirm Password is a required field\")\n  });\n  const dispatch = useDispatch();\n\n  const onSuccess = values => {\n    setLoading(true);\n    console.log(values); // dispatch(login(values.email, values.password))\n    //   .then((response) => {\n    //     if(response.isPasswordTemp){\n    //       history.push(\"/changepwd\");\n    //     }\n    //     else{\n    //       history.push(\"/home\");\n    //     }\n    //   })\n    //   .catch(() => {\n    //     setLoading(false);\n    //     openA();\n    //   });\n  };\n\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 4,\n        md: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 4,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Change Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Formik, {\n              validationSchema: schema,\n              validateOnChange: true,\n              onSubmit: onSuccess,\n              initialValues: {\n                oldPwd: \"\",\n                newPwd: \"\",\n                confirmedPwd: \"\"\n              },\n              children: ({\n                handleSubmit,\n                handleChange,\n                handleBlur,\n                resetForm,\n                values,\n                touched,\n                isValid,\n                errors\n              }) => /*#__PURE__*/_jsxDEV(Form, {\n                noValidate: true,\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  size: \"lg\",\n                  controlId: \"oldPwd\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Temporary or Old Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    autoFocus: true,\n                    type: \"password\",\n                    name: \"oldPwd\",\n                    value: values.oldPwd,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.oldPwd && errors.oldPwd\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.oldPwd\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  size: \"lg\",\n                  controlId: \"newPwd\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"New Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    name: \"newPwd\",\n                    value: values.newPwd,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.newPwd && errors.newPwd\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.newPwd\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  size: \"lg\",\n                  controlId: \"confirmedPwd\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Confirm Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    name: \"confirmedPwd\",\n                    value: values.confirmedPwd,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.confirmedPwd && errors.confirmedPwd\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.confirmedPwd\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-grid\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    type: \"submit\",\n                    disabled: values.oldPwd.length === 0 || !isValid,\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"secondary\",\n                    type: \"reset\",\n                    onClick: resetForm,\n                    children: \"Reset\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 4,\n        md: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Toast, {\n        className: \"text-center\",\n        bg: \"danger\",\n        style: {\n          width: \"18rem\"\n        },\n        show: showA,\n        onClose: closeA,\n        position: \"middle-center\",\n        delay: 3000,\n        autohide: true,\n        children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"me-auto\",\n            children: \"ERROR!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Invalid Login Credentials!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChangePassword, \"GIkFp02MXhiKqS7xG4n2UPOuyDE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ChangePassword;\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Login/ChangePassword.js"],"names":["React","useState","useDispatch","useSelector","Form","Button","Redirect","Container","Card","Row","Toast","Col","Formik","yup","ChangePassword","isLoggedIn","state","auth","showA","setShowA","closeA","openA","loading","setLoading","schema","object","shape","oldPwd","string","required","newPwd","notOneOf","ref","confirmedPwd","oneOf","dispatch","onSuccess","values","console","log","handleSubmit","handleChange","handleBlur","resetForm","touched","isValid","errors","length","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Redirect } from \"react-router-dom\";\nimport { Container, Card, Row, Toast, Col } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\n\n\nconst ChangePassword = () => {\n  // console.log(props);\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  const [showA, setShowA] = useState(false);\n  const closeA = () => setShowA(false);\n  const openA = () => setShowA(true);\n  const [loading, setLoading] = useState(false);\n\n  const schema = yup.object().shape({\n    oldPwd: yup.string().required(\"Enter Old Password\"),\n    newPwd: yup\n      .string()\n      .notOneOf([yup.ref(\"oldPwd\")], \"New Password matches Old Password\")\n      .required(\"Enter New Password\"),\n    confirmedPwd: yup\n      .string()\n      .oneOf([yup.ref(\"newPwd\"), null], \"Does not match with the New Password\")\n      .required(\"Confirm Password is a required field\"),\n  });\n\n  const dispatch = useDispatch();\n\n  const onSuccess = (values) => {\n    setLoading(true);\n    console.log(values);\n\n    // dispatch(login(values.email, values.password))\n    //   .then((response) => {\n    //     if(response.isPasswordTemp){\n    //       history.push(\"/changepwd\");\n    //     }\n    //     else{\n    //       history.push(\"/home\");\n    //     }\n    //   })\n    //   .catch(() => {\n    //     setLoading(false);\n    //     openA();\n    //   });\n  };\n  if (!isLoggedIn) {\n    return <Redirect to=\"/login\" />;\n  }\n  \n\n  return (\n    <Container className=\"mt-5\">\n      <Row>\n        <Col lg={4} md={6} />\n        <Col lg={4} md={6}>\n          {/* <p>{message}</p> */}\n          <Card>\n            <Card.Header className=\"text-center\">\n              <h4>Change Password</h4>\n            </Card.Header>\n            <Card.Body>\n              <Formik\n                validationSchema={schema}\n                validateOnChange={true}\n                onSubmit={onSuccess}\n                initialValues={{\n                  oldPwd: \"\",\n                  newPwd: \"\",\n                  confirmedPwd: \"\",\n                }}\n              >\n                {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  resetForm,\n                  values,\n                  touched,\n                  isValid,\n                  errors,\n                }) => (\n                  <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group className=\"mb-3\" size=\"lg\" controlId=\"oldPwd\">\n                      <Form.Label>Temporary or Old Password</Form.Label>\n                      <Form.Control\n                        autoFocus\n                        type=\"password\"\n                        name=\"oldPwd\"\n                        value={values.oldPwd}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.oldPwd && errors.oldPwd}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.oldPwd}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" size=\"lg\" controlId=\"newPwd\">\n                      <Form.Label>New Password</Form.Label>\n                      <Form.Control\n                        type=\"password\"\n                        name=\"newPwd\"\n                        value={values.newPwd}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.newPwd && errors.newPwd}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.newPwd}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" size=\"lg\" controlId=\"confirmedPwd\">\n                      <Form.Label>Confirm Password</Form.Label>\n                      <Form.Control\n                        type=\"password\"\n                        name=\"confirmedPwd\"\n                        value={values.confirmedPwd}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={touched.confirmedPwd && errors.confirmedPwd}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.confirmedPwd}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <br />\n                    <div className=\"d-grid\">\n                      <Button\n                        variant=\"primary\"\n                        type=\"submit\"\n                        disabled={values.oldPwd.length === 0 || !isValid}\n                      >\n                        Submit\n                      </Button>\n                      <br/>\n                      <Button\n                        variant=\"secondary\"\n                        type=\"reset\"\n                        onClick={resetForm}\n                      >\n                        Reset\n                      </Button>\n                    </div>\n                  </Form>\n                )}\n              </Formik>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={4} md={6} />\n      </Row>\n      <br />\n      <Row className=\"justify-content-center\">\n        <Toast\n          className=\"text-center\"\n          bg=\"danger\"\n          style={{ width: \"18rem\" }}\n          show={showA}\n          onClose={closeA}\n          position=\"middle-center\"\n          delay={3000}\n          autohide\n        >\n          <Toast.Header>\n            <strong className=\"me-auto\">ERROR!</strong>\n          </Toast.Header>\n          <Toast.Body>\n            <h6>Invalid Login Credentials!</h6>\n          </Toast.Body>\n        </Toast>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}