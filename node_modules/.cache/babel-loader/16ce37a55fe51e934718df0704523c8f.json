{"ast":null,"code":"var _jsxFileName = \"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { Navbar, Card, Badge, Col, Row, ListGroup } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getProjects } from \"../actions/project\";\nimport { getExpenseSheets } from \"../actions/expense.actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getProjects()).then(() => {\n      console.log(\"Projects fetched successfully\");\n    }).catch(() => {\n      console.log(\"Unable to fetch projects\");\n    });\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(getExpenseSheets()).then(() => {\n      console.log(\"Expenses fetched successfully\");\n    }).catch(() => {\n      console.log(\"Unable to fetch Expenses\");\n    });\n  }, [dispatch]);\n\n  const SortCaret = (order, column) => {\n    if (!order) return /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"float-end\",\n      children: /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"grey\",\n        children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-caret-up-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-caret-down-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this);else if (order === \"asc\") return /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"float-end\",\n      children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-caret-up-fill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"grey\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-caret-down-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);else if (order === \"desc\") return /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"float-end\",\n      children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"grey\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-caret-up-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-caret-down-fill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this);\n    return null;\n  };\n\n  const {\n    projects: content\n  } = useSelector(state => state.project);\n  const {\n    entries: expContent\n  } = useSelector(state => state.expenseSheets);\n  const projectData = content.map(prj => {\n    const ActiveStatus = prj.active ? \"Active\" : \"Inactive\";\n    const BadgeType = ActiveStatus === \"Active\" ? \"success\" : \"danger\";\n    const statusType = {\n      TO_DO: \"To-Do\",\n      IN_PROGRESS: \"In Progress\",\n      COMPLETED: \"Completed\",\n      SUSPENDED: \"Suspended\"\n    };\n    const soonDue = prj.soonDue ? /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        bg: \"info\",\n        children: \"Soon Due\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this) : \"\";\n    const prjData = {\n      projectActiveStatus: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          bg: BadgeType,\n          children: ActiveStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this),\n      projectDueStatus: soonDue,\n      pName: prj.projectName,\n      projectStatus: statusType[prj.status]\n    };\n    return prjData;\n  });\n\n  function getSum(total, num) {\n    return total + num;\n  }\n\n  const totalAmount = expContent.map(entry => entry.amount).reduce(getSum, 0);\n  const totalReimbursed = expContent.filter(e => e.status === \"APPROVED\").map(entry => entry.amount).reduce(getSum, 0);\n  const columns = [{\n    dataField: \"projectActiveStatus\",\n    text: \"\",\n    headerStyle: (colum, colIndex) => {\n      return {\n        width: \"7rem\",\n        textAlign: \"center\"\n      };\n    }\n  }, {\n    dataField: \"projectDueStatus\",\n    text: \"\",\n    headerStyle: (colum, colIndex) => {\n      return {\n        width: \"8rem\",\n        textAlign: \"center\"\n      };\n    }\n  }, {\n    dataField: \"pName\",\n    text: \"Project Name\",\n    sort: true,\n    sortCaret: SortCaret\n  }, {\n    dataField: \"projectStatus\",\n    text: \"Status\",\n    sort: true,\n    sortCaret: SortCaret\n  }];\n  const defaultSorted = [{\n    dataField: \"projectCode\",\n    order: \"asc\" //desc\n\n  }];\n\n  const customTotal = (from, to, size) => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"react-bootstrap-table-pagination-total\",\n    children: [\"\\xA0 Showing \", from, \" to \", to, \" of \", size, \" Results\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n\n  const options = {\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    disablePageTitle: true,\n    sizePerPageList: [{\n      text: \"5\",\n      value: 5\n    }, {\n      text: \"10\",\n      value: 10\n    }, {\n      text: \"All\",\n      value: projectData.length\n    }]\n  };\n  const {\n    SearchBar\n  } = Search;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      expand: \"lg\",\n      bg: \"light\",\n      children: /*#__PURE__*/_jsxDEV(Navbar.Text, {\n        children: [\"\\xA0 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      id: \"myProjects\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: \"95%\"\n          },\n          className: \"ms-5\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            as: \"h4\",\n            children: \"MY PROJECTS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n              keyField: \"pName\",\n              data: projectData,\n              columns: columns,\n              search: true,\n              children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(SearchBar, { ...props.searchProps,\n                  srText: \"Search Projects :\",\n                  placeholder: \"Enter text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, { ...props.baseProps,\n                  hover: true,\n                  defaultSorted: defaultSorted,\n                  pagination: paginationFactory(options),\n                  noDataIndication: \"No data available in table\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: \"90%\"\n          },\n          className: \"ms-2\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            as: \"h4\",\n            children: \"MY EXPENSE SUMMARY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-cash\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 21\n                  }, this), \" Total Expenses Amount\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\"\\xA0\", \"INR \" + Number(totalAmount).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-wallet\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 21\n                  }, this), \" Total Reimbursed Amount\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\"\\xA0\", \"INR \" + Number(totalReimbursed).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"aNwtIoTklfERBF65wib2L5ml0K4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Home.js"],"names":["React","useSelector","BootstrapTable","paginationFactory","ToolkitProvider","Search","Navbar","Card","Badge","Col","Row","ListGroup","useDispatch","useEffect","getProjects","getExpenseSheets","Home","dispatch","then","console","log","catch","SortCaret","order","column","projects","content","state","project","entries","expContent","expenseSheets","projectData","map","prj","ActiveStatus","active","BadgeType","statusType","TO_DO","IN_PROGRESS","COMPLETED","SUSPENDED","soonDue","prjData","projectActiveStatus","projectDueStatus","pName","projectName","projectStatus","status","getSum","total","num","totalAmount","entry","amount","reduce","totalReimbursed","filter","e","columns","dataField","text","headerStyle","colum","colIndex","width","textAlign","sort","sortCaret","defaultSorted","customTotal","from","to","size","options","showTotal","paginationTotalRenderer","disablePageTitle","sizePerPageList","value","length","SearchBar","props","searchProps","baseProps","Number","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,eAAP,IAA0BC,MAA1B,QAAwC,gCAAxC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,GAA9B,EAAmCC,GAAnC,EAAwCC,SAAxC,QAAyD,iBAAzD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,gBAAT,QAAiC,4BAAjC;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,QAAQ,CAACH,WAAW,EAAZ,CAAR,CACGI,IADH,CACQ,MAAM;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,KAHH,EAIGC,KAJH,CAIS,MAAM;AACXF,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,KANH;AAOD,GARQ,EAQN,CAACH,QAAD,CARM,CAAT;AAUAJ,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,QAAQ,CAACF,gBAAgB,EAAjB,CAAR,CACGG,IADH,CACQ,MAAM;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,KAHH,EAIGC,KAJH,CAIS,MAAM;AACXF,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,KANH;AAOD,GARQ,EAQN,CAACH,QAAD,CARM,CAAT;;AAUA,QAAMK,SAAS,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,QAAI,CAACD,KAAL,EACE,oBACE;AAAM,MAAA,KAAK,EAAC,WAAZ;AAAA,6BACE;AAAM,QAAA,KAAK,EAAC,MAAZ;AAAA,4CACc;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADd,eAEE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,CADF,KASK,IAAIA,KAAK,KAAK,KAAd,EACH,oBACE;AAAM,MAAA,KAAK,EAAC,WAAZ;AAAA,0CACc;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADd,eAEE;AAAM,QAAA,KAAK,EAAC,MAAZ;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADG,KASA,IAAIA,KAAK,KAAK,MAAd,EACH,oBACE;AAAM,MAAA,KAAK,EAAC,WAAZ;AAAA,0CAEE;AAAM,QAAA,KAAK,EAAC,MAAZ;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASF,WAAO,IAAP;AACD,GA9BD;;AA+BA,QAAM;AAAEE,IAAAA,QAAQ,EAAEC;AAAZ,MAAwBzB,WAAW,CAAE0B,KAAD,IAAWA,KAAK,CAACC,OAAlB,CAAzC;AACA,QAAM;AAAEC,IAAAA,OAAO,EAAEC;AAAX,MAA0B7B,WAAW,CAAE0B,KAAD,IAAWA,KAAK,CAACI,aAAlB,CAA3C;AACA,QAAMC,WAAW,GAAGN,OAAO,CAACO,GAAR,CAAaC,GAAD,IAAS;AACvC,UAAMC,YAAY,GAAGD,GAAG,CAACE,MAAJ,GAAa,QAAb,GAAwB,UAA7C;AACA,UAAMC,SAAS,GAAGF,YAAY,KAAK,QAAjB,GAA4B,SAA5B,GAAwC,QAA1D;AACA,UAAMG,UAAU,GAAG;AACjBC,MAAAA,KAAK,EAAE,OADU;AAEjBC,MAAAA,WAAW,EAAE,aAFI;AAGjBC,MAAAA,SAAS,EAAE,WAHM;AAIjBC,MAAAA,SAAS,EAAE;AAJM,KAAnB;AAMA,UAAMC,OAAO,GAAGT,GAAG,CAACS,OAAJ,gBACd;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,EAAE,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADc,GAKd,EALF;AAOA,UAAMC,OAAO,GAAG;AACdC,MAAAA,mBAAmB,eACjB;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,EAAE,EAAER,SAAX;AAAA,oBAAuBF;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFY;AAMdW,MAAAA,gBAAgB,EAAEH,OANJ;AAOdI,MAAAA,KAAK,EAAEb,GAAG,CAACc,WAPG;AAQdC,MAAAA,aAAa,EAAEX,UAAU,CAACJ,GAAG,CAACgB,MAAL;AARX,KAAhB;AAUA,WAAON,OAAP;AACD,GA3BmB,CAApB;;AA6BA,WAASO,MAAT,CAAgBC,KAAhB,EAAuBC,GAAvB,EAA4B;AAC1B,WAAOD,KAAK,GAAGC,GAAf;AACD;;AACD,QAAMC,WAAW,GAAGxB,UAAU,CAACG,GAAX,CAAgBsB,KAAD,IAAWA,KAAK,CAACC,MAAhC,EAAwCC,MAAxC,CAA+CN,MAA/C,EAAuD,CAAvD,CAApB;AACA,QAAMO,eAAe,GAAG5B,UAAU,CAC/B6B,MADqB,CACbC,CAAD,IAAOA,CAAC,CAACV,MAAF,KAAa,UADN,EAErBjB,GAFqB,CAEhBsB,KAAD,IAAWA,KAAK,CAACC,MAFA,EAGrBC,MAHqB,CAGdN,MAHc,EAGN,CAHM,CAAxB;AAKA,QAAMU,OAAO,GAAG,CACd;AACEC,IAAAA,SAAS,EAAE,qBADb;AAEEC,IAAAA,IAAI,EAAE,EAFR;AAGEC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAChC,aAAO;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,SAAS,EAAE;AAA5B,OAAP;AACD;AALH,GADc,EAQd;AACEN,IAAAA,SAAS,EAAE,kBADb;AAEEC,IAAAA,IAAI,EAAE,EAFR;AAGEC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAChC,aAAO;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,SAAS,EAAE;AAA5B,OAAP;AACD;AALH,GARc,EAed;AACEN,IAAAA,SAAS,EAAE,OADb;AAEEC,IAAAA,IAAI,EAAE,cAFR;AAGEM,IAAAA,IAAI,EAAE,IAHR;AAIEC,IAAAA,SAAS,EAAEhD;AAJb,GAfc,EAqBd;AACEwC,IAAAA,SAAS,EAAE,eADb;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEM,IAAAA,IAAI,EAAE,IAHR;AAIEC,IAAAA,SAAS,EAAEhD;AAJb,GArBc,CAAhB;AA6BA,QAAMiD,aAAa,GAAG,CACpB;AACET,IAAAA,SAAS,EAAE,aADb;AAEEvC,IAAAA,KAAK,EAAE,KAFT,CAEgB;;AAFhB,GADoB,CAAtB;;AAOA,QAAMiD,WAAW,GAAG,CAACC,IAAD,EAAOC,EAAP,EAAWC,IAAX,kBAClB;AAAM,IAAA,SAAS,EAAC,wCAAhB;AAAA,gCACkBF,IADlB,UAC4BC,EAD5B,UACoCC,IADpC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAMA,QAAMC,OAAO,GAAG;AACdC,IAAAA,SAAS,EAAE,IADG;AAEdC,IAAAA,uBAAuB,EAAEN,WAFX;AAGdO,IAAAA,gBAAgB,EAAE,IAHJ;AAIdC,IAAAA,eAAe,EAAE,CACf;AACEjB,MAAAA,IAAI,EAAE,GADR;AAEEkB,MAAAA,KAAK,EAAE;AAFT,KADe,EAKf;AACElB,MAAAA,IAAI,EAAE,IADR;AAEEkB,MAAAA,KAAK,EAAE;AAFT,KALe,EASf;AACElB,MAAAA,IAAI,EAAE,KADR;AAEEkB,MAAAA,KAAK,EAAEjD,WAAW,CAACkD;AAFrB,KATe;AAJH,GAAhB;AAoBA,QAAM;AAAEC,IAAAA;AAAF,MAAgB9E,MAAtB;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,IAAf;AAAoB,MAAA,EAAE,EAAC,OAAvB;AAAA,6BACE,QAAC,MAAD,CAAQ,IAAR;AAAA,yCACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADT;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAE8D,YAAAA,KAAK,EAAE;AAAT,WAAb;AAA+B,UAAA,SAAS,EAAC,MAAzC;AAAA,kCACE,QAAC,IAAD,CAAM,MAAN;AAAa,YAAA,EAAE,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,mCACE,QAAC,eAAD;AACE,cAAA,QAAQ,EAAC,OADX;AAEE,cAAA,IAAI,EAAEnC,WAFR;AAGE,cAAA,OAAO,EAAE6B,OAHX;AAIE,cAAA,MAAM,MAJR;AAAA,wBAMIuB,KAAD,iBACC;AAAA,wCACE,QAAC,SAAD,OACMA,KAAK,CAACC,WADZ;AAEE,kBAAA,MAAM,EAAC,mBAFT;AAGE,kBAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,wBADF,eAME;AAAA;AAAA;AAAA;AAAA,wBANF,eAOE,QAAC,cAAD,OACMD,KAAK,CAACE,SADZ;AAEE,kBAAA,KAAK,MAFP;AAGE,kBAAA,aAAa,EAAEf,aAHjB;AAIE,kBAAA,UAAU,EAAEpE,iBAAiB,CAACyE,OAAD,CAJ/B;AAKE,kBAAA,gBAAgB,EAAC;AALnB;AAAA;AAAA;AAAA;AAAA,wBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAgCE,QAAC,GAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAET,YAAAA,KAAK,EAAE;AAAT,WAAb;AAA+B,UAAA,SAAS,EAAC,MAAzC;AAAA,kCACE,QAAC,IAAD,CAAM,MAAN;AAAa,YAAA,EAAE,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,mCACE,QAAC,SAAD;AAAW,cAAA,OAAO,EAAC,OAAnB;AAAA,sCACE,QAAC,SAAD,CAAW,IAAX;AAAA,wCACE,QAAC,IAAD,CAAM,IAAN;AAAA,0CACE;AAAG,oBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,0BADF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE;AAAA,qCAAW,SAASoB,MAAM,CAACjC,WAAD,CAAN,CAAoBkC,OAApB,CAA4B,CAA5B,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAQE,QAAC,SAAD,CAAW,IAAX;AAAA,wCACE,QAAC,IAAD,CAAM,IAAN;AAAA,0CACE;AAAG,oBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,0BADF,8BAC2D,GAD3D;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE;AAAA,qCAAW,SAASD,MAAM,CAAC7B,eAAD,CAAN,CAAwB8B,OAAxB,CAAgC,CAAhC,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAiED,CA9ND;;GAAMxE,I;UACaJ,W,EAoDaX,W,EACEA,W;;;KAtD5Be,I;AAgON,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { Navbar, Card, Badge, Col, Row, ListGroup } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getProjects } from \"../actions/project\";\nimport { getExpenseSheets } from \"../actions/expense.actions\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getProjects())\n      .then(() => {\n        console.log(\"Projects fetched successfully\");\n      })\n      .catch(() => {\n        console.log(\"Unable to fetch projects\");\n      });\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getExpenseSheets())\n      .then(() => {\n        console.log(\"Expenses fetched successfully\");\n      })\n      .catch(() => {\n        console.log(\"Unable to fetch Expenses\");\n      });\n  }, [dispatch]);\n\n  const SortCaret = (order, column) => {\n    if (!order)\n      return (\n        <span class=\"float-end\">\n          <font color=\"grey\">\n            &nbsp;&nbsp;<i className=\"bi bi-caret-up-fill\"></i>\n            <i className=\"bi bi-caret-down-fill\"></i>\n          </font>\n        </span>\n      );\n    else if (order === \"asc\")\n      return (\n        <span class=\"float-end\">\n          &nbsp;&nbsp;<i className=\"bi bi-caret-up-fill\"></i>\n          <font color=\"grey\">\n            <i className=\"bi bi-caret-down-fill\"></i>\n          </font>\n        </span>\n      );\n    else if (order === \"desc\")\n      return (\n        <span class=\"float-end\">\n          &nbsp;&nbsp;\n          <font color=\"grey\">\n            <i className=\"bi bi-caret-up-fill\"></i>\n          </font>\n          <i className=\"bi bi-caret-down-fill\"></i>\n        </span>\n      );\n    return null;\n  };\n  const { projects: content } = useSelector((state) => state.project);\n  const { entries: expContent } = useSelector((state) => state.expenseSheets);\n  const projectData = content.map((prj) => {\n    const ActiveStatus = prj.active ? \"Active\" : \"Inactive\";\n    const BadgeType = ActiveStatus === \"Active\" ? \"success\" : \"danger\";\n    const statusType = {\n      TO_DO: \"To-Do\",\n      IN_PROGRESS: \"In Progress\",\n      COMPLETED: \"Completed\",\n      SUSPENDED: \"Suspended\",\n    };\n    const soonDue = prj.soonDue ? (\n      <center>\n        <Badge bg=\"info\">Soon Due</Badge>\n      </center>\n    ) : (\n      \"\"\n    );\n    const prjData = {\n      projectActiveStatus: (\n        <center>\n          <Badge bg={BadgeType}>{ActiveStatus}</Badge>\n        </center>\n      ),\n      projectDueStatus: soonDue,\n      pName: prj.projectName,\n      projectStatus: statusType[prj.status],\n    };\n    return prjData;\n  });\n\n  function getSum(total, num) {\n    return total + num;\n  }\n  const totalAmount = expContent.map((entry) => entry.amount).reduce(getSum, 0);\n  const totalReimbursed = expContent\n    .filter((e) => e.status === \"APPROVED\")\n    .map((entry) => entry.amount)\n    .reduce(getSum, 0);\n\n  const columns = [\n    {\n      dataField: \"projectActiveStatus\",\n      text: \"\",\n      headerStyle: (colum, colIndex) => {\n        return { width: \"7rem\", textAlign: \"center\" };\n      },\n    },\n    {\n      dataField: \"projectDueStatus\",\n      text: \"\",\n      headerStyle: (colum, colIndex) => {\n        return { width: \"8rem\", textAlign: \"center\" };\n      },\n    },\n    {\n      dataField: \"pName\",\n      text: \"Project Name\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n    {\n      dataField: \"projectStatus\",\n      text: \"Status\",\n      sort: true,\n      sortCaret: SortCaret,\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"projectCode\",\n      order: \"asc\", //desc\n    },\n  ];\n\n  const customTotal = (from, to, size) => (\n    <span className=\"react-bootstrap-table-pagination-total\">\n      &nbsp; Showing {from} to {to} of {size} Results\n    </span>\n  );\n\n  const options = {\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    disablePageTitle: true,\n    sizePerPageList: [\n      {\n        text: \"5\",\n        value: 5,\n      },\n      {\n        text: \"10\",\n        value: 10,\n      },\n      {\n        text: \"All\",\n        value: projectData.length,\n      },\n    ],\n  };\n\n  const { SearchBar } = Search;\n\n  return (\n    <>\n      <Navbar expand=\"lg\" bg=\"light\">\n        <Navbar.Text>\n          &nbsp; <strong>Dashboard</strong>\n        </Navbar.Text>\n      </Navbar>\n      <br />\n      <Row id=\"myProjects\">\n        <Col sm={8}>\n          <Card style={{ width: \"95%\" }} className=\"ms-5\">\n            <Card.Header as=\"h4\">MY PROJECTS</Card.Header>\n            <Card.Body>\n              <ToolkitProvider\n                keyField=\"pName\"\n                data={projectData}\n                columns={columns}\n                search\n              >\n                {(props) => (\n                  <div>\n                    <SearchBar\n                      {...props.searchProps}\n                      srText=\"Search Projects :\"\n                      placeholder=\"Enter text\"\n                    />\n                    <br />\n                    <BootstrapTable\n                      {...props.baseProps}\n                      hover\n                      defaultSorted={defaultSorted}\n                      pagination={paginationFactory(options)}\n                      noDataIndication=\"No data available in table\"\n                    />\n                  </div>\n                )}\n              </ToolkitProvider>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col>\n          <Card style={{ width: \"90%\" }} className=\"ms-2\">\n            <Card.Header as=\"h4\">MY EXPENSE SUMMARY</Card.Header>\n            <Card.Body>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <Card.Text>\n                    <i className=\"bi bi-cash\"></i> Total Expenses Amount\n                  </Card.Text>\n                  <h2>&nbsp;{\"INR \" + Number(totalAmount).toFixed(2)}</h2>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Card.Text>\n                    <i className=\"bi bi-wallet\"></i> Total Reimbursed Amount{\" \"}\n                  </Card.Text>\n                  <h2>&nbsp;{\"INR \" + Number(totalReimbursed).toFixed(2)}</h2>\n                </ListGroup.Item>\n              </ListGroup>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}