{"ast":null,"code":"var _jsxFileName = \"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/AddProject.js\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport { CloseButton, Dropdown } from \"react-bootstrap\";\nimport { DropdownButton } from \"react-bootstrap\";\nimport Modal from \"react-bootstrap/Modal\";\nimport FileUpload from \"../FileUpload\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { FormControl } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddProject = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const schema = yup.object().shape({\n    projectName: yup.string().required(\"Project Name is Required\"),\n    projectDescription: yup.string(),\n    duration: yup.number(\"Duration must be a numerical value\").min(0, \"Minumim value must be 0\").required(\"Duration is Required\"),\n    cost: yup.number(\"Cost must be a numerical value\").min(0, \"Minumim value must be 0\").required(\"Cost is Required\")\n  });\n  const {\n    employees\n  } = useSelector(state => state.employees);\n  const {\n    clients\n  } = useSelector(state => state.client);\n  const {\n    user: currentUser\n  } = useSelector(state => state.auth);\n  const {\n    id\n  } = currentUser;\n  const k = employees.filter(e => e.id === id)[0];\n  const [membersAdded, setMembersAdded] = useState([{\n    firstname: \"\",\n    lastname: \"\",\n    id: -1\n  }]);\n\n  if (membersAdded.length === 1 && membersAdded[0].id === -1 && k !== undefined) {\n    let membersAdded_cpy = [k];\n    setMembersAdded(membersAdded_cpy);\n  }\n\n  const employees_cpy = [...employees]; // Dropdown needs access to the DOM of the Menu to measure it\n\n  const CustomMenu = /*#__PURE__*/React.forwardRef(_s(({\n    children,\n    style,\n    className,\n    \"aria-labelledby\": labeledBy\n  }, ref) => {\n    _s();\n\n    const [value, setValue] = useState(\"\");\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        autoFocus: true,\n        className: \"mx-3 my-2 w-auto\",\n        placeholder: \"Type to find...\",\n        onChange: e => setValue(e.target.value),\n        value: value,\n        ref: ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-unstyled\",\n        children: React.Children.toArray(children).filter(child => !value || child.props.children.toLowerCase().indexOf(value.toLowerCase()) >= 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\"));\n\n  const addMembers = id => () => {\n    const membersAdded_cpy = [...membersAdded];\n    const check = membersAdded_cpy.filter(m => m.id === id);\n    if (check.length !== 0) return;\n    const toAdd = employees_cpy.filter(e => e.id === id)[0];\n    console.log(toAdd);\n    membersAdded_cpy.push(toAdd);\n    setMembersAdded(membersAdded_cpy);\n    return;\n  };\n\n  const deleteMembers = id => () => {\n    const updateMembers = [...membersAdded].filter(m => m.id !== id);\n    setMembersAdded(updateMembers);\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    validationSchema: schema,\n    validateOnChange: true,\n    onSubmit: console.log,\n    initialValues: {\n      projectName: \"\",\n      projectDescription: \"\",\n      duration: 0.0,\n      cost: 0.0,\n      file: null\n    },\n    children: ({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      touched,\n      isValid,\n      errors\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Modal, { ...props,\n        size: \"lg\",\n        backdrop: \"static\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Add Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"projectName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Project Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                autoFocus: true,\n                name: \"projectName\",\n                value: values.projectName,\n                onChange: handleChange,\n                onBlur: handleBlur,\n                isInvalid: touched.projectName && errors.projectName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n            defaultActiveKey: \"basic\",\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              eventKey: \"basic\",\n              title: \"Basic\",\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"clientName\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Client Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    defaultValue: \"Choose...\",\n                    children: clients.map(client => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: client.fullName + \" (Client ID: \" + client.id + \")\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 149,\n                        columnNumber: 29\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"teamLead\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Team Lead\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    defaultValue: \"Choose...\",\n                    disabled: true,\n                    children: /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"---\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"projectManager\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Project Manager\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    defaultValue: \"Choose...\",\n                    children: employees.filter(e => e.role === 1).map(e => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: e.firstname + \" \" + e.lastname + \" (Employee ID: \" + e.id + \")\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 178,\n                        columnNumber: 31\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              eventKey: \"team\",\n              title: \"Team\",\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"teamMembers\",\n                  children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n                    title: \"Search and Add Team Members \",\n                    variant: \"secondary\",\n                    children: /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                      as: CustomMenu,\n                      children: employees.map(e => {\n                        return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                          eventKey: e.id,\n                          onClick: addMembers(e.id),\n                          children: e.firstname + \" \" + e.lastname + \" (Employee ID: \" + e.id + \")\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 205,\n                          columnNumber: 31\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 25\n                    }, this)\n                  }, \"down\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"teamMembers\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [\"Team Members: \", membersAdded.length]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: membersAdded.map(m => {\n                      return /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [m.firstname + \" \" + m.lastname + \" (Employee ID: \" + m.id + \")  \", /*#__PURE__*/_jsxDEV(Button, {\n                          className: \"m-0 p- border-0\",\n                          variant: \"outline-danger\",\n                          size: \"sm\",\n                          onClick: deleteMembers(m.id),\n                          disabled: m.id === id,\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            class: \"bi bi-x-lg\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 245,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 238,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 29\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              eventKey: \"approvals\",\n              title: \"Approvals\",\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"timeSheetApproval\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Timesheet Approval Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    defaultValue: \"Choose...\",\n                    children: /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Team Lead\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"expenseApproval\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Expense Approval Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    defaultValue: \"Choose...\",\n                    children: /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Project Manager\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              eventKey: \"advanced\",\n              title: \"Advanced\",\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"projDescription\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Project Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FloatingLabel, {\n                  controlId: \"projDescriptionText\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    placeholder: \"Leave a comment here\",\n                    style: {\n                      height: \"100px\"\n                    },\n                    name: \"projectDescription\",\n                    value: values.projectDescription,\n                    onChange: handleChange,\n                    isInvalid: !!errors.projectDescription\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.projectDescription\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"duration\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Duration (Hours)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    name: \"duration\",\n                    value: values.duration,\n                    onChange: handleChange,\n                    isInvalid: !!errors.duration\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Duration is required, and must be a number!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"estimatedCost\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Project Estimated Cost\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    name: \"cost\",\n                    value: values.cost,\n                    onChange: handleChange,\n                    isInvalid: !!errors.cost\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Cost is required, and must be a number!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"projectStatus\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Project Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    defaultValue: \"Choose...\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"To-Do\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"In progress\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Suspended\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Completed\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              eventKey: \"dates\",\n              title: \"Dates\",\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"startDate\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Start Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"dueDate\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Due Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              eventKey: \"attachment\",\n              title: \"Attachment\",\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FileUpload, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            type: \"submit\",\n            children: \"Add Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: props.onHide,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AddProject, \"Zaroe6CXBv6RXCD12jiBNnjUOp4=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = AddProject;\nexport default AddProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProject\");","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/AddProject.js"],"names":["React","Tabs","Tab","Form","Button","Row","Col","FloatingLabel","CloseButton","Dropdown","DropdownButton","Modal","FileUpload","Formik","yup","useSelector","useState","FormControl","AddProject","props","schema","object","shape","projectName","string","required","projectDescription","duration","number","min","cost","employees","state","clients","client","user","currentUser","auth","id","k","filter","e","membersAdded","setMembersAdded","firstname","lastname","length","undefined","membersAdded_cpy","employees_cpy","CustomMenu","forwardRef","children","style","className","labeledBy","ref","value","setValue","target","Children","toArray","child","toLowerCase","indexOf","addMembers","check","m","toAdd","console","log","push","deleteMembers","updateMembers","file","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors","map","fullName","role","height","onHide"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport { CloseButton, Dropdown } from \"react-bootstrap\";\nimport { DropdownButton } from \"react-bootstrap\";\nimport Modal from \"react-bootstrap/Modal\";\nimport FileUpload from \"../FileUpload\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { FormControl } from \"react-bootstrap\";\n\nconst AddProject = (props) => {\n  const schema = yup.object().shape({\n    projectName: yup.string().required(\"Project Name is Required\"),\n    projectDescription: yup.string(),\n    duration: yup\n      .number(\"Duration must be a numerical value\")\n      .min(0, \"Minumim value must be 0\")\n      .required(\"Duration is Required\"),\n    cost: yup\n      .number(\"Cost must be a numerical value\")\n      .min(0, \"Minumim value must be 0\")\n      .required(\"Cost is Required\"),\n  });\n\n  const { employees } = useSelector((state) => state.employees);\n  const { clients } = useSelector((state) => state.client);\n  const { user: currentUser } = useSelector((state) => state.auth);\n  const { id } = currentUser;\n  const k = employees.filter((e) => e.id === id)[0];\n  const [membersAdded, setMembersAdded] = useState([\n    { firstname: \"\", lastname: \"\", id: -1 },\n  ]);\n  if (\n    membersAdded.length === 1 &&\n    membersAdded[0].id === -1 &&\n    k !== undefined\n  ) {\n    let membersAdded_cpy = [k];\n    setMembersAdded(membersAdded_cpy);\n  }\n  const employees_cpy = [...employees];\n\n  // Dropdown needs access to the DOM of the Menu to measure it\n  const CustomMenu = React.forwardRef(\n    ({ children, style, className, \"aria-labelledby\": labeledBy }, ref) => {\n      const [value, setValue] = useState(\"\");\n\n      return (\n        <>\n          <Form.Control\n            autoFocus\n            className=\"mx-3 my-2 w-auto\"\n            placeholder=\"Type to find...\"\n            onChange={(e) => setValue(e.target.value)}\n            value={value}\n            ref={ref}\n          />\n          <ul className=\"list-unstyled\">\n            {React.Children.toArray(children).filter(\n              (child) =>\n                !value ||\n                child.props.children\n                  .toLowerCase()\n                  .indexOf(value.toLowerCase()) >= 0\n            )}\n          </ul>\n        </>\n      );\n    }\n  );\n\n  const addMembers = (id) => () => {\n    const membersAdded_cpy = [...membersAdded];\n    const check = membersAdded_cpy.filter((m) => m.id === id);\n    if (check.length !== 0) return;\n    const toAdd = employees_cpy.filter((e) => e.id === id)[0];\n    console.log(toAdd);\n    membersAdded_cpy.push(toAdd);\n    setMembersAdded(membersAdded_cpy);\n    return;\n  };\n\n  const deleteMembers = (id) => () => {\n    const updateMembers = [...membersAdded].filter((m) => m.id !== id);\n    setMembersAdded(updateMembers);\n    return;\n  };\n\n  return (\n    <Formik\n      validationSchema={schema}\n      validateOnChange={true}\n      onSubmit={console.log}\n      initialValues={{\n        projectName: \"\",\n        projectDescription: \"\",\n        duration: 0.0,\n        cost: 0.0,\n        file: null,\n      }}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Modal {...props} size=\"lg\" backdrop=\"static\">\n            <Modal.Header closeButton>\n              <Modal.Title>Add Project</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n              <Row>\n                <Form.Group as={Col} controlId=\"projectName\">\n                  <Form.Label>Project Name</Form.Label>\n                  <Form.Control\n                    autoFocus\n                    name=\"projectName\"\n                    value={values.projectName}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    isInvalid={touched.projectName && errors.projectName}\n                  />\n                </Form.Group>\n              </Row>\n              <br />\n              <Tabs defaultActiveKey=\"basic\">\n                <Tab eventKey=\"basic\" title=\"Basic\">\n                  <br />\n                  <Row>\n                    <Form.Group as={Col} controlId=\"clientName\">\n                      <Form.Label>Client Name</Form.Label>\n                      <Form.Select defaultValue=\"Choose...\">\n                        {clients.map((client) => {\n                          return (\n                            <option>\n                              {client.fullName +\n                                \" (Client ID: \" +\n                                client.id +\n                                \")\"}\n                            </option>\n                          );\n                        })}\n                      </Form.Select>\n                    </Form.Group>\n                    {/* <Form.Group as={Col} controlId=\"projectCode\">\n                      <Form.Label>Project Code</Form.Label>\n                      <Form.Control />\n                    </Form.Group> */}\n                  </Row>\n                  <Row>\n                    <Form.Group as={Col} controlId=\"teamLead\">\n                      <Form.Label>Team Lead</Form.Label>\n                      <Form.Select defaultValue=\"Choose...\" disabled>\n                        <option>---</option>\n                      </Form.Select>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"projectManager\">\n                      <Form.Label>Project Manager</Form.Label>\n                      <Form.Select defaultValue=\"Choose...\">\n                        {employees\n                          .filter((e) => e.role === 1)\n                          .map((e) => {\n                            return (\n                              <option>\n                                {e.firstname +\n                                  \" \" +\n                                  e.lastname +\n                                  \" (Employee ID: \" +\n                                  e.id +\n                                  \")\"}\n                              </option>\n                            );\n                          })}\n                      </Form.Select>\n                    </Form.Group>\n                  </Row>\n                </Tab>\n\n                <Tab eventKey=\"team\" title=\"Team\">\n                  <br />\n                  <Row>\n                    <Form.Group controlId=\"teamMembers\">\n                      <DropdownButton\n                        title=\"Search and Add Team Members \"\n                        variant=\"secondary\"\n                        key=\"down\"\n                      >\n                        <Dropdown.Menu as={CustomMenu}>\n                          {employees.map((e) => {\n                            return (\n                              <Dropdown.Item\n                                eventKey={e.id}\n                                onClick={addMembers(e.id)}\n                              >\n                                {e.firstname +\n                                  \" \" +\n                                  e.lastname +\n                                  \" (Employee ID: \" +\n                                  e.id +\n                                  \")\"}\n                              </Dropdown.Item>\n                            );\n                          })}\n                        </Dropdown.Menu>\n                      </DropdownButton>\n                    </Form.Group>\n                  </Row>\n                  <br />\n                  <Row>\n                    <Form.Group as={Col} controlId=\"teamMembers\">\n                      <Form.Label>\n                        <strong>Team Members: {membersAdded.length}</strong>\n                      </Form.Label>\n                      <ul>\n                        {membersAdded.map((m) => {\n                          return (\n                            <li>\n                              {m.firstname +\n                                \" \" +\n                                m.lastname +\n                                \" (Employee ID: \" +\n                                m.id +\n                                \")  \"}\n                              <Button\n                                className=\"m-0 p- border-0\"\n                                variant=\"outline-danger\"\n                                size=\"sm\"\n                                onClick={deleteMembers(m.id)}\n                                disabled={m.id === id}\n                              >\n                                <i class=\"bi bi-x-lg\"></i>\n                              </Button>\n                            </li>\n                          );\n                        })}\n                      </ul>\n                      {/* {membersAdded.map((m) => {\n                        return (\n                          <Form.Check\n                            type=\"checkbox\"\n                            label={\n                              m.firstname +\n                              \" \" +\n                              m.lastname +\n                              \" (Employee ID: \" +\n                              m.id +\n                              \")\"\n                            }\n                          />\n                        );\n                      })} */}\n                    </Form.Group>\n                  </Row>\n                </Tab>\n\n                <Tab eventKey=\"approvals\" title=\"Approvals\">\n                  <br />\n                  <Row>\n                    <Form.Group as={Col} controlId=\"timeSheetApproval\">\n                      <Form.Label>Timesheet Approval Type</Form.Label>\n                      <Form.Select defaultValue=\"Choose...\">\n                        <option>Team Lead</option>\n                        {/* <option>Project Manager</option> */}\n                      </Form.Select>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"expenseApproval\">\n                      <Form.Label>Expense Approval Type</Form.Label>\n                      <Form.Select defaultValue=\"Choose...\">\n                        <option>Project Manager</option>\n                        {/* <option>Team Lead</option> */}\n                      </Form.Select>\n                    </Form.Group>\n                  </Row>\n                </Tab>\n\n                <Tab eventKey=\"advanced\" title=\"Advanced\">\n                  <br />\n                  <Form.Group controlId=\"projDescription\">\n                    <Form.Label>Project Description</Form.Label>\n                    <FloatingLabel controlId=\"projDescriptionText\">\n                      <Form.Control\n                        as=\"textarea\"\n                        placeholder=\"Leave a comment here\"\n                        style={{ height: \"100px\" }}\n                        name=\"projectDescription\"\n                        value={values.projectDescription}\n                        onChange={handleChange}\n                        isInvalid={!!errors.projectDescription}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.projectDescription}\n                      </Form.Control.Feedback>\n                    </FloatingLabel>\n                  </Form.Group>\n                  <Row>\n                    <Form.Group as={Col} controlId=\"duration\">\n                      <Form.Label>Duration (Hours)</Form.Label>\n                      <Form.Control\n                        name=\"duration\"\n                        value={values.duration}\n                        onChange={handleChange}\n                        isInvalid={!!errors.duration}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        Duration is required, and must be a number!\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"estimatedCost\">\n                      <Form.Label>Project Estimated Cost</Form.Label>\n                      <Form.Control\n                        name=\"cost\"\n                        value={values.cost}\n                        onChange={handleChange}\n                        isInvalid={!!errors.cost}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        Cost is required, and must be a number!\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Group as={Col} controlId=\"projectStatus\">\n                      <Form.Label>Project Status</Form.Label>\n                      <Form.Select defaultValue=\"Choose...\">\n                        <option>To-Do</option>\n                        <option>In progress</option>\n                        <option>Suspended</option>\n                        <option>Completed</option>\n                      </Form.Select>\n                    </Form.Group>\n                    {/* <Form.Group as={Col} controlId=\"projectType\">\n                      <Form.Label>Project Type</Form.Label>\n                      <Form.Select defaultValue=\"Choose...\">\n                        <option>Technology</option>\n                        <option>HR</option>\n                      </Form.Select>\n                    </Form.Group> */}\n                  </Row>\n                </Tab>\n                <Tab eventKey=\"dates\" title=\"Dates\">\n                  <br />\n                  <Row>\n                    <Form.Group as={Col} controlId=\"startDate\">\n                      <Form.Label>Start Date</Form.Label>\n                      <Form.Control type=\"date\" />\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"dueDate\">\n                      <Form.Label>Due Date</Form.Label>\n                      <Form.Control type=\"date\" />\n                    </Form.Group>\n                  </Row>\n                  {/* <Form.Group as={Col} controlId=\"projectTemplate\">\n                    <Form.Label>Project Template</Form.Label>\n                    <Form.Select defaultValue=\"Select\">\n                      <option>Template1</option>\n                      <option>Template2</option>\n                    </Form.Select>\n                  </Form.Group> */}\n                </Tab>\n                <Tab eventKey=\"attachment\" title=\"Attachment\">\n                  <br />\n                  <FileUpload />\n                  {/* <FileUpload name=\"demo[]\" url=\"./upload\" /> */}\n                  {/* https://www.primefaces.org/primereact/showcase/#/fileupload */}\n                </Tab>\n              </Tabs>\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button variant=\"success\" type=\"submit\">\n                Add Project\n              </Button>\n              <Button variant=\"secondary\" onClick={props.onHide}>\n                Close\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddProject;\n"]},"metadata":{},"sourceType":"module"}