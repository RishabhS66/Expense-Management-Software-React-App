{"ast":null,"code":"var _jsxFileName = \"/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/ProjectSummary.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { getProjects } from \"../../actions/project\";\nimport ProjectSummaryHeader from \"./ProjectSummaryHeader\";\nimport ProjectSummaryDashboard from \"./ProjectSummaryDashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectSummary = () => {\n  _s();\n\n  const {\n    pid\n  } = useParams();\n  const dispatch = useDispatch();\n  const [content, setContent] = useState([]);\n  useEffect(() => {\n    dispatch(getProjects()).then(response => {\n      setContent(response.data);\n    }, error => {\n      const _content = error.response && error.response.data || error.message || error.toString();\n\n      setContent(_content);\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ProjectSummaryHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectSummaryDashboard, {\n      content: content,\n      id: pid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProjectSummary, \"L5Sr7zagQNmNa3aU+mppAn13FGs=\", false, function () {\n  return [useParams, useDispatch];\n});\n\n_c = ProjectSummary;\nexport default ProjectSummary;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectSummary\");","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/src/components/Project/ProjectSummary.js"],"names":["React","useParams","useDispatch","useState","useEffect","getProjects","ProjectSummaryHeader","ProjectSummaryDashboard","ProjectSummary","pid","dispatch","content","setContent","then","response","data","error","_content","message","toString"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,uBAAP,MAAoC,2BAApC;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAUR,SAAS,EAAzB;AACA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAACL,WAAW,EAAZ,CAAR,CAAwBQ,IAAxB,CACGC,QAAD,IAAc;AACZF,MAAAA,UAAU,CAACE,QAAQ,CAACC,IAAV,CAAV;AACD,KAHH,EAIGC,KAAD,IAAW;AACT,YAAMC,QAAQ,GACXD,KAAK,CAACF,QAAN,IAAkBE,KAAK,CAACF,QAAN,CAAeC,IAAlC,IACAC,KAAK,CAACE,OADN,IAEAF,KAAK,CAACG,QAAN,EAHF;;AAKAP,MAAAA,UAAU,CAACK,QAAD,CAAV;AACD,KAXH;AAaD,GAdQ,EAcN,CAACP,QAAD,CAdM,CAAT;AAgBA,sBACE;AAAA,4BACE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,uBAAD;AAAyB,MAAA,OAAO,EAAIC,OAApC;AAA6C,MAAA,EAAE,EAAEF;AAAjD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA3BD;;GAAMD,c;UACYP,S,EACCC,W;;;KAFbM,c;AA6BN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { getProjects } from \"../../actions/project\";\nimport ProjectSummaryHeader from \"./ProjectSummaryHeader\";\nimport ProjectSummaryDashboard from \"./ProjectSummaryDashboard\";\n\nconst ProjectSummary = () => {\n  const { pid } = useParams();\n  const dispatch = useDispatch();\n  const [content, setContent] = useState([]);\n  useEffect(() => {\n    dispatch(getProjects()).then(\n      (response) => {\n        setContent(response.data);\n      },\n      (error) => {\n        const _content =\n          (error.response && error.response.data) ||\n          error.message ||\n          error.toString();\n\n        setContent(_content);\n      }\n    );\n  }, [dispatch]);\n\n  return (\n    <div>\n      <ProjectSummaryHeader />\n      <br />\n      <ProjectSummaryDashboard content = {content} id={pid} />\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n"]},"metadata":{},"sourceType":"module"}