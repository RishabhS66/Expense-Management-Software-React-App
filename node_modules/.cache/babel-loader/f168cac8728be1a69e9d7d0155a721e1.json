{"ast":null,"code":"import { get, createParser } from '@styled-system/core';\nimport css from '@styled-system/css';\nexport var variant = function variant(_ref) {\n  var _config;\n\n  var scale = _ref.scale,\n      _ref$prop = _ref.prop,\n      prop = _ref$prop === void 0 ? 'variant' : _ref$prop,\n      _ref$variants = _ref.variants,\n      variants = _ref$variants === void 0 ? {} : _ref$variants,\n      key = _ref.key;\n  var sx;\n\n  if (Object.keys(variants).length) {\n    sx = function sx(value, scale, props) {\n      return css(get(scale, value, null))(props.theme);\n    };\n  } else {\n    sx = function sx(value, scale) {\n      return get(scale, value, null);\n    };\n  }\n\n  sx.scale = scale || key;\n  sx.defaults = variants;\n  var config = (_config = {}, _config[prop] = sx, _config);\n  var parser = createParser(config);\n  return parser;\n};\nexport default variant;\nexport var buttonStyle = variant({\n  key: 'buttons'\n});\nexport var textStyle = variant({\n  key: 'textStyles',\n  prop: 'textStyle'\n});\nexport var colorStyle = variant({\n  key: 'colorStyles',\n  prop: 'colors'\n});","map":{"version":3,"sources":["/Users/rissriva/Desktop/ExpenseManagementSystem/ExpenseManagement/frontend/node_modules/@styled-system/variant/dist/index.esm.js"],"names":["get","createParser","css","variant","_ref","_config","scale","_ref$prop","prop","_ref$variants","variants","key","sx","Object","keys","length","value","props","theme","defaults","config","parser","buttonStyle","textStyle","colorStyle"],"mappings":"AAAA,SAASA,GAAT,EAAcC,YAAd,QAAkC,qBAAlC;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAO,IAAIC,OAAO,GAAG,SAASA,OAAT,CAAiBC,IAAjB,EAAuB;AAC1C,MAAIC,OAAJ;;AAEA,MAAIC,KAAK,GAAGF,IAAI,CAACE,KAAjB;AAAA,MACIC,SAAS,GAAGH,IAAI,CAACI,IADrB;AAAA,MAEIA,IAAI,GAAGD,SAAS,KAAK,KAAK,CAAnB,GAAuB,SAAvB,GAAmCA,SAF9C;AAAA,MAGIE,aAAa,GAAGL,IAAI,CAACM,QAHzB;AAAA,MAIIA,QAAQ,GAAGD,aAAa,KAAK,KAAK,CAAvB,GAA2B,EAA3B,GAAgCA,aAJ/C;AAAA,MAKIE,GAAG,GAAGP,IAAI,CAACO,GALf;AAMA,MAAIC,EAAJ;;AAEA,MAAIC,MAAM,CAACC,IAAP,CAAYJ,QAAZ,EAAsBK,MAA1B,EAAkC;AAChCH,IAAAA,EAAE,GAAG,SAASA,EAAT,CAAYI,KAAZ,EAAmBV,KAAnB,EAA0BW,KAA1B,EAAiC;AACpC,aAAOf,GAAG,CAACF,GAAG,CAACM,KAAD,EAAQU,KAAR,EAAe,IAAf,CAAJ,CAAH,CAA6BC,KAAK,CAACC,KAAnC,CAAP;AACD,KAFD;AAGD,GAJD,MAIO;AACLN,IAAAA,EAAE,GAAG,SAASA,EAAT,CAAYI,KAAZ,EAAmBV,KAAnB,EAA0B;AAC7B,aAAON,GAAG,CAACM,KAAD,EAAQU,KAAR,EAAe,IAAf,CAAV;AACD,KAFD;AAGD;;AAEDJ,EAAAA,EAAE,CAACN,KAAH,GAAWA,KAAK,IAAIK,GAApB;AACAC,EAAAA,EAAE,CAACO,QAAH,GAAcT,QAAd;AACA,MAAIU,MAAM,IAAIf,OAAO,GAAG,EAAV,EAAcA,OAAO,CAACG,IAAD,CAAP,GAAgBI,EAA9B,EAAkCP,OAAtC,CAAV;AACA,MAAIgB,MAAM,GAAGpB,YAAY,CAACmB,MAAD,CAAzB;AACA,SAAOC,MAAP;AACD,CA1BM;AA2BP,eAAelB,OAAf;AACA,OAAO,IAAImB,WAAW,GAAGnB,OAAO,CAAC;AAC/BQ,EAAAA,GAAG,EAAE;AAD0B,CAAD,CAAzB;AAGP,OAAO,IAAIY,SAAS,GAAGpB,OAAO,CAAC;AAC7BQ,EAAAA,GAAG,EAAE,YADwB;AAE7BH,EAAAA,IAAI,EAAE;AAFuB,CAAD,CAAvB;AAIP,OAAO,IAAIgB,UAAU,GAAGrB,OAAO,CAAC;AAC9BQ,EAAAA,GAAG,EAAE,aADyB;AAE9BH,EAAAA,IAAI,EAAE;AAFwB,CAAD,CAAxB","sourcesContent":["import { get, createParser } from '@styled-system/core';\nimport css from '@styled-system/css';\nexport var variant = function variant(_ref) {\n  var _config;\n\n  var scale = _ref.scale,\n      _ref$prop = _ref.prop,\n      prop = _ref$prop === void 0 ? 'variant' : _ref$prop,\n      _ref$variants = _ref.variants,\n      variants = _ref$variants === void 0 ? {} : _ref$variants,\n      key = _ref.key;\n  var sx;\n\n  if (Object.keys(variants).length) {\n    sx = function sx(value, scale, props) {\n      return css(get(scale, value, null))(props.theme);\n    };\n  } else {\n    sx = function sx(value, scale) {\n      return get(scale, value, null);\n    };\n  }\n\n  sx.scale = scale || key;\n  sx.defaults = variants;\n  var config = (_config = {}, _config[prop] = sx, _config);\n  var parser = createParser(config);\n  return parser;\n};\nexport default variant;\nexport var buttonStyle = variant({\n  key: 'buttons'\n});\nexport var textStyle = variant({\n  key: 'textStyles',\n  prop: 'textStyle'\n});\nexport var colorStyle = variant({\n  key: 'colorStyles',\n  prop: 'colors'\n});\n"]},"metadata":{},"sourceType":"module"}